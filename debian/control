Source: nbis
Section: misc
Priority: optional
Maintainer: Michael Chaberski <mchaberski+dev@gmail.com>
Build-Depends: debhelper (>= 9), libpng12-dev (>= 1.2.46), libopenjpeg-dev (>= 1.2), libjpeg8-dev (>= 8c)
Standards-Version: 3.9.4
Homepage: http://www.nist.gov/itl/iad/ig/nbis.cfm
#Vcs-Git: git://git.debian.org/collab-maint/nbis.git
#Vcs-Browser: http://git.debian.org/?p=collab-maint/nbis.git;a=summary

Package: nbis
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}, libpng12-0 (>= 1.2.46), libopenjpeg2 (>= 1.2), libjpeg8 (>= 8c)
Description: Biometric fingerprint image analysis and matching utilities
 The NIST Biometric Image Software (NBIS) distribution is developed by 
 the National Institute of Standards and Technology (NIST) for the 
 Federal Bureau of Investigation (FBI) and Department of Homeland 
 Security (DHS). The NBIS distribution contains programs for biometrics
 processing and analysis. This description is adapted from the NBIS
 home page at http://www.nist.gov/itl/iad/ig/nbis.cfm.
 . 
 The NBIS utilities fall under eight general categories: 
 . 
 A reference implementation of the ANSI/NIST-ITL 1-2007 (AN2K) "Data 
 Format for the Interchange of Fingerprint, Facial, Scar Mark & Tattoo 
 (SMT) Information" standard is included. This reference 
 implementation contains a suite of utilities designed to read, write, 
 edit, and manipulate files formatted according to this interchange 
 standard. The utilities support updated and new record types 
 introduced by this latest version of the standard (Record Types 9, 
 13, 14, & 15).
 . 
 Development of a new major revision of the NFIQ algorithm started in 
 2011 â€“ further details on NFIQ 2.0 can be found here. fingerprint 
 image quality algorithm, NFIQ, which analyses a fingerprint image and 
 assigns a quality value of 1 (highest quality) 5(lowest quality) to 
 the image. Higher quality images produce significantly better 
 performance with matching algorithms. The ability to retrain the 
 NFIQ weights is provided with the utilities FING2PAT, ZNORMDAT, and 
 ZNORMPAT.
 . 
 A neural-network based fingerprint pattern classification system, 
 called PCASYS, automatically categorizes a fingerprint image into the 
 class of arch, left or right loop, scar, tented arch, or whorl. This 
 is an updated system that includes the use of a robust Multi-Layered 
 Perceptron (MLP) neural network. It is the only known no-cost system 
 of its kind.
 . 
 A minutiae detector called, MINDTCT, automatically locates and 
 records ridge ending and bifurcations in a fingerprint image. This 
 system includes minutiae quality assessment based on local image 
 conditions. The FBI's Universal Latent Workstation uses MINDTCT, and 
 it too is the only known no-cost system of its kind.
 . 
 A large collection of general-purpose image utilities (IMGTOOLS) are 
 also included to support the processing of fingerprint images. The 
 package includes encoders and decoders for the FBI's Wavelet Scalar 
 Quantization (WSQ) format. Utilities are also provided that support 
 color component interleaving, colorspace conversion, and format 
 conversion of legacy files distributed in NIST fingerprint databases.
 . 
 A fingerprint matching algorithm, BOZORTH3, which is a minutiae based 
 fingerprint matching algorithm. It will do both one-to-one and 
 one-to-many matching operations. It accepts minutiae generated by the 
 MINDTCT algorithm.
 . 
 A fingerprint segmentation algorithm, NFSEG, which will segment the 
 four-finger plain impression found on the bottom of a fingerprint 
 card into individual fingerprint images or it can be used to remove 
 white space from a rolled fingerprint image.
 . 
 A spectral validation/verification metric for fingerprint images, 
 SIVV, examines an input image with respect to expression of the 
 level-1 ridge flow in a 1-D representation of its power spectrum. 
 Relative power and frequency location of the dominant peak indicate 
 the presence of a fingerprint in the image, the approximate sample 
 rate, and provide a rough measure of fingerprint quality. The 
 algorithm is described in a technical report, NISTIR 7599.
