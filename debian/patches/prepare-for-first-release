Description: Prepare sources for building as a Debian package
 Changes made to prepare upstream sources for building as a Debian
 package include the removal of imaging library source code (in favor 
 of using imaging library packages in the Debian repositories), 
 generation of Makefile rules that were previously generated by a 
 custom shell script, the removal of obsolete files used in the 
 upstream build configuration, and edits to source code to resolve 
 runtime data in a manner that follows conventions on Debian systems 
 (such as reading architecture-independent runtime data from a system
 directory like /usr/share/nbis).
 .
 nbis (4.2.0-1) unstable; urgency=low
 .
    * Initial release (Closes: #12)
    * added line that substitutes appropriate buildutil path into
    p_rules.mak files
    * tilde_filename: collapsed add_path=2 option into add_path=1; i.e.
    now tilde_filename always substitutes the installed runtime data
    dir (if no tilde expansion is required)
    * added source code files formerly created by setup.sh (via sed
    substitution from XXX.c.src to XXX.c)
    * added rules.mak, which was formerly generated by setup.sh; this
    is now a static version
    * removed unnecessary imaging library directories (ijg, jpeg2k, png,
    openjpeg)
    * generated p_rules.mak files from p_rules.mak.src, eliminating
    need for that step in make config target
    * removed make target dependence on libopenjpeg.a and libpng.a
    * corrected openjpeg #include directive
    * replaced sed substitution with preprecessor #define for runtime
    data directory paths (in an2k, pcasys, etc.)
    * Makefile: removed install and catalog dependencies from all
    target divided install target into dependencies -mkdirs,
    -runtimedata, -headers, -libnbis, -bins removed cruft relating to
    jpeg2k, png, and openjpg packages from install-headers replaced
    usages of FINAL_INSTALLATION_DIR with new INSTALL_ROOT_XXX_DIR
    convention
    * rules.mak: using auto-detection of top-level directory via
    MAKEFILE_LIST; eliminated obsolete variables; added stuff to CFLAGS
    to define runtime data directories (e.g. for an2k, pcasys); added
    openjpeg and png libraries to LDFLAGS
    * .gitignore: added stuff that make generates to ignore list
    * Makefile: split install-mkdirs up into relevant targets; removed
    -headers and -libnbis from install target dependencies (because
    these would be more appropriate in a libnbis-dev package; added
    statement to install ijg binaries that were previously missing
    * removed obsolete makefile inputs and outdated install instructions
    * modified install target to fix permissions on manual and runtime
    data files
    * improved clean target to catch remaining *.d files and
    bin/obj/lib directories, as well as exports and doc/catalogs
    * added apache license header to files that differ from upstream
    * moved LDFLAGS to near end of gcc command, before output
    specification
    * added deb hardening environment variables (issue #3)
    * removed obsolete third-party makefile rules
    * fixed spelling error (completly instead of completely)
    (issue #2); removed obsolete select.c.xxx files
    * fixed spelling error in manpages chkan2k.1 and pcasys.1
    (issue #8)
    * removed references to jpegb (issue #4); this (unfortunately)
    removes support for JPEG-Baseline, a popular image format, but the
    lintian error (tag embedded-library) would have caused a build
    failure on Launchpad
    * fixed spelling errors in chkan2k.1, pcasys.1, nfiq.c
    * added debian watch file
    * replaced bad groff_man macros with alternatives; not sure what
    original meaning was in all cases, but this should resolve most of
    issue #10 (except for the error regarding record_selector.1)
    * added missing man pages for dlwsqcom and optrwsgw (issue #6)
    * replaced 1[ABCDEFG] with 1 to resolve manpage section mismatches
    (issue #5)
    * restricted man page installation to binaries that get installed
    (instead of everything from the man/man1 source directory)
    * removed verbose echo statements from clean targets
Author: Michael Chaberski <mchaberski+dev@gmail.com>
Bug-Debian: http://bugs.debian.org/12

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

Index: nbis-4.2.0/LICENSE
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ nbis-4.2.0/LICENSE	2013-12-17 13:29:27.000000000 -0500
@@ -0,0 +1,202 @@
+Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "{}"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright {yyyy} {name of copyright owner}
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+
Index: nbis-4.2.0/Makefile
===================================================================
--- nbis-4.2.0.orig/Makefile	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/Makefile	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -78,6 +102,7 @@
 # help -- print help manual.
 #
 # ******************************************************************************
+
 include ./rules.mak
 #
 # ******************************************************************************
@@ -86,11 +111,8 @@
 # Target to make all libraries and executables.
 # 
 # ******************************************************************************
-all: \
-	config \
-	it \
-	install \
-	catalog
+all: config it
+
 #
 # ******************************************************************************
 #
@@ -99,6 +121,8 @@
 #
 # ******************************************************************************
 config:
+	@echo "TOP = "$(TOP)
+	@echo "DIR_ROOT = "$(DIR_ROOT)
 	@echo "Start: Checking \"$(PROJ_NAME)\" directory structure...."
 	@for dir in $(PACKAGES); do \
 		echo "Verifying directory - \"$(DIR_ROOT)/$$dir\":"; \
@@ -143,14 +167,6 @@
 		fi; \
 	done
 	@echo "End: Checking exports and calatogs directories structure"
-	@echo "Start: Generating all the p_rules.mak."
-	@for package in $(PACKAGES); do \
-		echo "Generating $(DIR_ROOT)/$$package/p_rules.mak..."; \
-		$(CAT)  $(DIR_ROOT)/$$package/p_rules.mak.src | \
-		$(SED) 's,SED_RULES_STRING,'$(DIR_ROOT)/rules.mak',' \
-		> $$package/p_rules.mak; \
-	done
-	@echo "End: Generating all the p_rules.mak."
 	@for package in $(PACKAGES); do \
 		(cd $(DIR_ROOT)/$$package && $(MAKE) config) || exit 1; \
 	done
@@ -171,6 +187,16 @@
 	@for package in $(PACKAGES); do \
 		(cd $(DIR_ROOT)/$$package && $(MAKE) bins) || exit 1; \
 	done
+
+install-libnbis:
+	@echo "Start: Creating libnbis.a..."; 
+	$(MKDIR_P) -v $(INSTALL_ROOT_LIB_DIR)
+	$(RM) $(INSTALL_ROOT_LIB_DIR)/libnbis.a
+	@for package in $(PACKAGES); do \
+		$(AR) -r $(INSTALL_ROOT_LIB_DIR)/libnbis.a $$package/lib/*.a ; \
+	done
+	@echo "End: Creating libnbis.a."; \
+
 #
 # ******************************************************************************
 #
@@ -179,98 +205,59 @@
 # directory.
 #
 # ******************************************************************************
-install:
-	@echo "Start: Checking Final Installation directories structure...."
-	@for dir in $(INSTALL_ROOT_INC_DIR) $(INSTALL_ROOT_BIN_DIR) $(INSTALL_ROOT_LIB_DIR) $(INSTALL_RUNTIME_DATA_DIR); do \
-		status=0; \
-		if [ ! -d $$dir ]; then \
-			echo "Creating \"$$dir\" directory...."; \
-			$(MKDIR) $$dir; \
-			echo "[PASSED]"; \
-			status=1; \
-		elif [ -d $$dir ]; then \
-			echo "Directory \"$$dir\" already exist:"; \
-			echo "[PASSED]"; \
-			status=1; \
-		fi; \
-		if [ $$status = 0 ]; then \
-			echo "[FAILED]"; \
-			exit 2; \
-		fi; \
-	done
-	@echo "End: Checking Final Installation directories structure."
+
+install: install-runtimedata install-bins install-man
+
+install-headers:
 	@echo "Start: Copying header files for each package to \"$(INSTALL_ROOT_INC_DIR)\"...."
+	$(MKDIR_P) -v $(INSTALL_ROOT_INC_DIR)
 	@for package in $(PACKAGES); do \
 		if [ $$package = "ijg" ]; then \
-			echo "$(CP) -Rpf $(DIR_ROOT)/$$package/src/lib/jpegb/*.h $(INSTALL_ROOT_INC_DIR)"; \
-			($(CP) -Rpf $(DIR_ROOT)/$$package/src/lib/jpegb/*.h $(INSTALL_ROOT_INC_DIR)) || exit 1; \
-		elif [ $$package = "jpeg2k" ]; then \
-			echo "$(CP) -Rpf $(DIR_ROOT)/$$package/src/lib/jpeg2k/*.h $(INSTALL_ROOT_INC_DIR)"; \
-			($(CP) -Rpf $(DIR_ROOT)/$$package/src/lib/jasper/src/libjasper/include/jasper $(INSTALL_ROOT_INC_DIR)) || exit 1; \
-			$(RM) $(EXPORTS_INC_DIR)/jasper/Makefile*; \
-		elif [ $$package = "png" ]; then \
-			echo "$(CP) -Rpf $(DIR_ROOT)/$$package/src/lib/png/*.h $(INSTALL_ROOT_INC_DIR)"; \
-			($(CP) -Rpf $(DIR_ROOT)/$$package/src/lib/png/*.h $(INSTALL_ROOT_INC_DIR)) || exit 1; \
-			echo "$(CP) -Rpf $(DIR_ROOT)/$$package/src/lib/zlib/*.h $(INSTALL_ROOT_INC_DIR)"; \
-			($(CP) -Rpf $(DIR_ROOT)/$$package/src/lib/zlib/*.h $(INSTALL_ROOT_INC_DIR)) || exit 1; \
-		elif [ $$package = "openjpeg" ]; then \
-			echo "$(CP) -Rpf $(DIR_ROOT)/$$package/src/lib/openjpeg/libopenjpeg/*.h $(INSTALL_ROOT_INC_DIR)/openjpeg"; \
-			$(MKDIR) $(INSTALL_ROOT_INC_DIR)/openjpeg; \
-			($(CP) -Rpf $(DIR_ROOT)/$$package/src/lib/openjpeg/libopenjpeg/*.h $(INSTALL_ROOT_INC_DIR)/openjpeg) || exit 1; \
-			echo "$(CP) -Rpf $(DIR_ROOT)/$$package/src/lib/openjpeg/codec/*.h $(INSTALL_ROOT_INC_DIR)/codec"; \
-			$(MKDIR) $(INSTALL_ROOT_INC_DIR)/codec; \
-			($(CP) -Rpf $(DIR_ROOT)/$$package/src/lib/openjpeg/codec/*.h $(INSTALL_ROOT_INC_DIR)/codec) || exit 1; \
+#			echo "$(CP) -Rpf $(DIR_ROOT)/$$package/src/lib/jpegb/*.h $(INSTALL_ROOT_INC_DIR)"; \
+			($(CP) -vRpf $(DIR_ROOT)/$$package/src/lib/jpegb/*.h $(INSTALL_ROOT_INC_DIR)) || exit 1; \
 		else \
-			echo "$(CP) -Rpf $(DIR_ROOT)/$$package/include/* $(INSTALL_ROOT_INC_DIR)"; \
-			($(CP) -Rpf $(DIR_ROOT)/$$package/include/* $(INSTALL_ROOT_INC_DIR)) || exit 1; \
+#			echo "$(CP) -Rpf $(DIR_ROOT)/$$package/include/* $(INSTALL_ROOT_INC_DIR)"; \
+			($(CP) -vRpf $(DIR_ROOT)/$$package/include/* $(INSTALL_ROOT_INC_DIR)) || exit 1; \
 		fi; \
 	done
 	$(RM) $(INSTALL_ROOT_INC_DIR)/little.h.src 
-	@echo "End: Copying header files for each package to \"$(INSTALL_RUNTIME_DATA_DIR)\"."
-	@echo "Start: Copying manual directory to \"$(FINAL_INSTALLATION_DIR)\"...."
-	@if [ ! -d $(FINAL_INSTALLATION_DIR)/man/man1 ]; then \
-		echo "Creating man/man1\" directory...."; \
-		$(MKDIR) $(FINAL_INSTALLATION_DIR)/man; \
-		$(MKDIR) $(FINAL_INSTALLATION_DIR)/man/man1; \
-	fi
-	@if [ "$(MAN_DIR)/man1" != "$(FINAL_INSTALLATION_DIR)/man/man1" ]; then \
-		echo "$(CP) -Rpf $(MAN_DIR)/man1 $(FINAL_INSTALLATION_DIR)/man/man1"; \
-		$(CP) -pf $(MAN_DIR)/man1/* $(FINAL_INSTALLATION_DIR)/man/man1; \
-	else \
-		echo "Copy ignored: identical files."; \
-	fi
-	@echo "End: Copying manual directory to \"$(FINAL_INSTALLATION_DIR)\"."
+	@echo "End: Copying header files for each package to \"$(INSTALL_ROOT_INC_DIR)\"."
+
+install-bins:
+	@echo "Start: Installing binaries to target directory: "$(INSTALL_ROOT_BIN_DIR)
+	$(MKDIR_P) -v $(INSTALL_ROOT_BIN_DIR)
+	@for package in $(PACKAGES); do \
+		if [ $$package != "ijg" -a $$package != "commonnbis" ]; then \
+			echo "installing " $$package/bin/* ; \
+			$(INSTALL_CMD) -t $(INSTALL_ROOT_BIN_DIR) $$package/bin/* || exit 1 ; \
+		fi ; \
+	done
+#	@for ijgbinary in cjpeg djpeg jpegtran wrjpgcom rdjpgcom ; do \
+#		$(INSTALL_CMD) -t $(INSTALL_ROOT_BIN_DIR) ijg/src/lib/jpegb/$$ijgbinary ; \
+#	done
+	@echo "End: Installing binaries"
+
+install-man:
+	@echo "Start: Installing man pages to \"$(INSTALL_ROOT_MAN_DIR)\"...."
+	$(MKDIR_P) $(INSTALL_ROOT_MAN_DIR)
+	@for manpage in $(MANPAGES) ; do \
+		$(INSTALL_CMD) -m0644 -t $(INSTALL_ROOT_MAN_DIR) \
+				$(MAN_SRC_DIR)/$$manpage || exit 1 ; \
+	done
+	@echo "End: Installing man pages to \"$(INSTALL_ROOT_MAN_DIR)\"."
+
+install-runtimedata:
 	@echo "Start: Copying runtime data directories to \"$(INSTALL_RUNTIME_DATA_DIR)\"...."
+	$(MKDIR_P) -v $(INSTALL_RUNTIME_DATA_DIR)
 	@for datadir in $(RUNTIME_DATA_PACKAGES); do \
 		echo "$(CP) -Rf $(DIR_ROOT)/$$datadir/$(RUNTIME_DATA_DIR) $(INSTALL_RUNTIME_DATA_DIR)/$$datadir"; \
 		($(CP) -Rf \
 			$(DIR_ROOT)/$$datadir/$(RUNTIME_DATA_DIR) \
 			$(INSTALL_RUNTIME_DATA_DIR)/$$datadir) || exit 1; \
 	done
+	find "$(INSTALL_RUNTIME_DATA_DIR)" -type f -print0 | xargs -0 chmod 0644
 	@echo "End: Copying runtime data directories to \"$(INSTALL_RUNTIME_DATA_DIR)\"."
-	@for package in $(PACKAGES); do \
-		if [ $$package = "jpeg2k" ]; then \
-			echo "$(CP) -Rpf $(DIR_ROOT)/$$package/src/lib/jasper/bin/jasper $(FINAL_INSTALLATION_DIR)/bin/jp2codec"; \
-			($(CP) -Rpf $(DIR_ROOT)/$$package/src/lib/jasper/bin/jasper $(FINAL_INSTALLATION_DIR)/bin/jp2codec) || exit 1; \
-			echo "$(CP) -Rpf $(DIR_ROOT)/$$package/src/lib/jasper/bin/imgcmp $(FINAL_INSTALLATION_DIR)/bin/imgcmp"; \
-			($(CP) -Rpf $(DIR_ROOT)/$$package/src/lib/jasper/bin/imgcmp $(FINAL_INSTALLATION_DIR)/bin/.) || exit 1; \
-			echo "$(CP) -Rpf $(DIR_ROOT)/$$package/src/lib/jasper/bin/imginfo $(FINAL_INSTALLATION_DIR)/bin/imginfo"; \
-			($(CP) -Rpf $(DIR_ROOT)/$$package/src/lib/jasper/bin/imginfo $(FINAL_INSTALLATION_DIR)/bin/.) || exit 1; \
-		fi;\
-		(cd $(DIR_ROOT)/$$package && $(MAKE) install) || exit 1; \
-	done
-
-	@if [ "$(LIBNBIS)" = "yes" ]; then \
-		echo "Start: Creating libnbis.a..."; \
-		(cd $(FINAL_INSTALLATION_DIR)/lib && $(RM) libnbis.a) || exit 1; \
-		(cd $(FINAL_INSTALLATION_DIR)/lib && $(AR) -ru libnbis.a *.a) || exit 1; \
-		(cd $(FINAL_INSTALLATION_DIR)/lib && $(MV) libnbis.a libnbis.a.temp) || exit 1; \
-		(cd $(FINAL_INSTALLATION_DIR)/lib && $(RM) *.a) || exit 1; \
-		(cd $(FINAL_INSTALLATION_DIR)/lib && $(MV) libnbis.a.temp libnbis.a) || exit 1; \
-		echo "End: Creating libnbis.a."; \
-	else \
-		(cd $(FINAL_INSTALLATION_DIR)/lib && $(RM) libnbis.a) || exit 1; \
-	fi
+
 #
 # ******************************************************************************
 #
@@ -281,10 +268,17 @@
 clean:
 	$(RM) $(DOC_CATS_DIR)/*txt
 	@for package in $(PACKAGES); do \
-		echo "Start: Cleaning up $$package...."; \
+#		echo "Start: Cleaning up $$package...."; \
 		(cd $(DIR_ROOT)/$$package && $(MAKE) clean) || exit 1; \
-		echo "End: Cleaning up $$package."; \
+		echo "Cleaned $$package."; \
 	done
+	@find * -type f -name "*.d" -delete
+	$(RM) -r exports doc/catalogs
+	@for package in an2k bozorth3 commonnbis imgtools mindtct nfiq nfseg pcasys ; do \
+		$(RM) -r $$package/bin $$package/lib $$package/obj ; \
+	done
+#	$(RM) -r ijg/dummy
+
 #
 # ******************************************************************************
 # 
Index: nbis-4.2.0/README.md
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ nbis-4.2.0/README.md	2013-12-17 13:29:27.000000000 -0500
@@ -0,0 +1,6 @@
+nbis
+====
+
+Fork of NBIS (NIST Biometric Image Software) for building and packaging on 
+Linux. Upstream sources are public domain, but modifications are 
+Apache-licensed.
Index: nbis-4.2.0/an2k/include/an2k.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ nbis-4.2.0/an2k/include/an2k.h	2013-12-17 13:29:27.000000000 -0500
@@ -0,0 +1,908 @@
+/**********************************************************************
+ * 
+ *  This file is part of a fork of NIST Biometric Image Software. 
+ *  Modifications to the upstream source code are distributed under the
+ *  following terms: 
+ * 
+ *     Copyright 2013 Michael Chaberski
+ * 
+ *     Licensed under the Apache License, Version 2.0 (the "License");
+ *     you may not use this file except in compliance with the License.
+ *     You may obtain a copy of the License at
+ * 
+ *         http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ *     Unless required by applicable law or agreed to in writing, software
+ *     distributed under the License is distributed on an "AS IS" BASIS,
+ *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *     See the License for the specific language governing permissions and
+ *     limitations under the License.
+ * 
+ *  The original source code is a work in the public domain. The original 
+ *  license and disclaimers are below.
+ * 
+ *  BEGIN ORIGINAL LICENSE TEXT                                       
+ **********************************************************************/
+/*******************************************************************************
+
+License: 
+This software and/or related materials was developed at the National Institute
+of Standards and Technology (NIST) by employees of the Federal Government
+in the course of their official duties. Pursuant to title 17 Section 105
+of the United States Code, this software is not subject to copyright
+protection and is in the public domain. 
+
+This software and/or related materials have been determined to be not subject
+to the EAR (see Part 734.3 of the EAR for exact details) because it is
+a publicly available technology and software, and is freely distributed
+to any interested party with no licensing requirements.  Therefore, it is 
+permissible to distribute this software as a free download from the internet.
+
+Disclaimer: 
+This software and/or related materials was developed to promote biometric
+standards and biometric technology testing for the Federal Government
+in accordance with the USA PATRIOT Act and the Enhanced Border Security
+and Visa Entry Reform Act. Specific hardware and software products identified
+in this software were used in order to perform the software development.
+In no case does such identification imply recommendation or endorsement
+by the National Institute of Standards and Technology, nor does it imply that
+the products and equipment identified are necessarily the best available
+for the purpose.
+
+This software and/or related materials are provided "AS-IS" without warranty
+of any kind including NO WARRANTY OF PERFORMANCE, MERCHANTABILITY,
+NO WARRANTY OF NON-INFRINGEMENT OF ANY 3RD PARTY INTELLECTUAL PROPERTY
+or FITNESS FOR A PARTICULAR PURPOSE or for any purpose whatsoever, for the
+licensed product, however used. In no event shall NIST be liable for any
+damages and/or costs, including but not limited to incidental or consequential
+damages of any kind, including economic damage or injury to property and lost
+profits, regardless of whether NIST shall be advised, have reason to know,
+or in fact shall know of the possibility.
+
+By using this software, you agree to bear all risk relating to quality,
+use and performance of the software and/or related materials.  You agree
+to hold the Government harmless from any claim arising from your use
+of the software.
+
+*******************************************************************************/
+
+/***********************************************************************
+      PACKAGE: ANSI/NIST 2007 Standard Reference Implementation
+
+      FILE:    AN2K.H
+
+      AUTHORS: Michael D. Garris
+      DATE:    03/28/2000
+      UPDATED: 03/08/2005
+               10/10/2007 (Kenneth Ko)
+               12/12/2007 (Kenneth Ko)
+               01/31/2008 (Kenneth Ko)
+               02/27/2008 Joseph C. Konczal
+      UPDATE:  01/26/2008 jck - report more details when things go wrong
+
+***********************************************************************/
+#ifndef _AN2K_H
+#define _AN2K_H
+
+#include <stdio.h>  /* Needed for references to (FILE *) below */
+#include <stdlib.h> /* Added by MDG on 03-08-05 */
+#include <string.h> /* Added by MDG on 03-08-05 */
+#include <stdarg.h> /* Added by JCK on 03-06-08 - for varargs macros */
+#include <errno.h>  /* Added by JCK on 01-22-09 */
+
+#define SHORT_READ_ERR_MSG(fp) ((ferror(fp) != 0) ? strerror(errno) : "premature EOF")
+
+#define SHORT_SCAN_READ_ERR_MSG(fp, bdb) ((fp != NULL) ?		\
+    ((ferror(fp) != 0) ? strerror(errno) : "premature EOF")		\
+     : "buffer exhausted")
+
+/*
+ * A structure to represent the buffer is wrapped for safety, and contains
+ * the start, current, end pointer values.
+ */
+typedef struct basic_data_buffer {
+    int bdb_size;		/* Max size of the buffer */
+    unsigned char *bdb_start;	/* Beginning read/write location */
+    unsigned char *bdb_end;	/* End read/write location */
+    unsigned char *bdb_current;	/* Current read/write location */
+} AN2KBDB;
+
+#define INIT_AN2KBDB(bdb, ptr, size) do {		\
+    (bdb)->bdb_size = size;				\
+    (bdb)->bdb_start = (bdb)->bdb_current = ptr;	\
+    (bdb)->bdb_end = ptr + size;			\
+} while (0)
+
+/* characters in items */
+typedef struct item{
+   int num_bytes;   /* Always contains the current byte size of the entire */
+                    /* item including any trailing US separator.           */
+   int num_chars;   /* Number of characters currently in value, NOT  */
+                    /* including the NULL terminator.                */
+   int alloc_chars; /* Number of allocated characters for the value, */
+                    /* including the NULL terminator.                */
+   unsigned char *value;  /* Must keep NULL terminated.              */
+   int us_char;
+} ITEM;
+
+/* items in subfields */
+typedef struct subfield{
+   int num_bytes;
+   int num_items;
+   int alloc_items;
+   ITEM **items;
+   int rs_char;
+} SUBFIELD;
+
+/* subfields in fields */
+typedef struct field{
+   char *id;
+   unsigned int record_type;
+   unsigned int field_int;
+   int num_bytes;
+   int num_subfields;
+   int alloc_subfields;
+   SUBFIELD **subfields;
+   int gs_char;
+} FIELD;
+
+/* fields in records */
+typedef struct record{
+   unsigned int type;
+   int total_bytes;
+   int num_bytes;
+   int num_fields;
+   int alloc_fields;
+   FIELD **fields;
+   int fs_char;
+} RECORD;
+
+/* records in ANSI_NIST file */
+typedef struct ansi_nist{
+   unsigned int version;
+   int num_bytes;
+   int num_records;
+   int alloc_records;
+   RECORD **records;
+} ANSI_NIST;
+
+/* criteria used to select records of interest:
+
+  These structures are designed to represent combinations of criteria
+  used to select single or multiple records out of an2k files.
+  Criteria can be combined using boolean operations such as 'and'
+  and/or 'or'.  These structures can be nested in order to represent
+  various combinations of criteria combined using different boolean
+  operators.
+ */
+typedef enum rec_sel_type_e {
+   rs_and = 1000,
+   rs_or,
+   rs_lrt,			/* logical record type */
+   rs_fgplp,			/* finger or palm position */
+   rs_fgp,			/* finger position */
+   rs_plp,			/* palm position */
+   rs_imp,			/* impression type */
+   rs_idc,			/* image descriptor chararacter */
+   rs_nqm,			/* NIST quality metric */
+   rs_imt,
+   rs_pos			/* subject pose */
+} REC_SEL_TYPE;
+
+typedef enum rec_sel_value_type_e {
+   rsv_rs = 2000,
+   rsv_num,
+   rsv_str
+} REC_SEL_VALUE_TYPE;
+
+typedef union rec_sel_value_u {
+   long num;  /* initialization assumes a pointer is never larger than a long */
+   char *str;
+   struct rec_sel_s **rs;
+} REC_SEL_VALUE;
+
+typedef struct rec_sel_s {
+   REC_SEL_TYPE type;
+   int alloc_values;
+   int num_values;
+   REC_SEL_VALUE value;
+} REC_SEL;
+
+/* end of record selection criteria */
+
+/* Structures to hold segmentation data */
+typedef struct polygon_s {
+   int fgp;
+   int num_points;
+   int *x;
+   int *y;
+} POLYGON;
+
+typedef struct segments_s {
+   int num_polygons;
+   POLYGON *polygons;
+} SEGMENTS;
+/* End of segmentation data structures */
+
+#define ANSI_NIST_CHUNK   100
+#ifndef TRUE
+#define TRUE              1
+#define FALSE             0
+#endif
+#define UNSET             -1
+#define DONE              2
+#define MORE              3
+#define UNDEFINED_INT     -1
+#ifndef IGNORE
+#define IGNORE            2
+#endif
+
+#define TYPE_1_ID         1
+#define TYPE_1_NUM_MANDATORY_FIELDS 9
+#define TYPE_2_ID         2
+#define TYPE_3_ID         3
+#define TYPE_4_ID         4
+#define TYPE_5_ID         5
+#define TYPE_6_ID         6
+#define TYPE_7_ID         7
+#define TYPE_8_ID         8
+#define TYPE_9_ID         9
+#define TYPE_10_ID       10
+#define TYPE_11_ID       11
+#define TYPE_12_ID       12
+#define TYPE_13_ID       13
+#define TYPE_14_ID       14
+#define TYPE_15_ID       15
+#define TYPE_16_ID       16
+#define TYPE_17_ID       17
+#define TYPE_99_ID       99
+
+/* Type-1 Field IDs */
+#define LEN_ID            1
+#define VER_ID            2
+#define CNT_ID            3
+#define TOT_ID            4
+#define DAT_ID            5
+#define PRY_ID            6
+#define DAI_ID            7
+#define ORI_ID            8
+#define TCN_ID            9
+#define TCR_ID           10
+#define NSR_ID           11
+#define NTR_ID           12
+#define DOM_ID           13
+#define GMT_ID           14
+#define DCS_ID           15
+
+#define IDC_FMT           "%02d"
+#define FLD_FMT           "%d.%03d:"
+#define ASCII_CSID        0
+
+
+/* ANSI/NIST-CSL 1-1993 */
+#define VERSION_0200      200
+/* ANSI/NIST-ITL 1a-1997 */
+#define VERSION_0201      201
+/* ANSI/NIST-ITL 1-2000 */
+#define VERSION_0300      300
+/* ANSI/NIST-ITL 1-2007 */
+#define VERSION_0400      400
+
+#define FS_CHAR           0x1C
+#define GS_CHAR           0x1D
+#define RS_CHAR           0x1E
+#define US_CHAR           0x1F
+
+extern unsigned int tagged_records[];
+#define NUM_TAGGED_RECORDS           10
+
+extern unsigned int binary_records[];
+#define NUM_BINARY_RECORDS           6
+
+extern unsigned int tagged_image_records[];
+#define NUM_TAGGED_IMAGE_RECORDS     7
+#define IMAGE_FIELD                999
+
+extern unsigned int binary_image_records[];
+#define NUM_BINARY_IMAGE_RECORDS     5
+#define BINARY_LEN_BYTES             4
+#define BINARY_IDC_BYTES             1
+#define BINARY_IMP_BYTES             1
+#define BINARY_FGP_BYTES             6
+#define BINARY_ISR_BYTES             1
+#define BINARY_HLL_BYTES             2
+#define BINARY_VLL_BYTES             2
+#define BINARY_CA_BYTES              1
+#define NUM_BINARY_IMAGE_FIELDS      9
+
+/* Type-3,4,5,6 Field IDs */
+/* LEN_ID       1 defined above */
+#define IDC_ID                       2
+#define IMP_ID                       3
+#define FGP_ID                       4
+#define ISR_ID                       5
+#define HLL_ID                       6
+#define VLL_ID                       7
+#define BIN_CA_ID                    8
+#define BIN_IMAGE_ID                 9
+
+extern unsigned int binary_signature_records[];
+#define NUM_BINARY_SIGNATURE_RECORDS 1
+#define BINARY_SIG_BYTES             1
+#define BINARY_SRT_BYTES             1
+#define NUM_BINARY_SIGNATURE_FIELDS  8
+
+/* Type-8 Field IDs */
+/* LEN_ID       1 defined above */
+/* IDC_ID       2 defined above */
+#define SIG_ID                       3
+#define SRT_ID                       4
+/* ISR_ID       5 defined above */
+/* HLL_ID       6 defined above */
+/* VLL_ID       7 defined above */
+
+/* Type-10,13,14,15,16 Field IDs */
+/* LEN_ID       1 defined above */
+/* IDC_ID       2 defined above */
+/* IMP_ID       3 defined above */
+#define SRC_ID                        4
+#define CD_ID                         5
+/* HLL_ID       6 defined above */
+/* VLL_ID       7 defined above */
+#define SLC_ID                        8
+#define HPS_ID                        9
+#define VPS_ID                       10
+#define TAG_CA_ID                    11
+#define CSP_ID                       12
+#define CSP_ID_Type_17               13
+#define BPX_ID                       12
+#define FGP3_ID                      13
+#define DAT2_ID             IMAGE_FIELD
+
+/* Type-10 field IDs, in addition the the common subset above... jck */
+#define IMT_ID                        3
+#define PHD_ID                        5
+/* 6 HLL, 7 VLL, 8 SLC, 9 HPS, 10 VPS, 11 CGA (TAG_CA_ID), 12CSP */
+#define SAP_ID                       13
+/* 14 and 15 are reserved */
+/* 16 SHPS, 17 SVPS */
+/* 18 and 19 are reserved */
+#define POS_ID                       20
+#define POA_ID                       21
+#define PXS_ID                       22
+#define PAS_ID                       23
+#define SQS_ID                       24
+#define SPA_ID                       25
+#define SXS_ID                       26
+#define SEC_ID                       27
+#define SHC_ID                       28
+#define FFP_ID                       29
+#define DMM_ID                       30
+/* 31 through 39 are reserved */
+#define SMT_ID                       40
+#define SMS_ID                       41
+#define SMD_ID                       42
+#define COL_ID                       43
+/* 44 through 199 reserved */
+
+/* Type-13,14,15 field IDs, in addition to the common subset above... jck */
+/* Type-13,14 respecively, reserved in type 15... */
+#define SPD_ID                       14
+#define PPD_ID                       14
+
+/* Type-13,14, reserved in type 15... */
+#define PPC_ID                       15
+
+/* Type-13,14,15... */
+#define SHPS_ID                      16
+#define SVPS_ID                      17
+
+/* Type-14 only, reserved in Type-13,15... */
+#define AMP_ID                       18
+
+/* 19 is reserved in Type-13,14,15. */
+/* Type-13,14,15...*/
+#define COM_ID                       20
+
+/* Type-14 only, reserved in Type-13,15 */
+#define SEG_ID                       21
+#define NQM_ID                       22
+#define SQM_ID                       23
+
+/* Type-13,14,15 respecively... */
+#define LQM_ID                       24
+#define FQM_ID                       24
+#define PQM_ID                       24
+
+/* Type-14 only, reserved in Type-13,15... */
+#define ASEG_ID                      25
+
+/* 26 through 29 are reserved in Type-13,14,15. */
+
+/* Type-14,15, reserved in Type-13... */
+#define DMM_ID                      30
+/* End of Type-13,14,15 field IDs. */
+
+/* Type-9 Standard Field IDs */
+/* LEN_ID       1 defined above */
+/* IDC_ID       2 defined above */
+/* IMP_ID       3 defined above */
+#define FMT_ID                        4
+#define OFR_ID                        5
+#define FGP2_ID                       6
+#define FPC_ID                        7
+#define CRP_ID                        8
+#define DLT_ID                        9
+#define MIN_ID                       10
+#define RDG_ID                       11
+#define MRC_ID                       12
+/* Type-9 FBI/IAFIS Field IDs  */
+/* EFTS Field 13 Non-standard! */
+#define FGN_ID                       14
+#define NMN_ID                       15
+#define FCP_ID                       16
+#define APC_ID                       17
+#define ROV_ID                       18
+#define COF_ID                       19
+#define ORN_ID                       20
+#define CRA_ID                       21
+#define DLA_ID                       22
+#define MAT_ID                       23
+
+/* Maximum number of minutiae in an FBI/IAFIS Type-9 record. */
+#define MAX_IAFIS_MINUTIAE          254
+/* Maximum number of pattern classes in an FBI/IAFIS Type-9 record. */
+#define MAX_IAFIS_PATTERN_CLASSES     3
+/* Maximum number of cores in an FBI/IAFIS Type-9 record. */
+#define MAX_IAFIS_CORES               2
+/* Maximum number of deltas in an FBI/IAFIS Type-9 record. */
+#define MAX_IAFIS_DELTAS              2
+/* Maximum number of items in FBI/IAFIS minutia subfield. */
+#define MAX_IAFIS_MINUTIA_ITEMS      13
+/* Number of characters in an FBI/IAFIS method string. */
+#define IAFIS_METHOD_STRLEN           3
+
+/* Minimum Table 5 Impression Code. */
+#define MIN_TABLE_5_CODE              0
+/* Maximum Table 5 Impression Code. */
+#define MAX_TABLE_5_CODE              29
+
+/* Minimum Table 6 Finger Position Code. */
+#define MIN_TABLE_6_CODE              0
+/* Maximum Table 6 Finger Position Code. */
+#define MAX_TABLE_6_CODE             16
+
+/* Minimum Table 19 Palm Code. */
+#define MIN_TABLE_19_CODE            20
+/* Maximum Table 19 Palm Code. */
+#define MAX_TABLE_19_CODE            30
+
+/* Minimum Minutia Quality value. */
+#define MIN_QUALITY_VALUE             0
+/* Maximum Minutia Quality value. */
+#define MAX_QUALITY_VALUE            63
+
+/* Minimum scanning resolution in pixels/mm (500 dpi). */
+#define MIN_RESOLUTION               19.69
+/* Minimum scanning resolution in as stored in tagged field images. */
+#define MIN_TAGGED_RESOLUTION        19.7
+/* Scan resolution tolerance in mm's. */
+#define MM_TOLERANCE                  0.2
+
+#define FIELD_NUM_LEN              9
+#define ITEM_START                 '='
+#define ITEM_END                   US_CHAR
+
+#define STD_STR                    "S"
+#define USER_STR                   "U"
+#define TBL_STR                    "T"
+#define AUTO_STR                   "A"
+#define PPI_STR                    "1"
+#define PP_CM                      "2"
+
+#define DEL_OP                     'd'
+#define INS_OP                     'i'
+#define PRN_OP                     'p'
+#define SUB_OP                     's'
+
+#define DEFAULT_FPOUT              stdout
+
+#ifndef MAX_UINT_CHARS
+#define MAX_UINT_CHARS   10
+#define MAX_USHORT_CHARS  5
+#define MAX_UCHAR_CHARS   3
+#endif
+
+#define UNUSED_STR                 "255"
+
+#define MM_PER_INCH                 25.4
+
+#define UNKNOWN_HAND                 0
+#define RIGHT_HAND                   1
+#define LEFT_HAND                    2
+
+#define COMP_NONE                  "NONE"
+#define BIN_COMP_NONE              "0"
+#define COMP_WSQ                   "WSQ20"
+#define BIN_COMP_WSQ               "1"
+#define COMP_JPEGB                 "JPEGB"
+#define BIN_COMP_JPEGB             "2"
+#define COMP_JPEGL                 "JPEGL"
+#define BIN_COMP_JPEGL             "3"
+#define COMP_JPEG2K                "JP2"
+#define BIN_COMP_JPEG2K            "4"
+#define COMP_JPEG2KL               "JP2L"
+#define BIN_COMP_JPEG2KL           "5"
+#define COMP_PNG                   "PNG"
+#define BIN_COMP_PNG               "6"
+#define CSP_GRAY                   "GRAY"
+#define CSP_RGB                    "RGB"
+#define CSP_YCC                    "YCC"
+#define CSP_SRGB                   "SRGB"
+#define CSP_SYCC                   "SYCC"
+
+/***********************************************************************/
+/* ALLOC.C : ALLOCATION ROUTINES */
+extern int alloc_ANSI_NIST(ANSI_NIST **);
+extern int new_ANSI_NIST_record(RECORD **, const int);
+extern int alloc_ANSI_NIST_record(RECORD **);
+extern int new_ANSI_NIST_field(FIELD **, const int, const int);
+extern int alloc_ANSI_NIST_field(FIELD **);
+extern int alloc_ANSI_NIST_subfield(SUBFIELD **);
+extern int alloc_ANSI_NIST_item(ITEM **);
+extern void free_ANSI_NIST(ANSI_NIST *);
+extern void free_ANSI_NIST_record(RECORD *);
+extern void free_ANSI_NIST_field(FIELD *);
+extern void free_ANSI_NIST_subfield(SUBFIELD *);
+extern void free_ANSI_NIST_item(ITEM *);
+
+/***********************************************************************/
+/* APPEND.C : APPEND ROUTINES */
+extern int append_ANSI_NIST_record(RECORD *, FIELD *);
+extern int append_ANSI_NIST_field(FIELD *, SUBFIELD *);
+extern int append_ANSI_NIST_subfield(SUBFIELD *, ITEM *);
+
+/***********************************************************************/
+/* COPY.C : COPY ROUTINES */
+extern int copy_ANSI_NIST(ANSI_NIST **, ANSI_NIST *);
+extern int copy_ANSI_NIST_record(RECORD **, RECORD *);
+extern int copy_ANSI_NIST_field(FIELD **, FIELD *);
+extern int copy_ANSI_NIST_subfield(SUBFIELD **, SUBFIELD *);
+extern int copy_ANSI_NIST_item(ITEM **, ITEM *);
+
+/***********************************************************************/
+/* DATE.C : DATE ROUTINES */
+extern int get_ANSI_NIST_date(char **);
+
+/***********************************************************************/
+/* DECODE.C : IMAGE RECORD DECODER ROUTINES */
+extern int decode_ANSI_NIST_image(unsigned char **, int *, int *, int *,
+                     double *, const ANSI_NIST *, const int, const int);
+extern int decode_binary_field_image(unsigned char **, int *, int *, int *,
+                     double *, const ANSI_NIST *, const int);
+extern int decode_tagged_field_image(unsigned char **, int *, int *, int *,
+                     double *, const ANSI_NIST *, const int, const int);
+
+/***********************************************************************/
+/* DELETE.C : DELETE ROUTINES */
+extern int do_delete(const char *, const int, const int, const int,
+              const int, ANSI_NIST *);
+extern int delete_ANSI_NIST_select(const int, const int, const int,
+              const int, ANSI_NIST *);
+extern int delete_ANSI_NIST_record(const int, ANSI_NIST *);
+extern int adjust_delrec_CNT_IDCs(const int, ANSI_NIST *);
+extern int delete_ANSI_NIST_field(const int, const int, ANSI_NIST *);
+extern int delete_ANSI_NIST_subfield(const int, const int, const int,
+              ANSI_NIST *);
+extern int delete_ANSI_NIST_item(const int, const int, const int,
+              const int, ANSI_NIST *);
+
+/***********************************************************************/
+/* FLIP.C : FLIP COORDS & DIRECTION ROUTINES */
+extern int flip_y_coord(char *, const int, const int, const double);
+extern int flip_direction(char *, const int);
+
+/***********************************************************************/
+/* FMTSTD.C : ANSI_NIST FORMAT READ ROUTINES */
+extern int read_ANSI_NIST_file(const char *, ANSI_NIST **);
+extern int read_ANSI_NIST(FILE *, ANSI_NIST *);
+extern int read_Type1_record(FILE *, RECORD **, unsigned int *);
+extern int read_ANSI_NIST_remaining_records(FILE *, ANSI_NIST *);
+extern int read_ANSI_NIST_record(FILE *, RECORD **, const unsigned int);
+extern int read_ANSI_NIST_tagged_record(FILE *, RECORD **,
+              const unsigned int);
+extern int read_ANSI_NIST_record_length(FILE *, int *, FIELD **);
+extern int read_ANSI_NIST_version(FILE *, int *, FIELD **);
+extern int read_ANSI_NIST_integer_field(FILE *, int *, FIELD **);
+extern int read_ANSI_NIST_remaining_fields(FILE *, RECORD *);
+extern int read_ANSI_NIST_field(FILE *, FIELD **, int);
+extern int read_ANSI_NIST_image_field(FILE *, FIELD **, char *, const int,
+              const int, int); /* Added by MDG 03-08-05 */
+extern int read_ANSI_NIST_tagged_field(FILE *, FIELD **, char *, const int,
+              const int, int);
+extern int read_ANSI_NIST_field_ID(FILE *, char **, unsigned int *,
+              unsigned int *);
+extern int parse_ANSI_NIST_field_ID(unsigned char **, unsigned char *,
+                                    char **, unsigned int *, unsigned int *);
+extern int read_ANSI_NIST_subfield(FILE *, SUBFIELD **);
+extern int read_ANSI_NIST_item(FILE *, ITEM **);
+extern int read_ANSI_NIST_binary_image_record(FILE *, RECORD **,
+              const unsigned int);
+extern int read_ANSI_NIST_binary_signature_record(FILE *, RECORD **,
+              const unsigned int);
+extern int read_ANSI_NIST_binary_field(FILE *, FIELD **, const int);
+
+/***********************************************************************/
+/* FMTSTD.C : ANSI_NIST FORMAT BUFFER SCAN ROUTINES */
+extern int scan_ANSI_NIST(AN2KBDB *, ANSI_NIST *);
+extern int scan_Type1_record(AN2KBDB *, RECORD **, unsigned int *);
+extern int scan_ANSI_NIST_remaining_records(AN2KBDB *, ANSI_NIST *);
+extern int scan_ANSI_NIST_record(AN2KBDB *, RECORD **, const unsigned int);
+extern int scan_ANSI_NIST_tagged_record(AN2KBDB *, RECORD **,
+              const unsigned int);
+extern int scan_ANSI_NIST_record_length(AN2KBDB *, int *, FIELD **);
+extern int scan_ANSI_NIST_version(AN2KBDB *, int *, FIELD **);
+extern int scan_ANSI_NIST_integer_field(AN2KBDB *, int *, FIELD **);
+extern int scan_ANSI_NIST_remaining_fields(AN2KBDB *, RECORD *);
+extern int scan_ANSI_NIST_field(AN2KBDB *, FIELD **, int);
+extern int scan_ANSI_NIST_image_field(AN2KBDB *, FIELD **, char *, const int,
+              const int, int); /* Added by MDG 03-08-05 */
+extern int scan_ANSI_NIST_tagged_field(AN2KBDB *, FIELD **, char *, const int,
+              const int, int);
+extern int scan_ANSI_NIST_field_ID(AN2KBDB *, char **, unsigned int *,
+              unsigned int *);
+extern int scan_ANSI_NIST_subfield(AN2KBDB *, SUBFIELD **);
+extern int scan_ANSI_NIST_item(AN2KBDB *, ITEM **);
+extern int scan_ANSI_NIST_binary_image_record(AN2KBDB *, RECORD **,
+              const unsigned int);
+extern int scan_ANSI_NIST_binary_signature_record(AN2KBDB *, RECORD **,
+              const unsigned int);
+extern int scan_ANSI_NIST_binary_field(AN2KBDB *, FIELD **, const int);
+
+/***********************************************************************/
+/* FMTSTD.C : ANSI_NIST FORMAT WRITE ROUTINES */
+extern int write_ANSI_NIST_file(const char *, const ANSI_NIST *);
+extern int write_ANSI_NIST(FILE *, const ANSI_NIST *);
+extern int write_ANSI_NIST_record(FILE *, RECORD *);
+extern int write_ANSI_NIST_tagged_field(FILE *, const FIELD *);
+extern int write_ANSI_NIST_tagged_subfield(FILE *, const SUBFIELD *);
+extern int write_ANSI_NIST_tagged_item(FILE *, const ITEM *);
+extern int write_ANSI_NIST_separator(FILE *, const char);
+extern int write_ANSI_NIST_binary_field(FILE *, const FIELD *);
+extern int write_ANSI_NIST_binary_subfield(FILE *, const SUBFIELD *);
+extern int write_ANSI_NIST_binary_item(FILE *, const ITEM *);
+
+/***********************************************************************/
+/* FMTTEXT.C : READ FORMATTED TEXT ROUTINES */
+extern int read_fmttext_file(const char *, ANSI_NIST **);
+extern int read_fmttext(FILE *, ANSI_NIST *);
+extern int read_fmttext_item(FILE *, int *, int *, int *, int *, int *,
+              int *, char **);
+/* FMTTEXT.C : WRITE FORMATTED TEXT ROUTINES */
+extern int write_fmttext_file(const char *, const ANSI_NIST *);
+extern int write_fmttext(FILE *, const ANSI_NIST *);
+extern int write_fmttext_record(FILE *, const int, const ANSI_NIST *);
+extern int write_fmttext_field(FILE *, const int, const int,
+              const ANSI_NIST *);
+extern int write_fmttext_image_field(FILE *, const int, const int,
+                      const ANSI_NIST *);
+extern int write_fmttext_subfield(FILE *, const int, const int, const int,
+              const ANSI_NIST *);
+extern int write_fmttext_item(FILE *, const int, const int, const int,
+              const int, const ANSI_NIST *);
+
+/***********************************************************************/
+/* GETIMG.C : LOCATE & RETURN IMAGE DATA ROUTINES */
+extern int get_first_grayprint(unsigned char **, int *, int *, int *,
+                               double *, int *, int *,
+                               RECORD **, int *, const ANSI_NIST *);
+
+/***********************************************************************/
+/* INSERT.C : INSERT ROUTINES */
+extern int do_insert(const char *, const int, const int, const int,
+              const int, const char *, ANSI_NIST *);
+extern int insert_ANSI_NIST_select(const int, const int, const int,
+              const int, const char *, ANSI_NIST *);
+extern int insert_ANSI_NIST_record(const int, const char *, ANSI_NIST *);
+extern int insert_ANSI_NIST_record_frmem(const int, RECORD *, ANSI_NIST *);
+extern int insert_ANSI_NIST_record_core(const int, RECORD *, const int, 
+	      ANSI_NIST *);
+extern int insert_ANSI_NIST_field(const int, const int, const char *,
+              ANSI_NIST *);
+extern int insert_ANSI_NIST_field_frmem(const int, const int, FIELD *,
+              ANSI_NIST *);
+extern int insert_ANSI_NIST_field_core(const int, const int, FIELD *,
+              ANSI_NIST *);
+extern int adjust_insrec_CNT_IDCs(const int, const int, ANSI_NIST *);
+extern int insert_ANSI_NIST_subfield(const int, const int, const int,
+              const char *, ANSI_NIST *);
+extern int insert_ANSI_NIST_subfield_frmem(const int, const int, const int,
+              SUBFIELD *, ANSI_NIST *);
+extern int insert_ANSI_NIST_subfield_core(const int, const int, const int,
+              SUBFIELD *, ANSI_NIST *);
+extern int insert_ANSI_NIST_item(const int, const int, const int, const int,
+              const char *, ANSI_NIST *);
+
+/***********************************************************************/
+/* IS_AN2K.C : AN2K FORMAT TESTS */
+extern int is_ANSI_NIST_file(const char *const);
+extern int is_ANSI_NIST(unsigned char *, const int);
+
+/***********************************************************************/
+/* LOOKUP.C : LOOKUP ROUTINES */
+extern int lookup_ANSI_NIST_field(FIELD **, int *const,
+		  const unsigned int, const RECORD *const);
+extern int lookup_ANSI_NIST_subfield(SUBFIELD **, const unsigned int,
+		  const FIELD *const);
+extern int lookup_ANSI_NIST_item(ITEM **, const unsigned int,
+                                 const SUBFIELD *const);
+extern int lookup_ANSI_NIST_image(RECORD **, int *const, const int,
+              const ANSI_NIST *const);
+extern int lookup_ANSI_NIST_image_ppmm(double *const, const ANSI_NIST *const,
+				       const int);
+extern int lookup_binary_field_image_ppmm(double *const, const ANSI_NIST *const,
+              const int );
+extern int lookup_tagged_field_image_ppmm(double *const, const RECORD *const);
+extern int lookup_ANSI_NIST_fingerprint(RECORD **, int *const, const int,
+              const ANSI_NIST *const);
+extern int lookup_ANSI_NIST_grayprint(RECORD **, int *const,
+                                      const int, const ANSI_NIST *);
+extern int lookup_binary_field_fingerprint(RECORD **, int *const, const int,
+              const ANSI_NIST *const);
+extern int lookup_tagged_field_fingerprint(RECORD **, int *const, const int,
+              const ANSI_NIST *const);
+extern int lookup_fingerprint_with_IDC(RECORD **, int *const, const int,
+				       const int, const ANSI_NIST *const);
+extern int lookup_FGP_field(FIELD **, int *const, const RECORD *const);
+extern int lookup_IMP_field(FIELD **, int *const, const RECORD *const);
+extern int lookup_minutiae_format(char *const, const RECORD *const);
+extern int lookup_ANSI_NIST_record(RECORD **, int *const, const int,
+				   const ANSI_NIST *const, 
+				   const REC_SEL *const);
+
+/***********************************************************************/
+/* PRINT.C : PRINT ROUTINES */
+extern int do_print(const char *, const int, const int, const int,
+              const int, ANSI_NIST *);
+extern int print_ANSI_NIST_select(FILE *, const int, const int, const int,
+              const int, ANSI_NIST *);
+
+/***********************************************************************/
+/* READ.C : GENERAL FILE AND BUFFER UTILITIES */
+extern int fbgetc(FILE *, AN2KBDB *);
+extern size_t fbread(void *, size_t, size_t, FILE *, AN2KBDB *);
+extern long fbtell(FILE *, AN2KBDB *);
+
+/***********************************************************************/
+/* READ.C : GENERAL READ UTILITIES */
+extern int read_binary_item_data(FILE *, unsigned char **, const int);
+extern int read_binary_uint(FILE *, unsigned int *);
+extern int read_binary_ushort(FILE *, unsigned short *);
+extern int read_binary_uchar(FILE *, unsigned char *);
+extern int read_binary_image_data(const char *, unsigned char **, int *);
+extern int read_char(FILE *, const int);
+extern int read_string(FILE *, char **, const int);
+extern int read_integer(FILE *, int *, const int);
+extern int skip_white_space(FILE *);
+
+/***********************************************************************/
+/* READ.C : GENERAL BUFFER SCAN UTILITIES */
+extern int scan_binary_item_data(AN2KBDB *, unsigned char **, const int);
+extern int scan_binary_uint(AN2KBDB *, unsigned int *);
+extern int scan_binary_ushort(AN2KBDB *, unsigned short *);
+extern int scan_binary_uchar(AN2KBDB *, unsigned char *);
+
+/***********************************************************************/
+/* SIZE.C : FIELD BYTE SIZES */
+extern int binary_image_field_bytes(const int);
+extern int binary_signature_field_bytes(const int);
+
+/***********************************************************************/
+/* SUBSTITUTE.C : SUBSTITUTE ROUTINES */
+extern int do_substitute(const char *, const int, const int, const int,
+              const int, const char *, ANSI_NIST *);
+extern int substitute_ANSI_NIST_select(const int, const int, const int,
+              const int, const char *, ANSI_NIST *);
+extern int substitute_ANSI_NIST_record(const int, const char *, ANSI_NIST *);
+extern int substitute_ANSI_NIST_field(const int, const int, const char *,
+              ANSI_NIST *);
+extern int substitute_ANSI_NIST_subfield(const int, const int, const int,
+              const char *, ANSI_NIST *);
+extern int substitute_ANSI_NIST_item(const int, const int, const int,
+              const int, const char *, ANSI_NIST *);
+
+/***********************************************************************/
+/* TO_IAFIS.C : ANSI/NIST 2007 TO FBI/IAFIS CONVERSION ROUTINES */
+extern int nist2iafis_fingerprints(ANSI_NIST *);
+extern int nist2iafis_fingerprint(RECORD **, RECORD *);
+extern int nist2iafis_type_9s(ANSI_NIST *);
+extern int nist2iafis_needed(RECORD *);
+extern int nist2iafis_type_9(RECORD **, ANSI_NIST *, const int);
+extern int nist2iafis_method(char **, char *);
+extern int nist2iafis_minutia_type(char **, char *);
+extern int nist2iafis_pattern_class(char **, char *, const int);
+extern int nist2iafis_ridgecount(char **, char *);
+
+/***********************************************************************/
+/* TO_NIST.C : FBI/IAFIS TO ANSI/NIST 2007 CONVERSION ROUTINES */
+extern int iafis2nist_fingerprints(ANSI_NIST *);
+extern int iafis2nist_fingerprint(RECORD **, ANSI_NIST *, const int);
+extern int iafis2nist_type_9s(ANSI_NIST *);
+extern int iafis2nist_needed(RECORD *);
+extern int iafis2nist_type_9(RECORD **, ANSI_NIST *, const int);
+extern int iafis2nist_method(char **, char *);
+extern int iafis2nist_minutia_type(char **, char *);
+extern int iafis2nist_pattern_class(char **, char *, const int);
+extern int iafis2nist_ridgecount(char **, char *);
+
+/***********************************************************************/
+/* TYPE.C : RECORD & FIELD TYPE TESTS */
+extern int tagged_record(const unsigned int);
+extern int binary_record(const unsigned int);
+extern int tagged_image_record(const unsigned int);
+extern int binary_image_record(const unsigned int);
+extern int image_record(const unsigned int);
+extern int binary_signature_record(const unsigned int);
+extern int image_field(const FIELD *);
+extern int is_delimiter(const int);
+extern int which_hand(const int);
+
+/***********************************************************************/
+/* SELECT.C : RECORD SELECTION BASED ON VARIOUS EXTENSIBLE CRITERIA */
+extern int select_ANSI_NIST_record(RECORD *, const REC_SEL *);
+extern int new_rec_sel(REC_SEL **, const REC_SEL_TYPE, const int, ...);
+extern int alloc_rec_sel(REC_SEL **, const REC_SEL_TYPE, const int);
+extern void free_rec_sel(REC_SEL *);
+extern int add_rec_sel_num(REC_SEL **, const REC_SEL_TYPE, const int);
+extern int add_rec_sel(REC_SEL **, const REC_SEL *const);
+extern int parse_rec_sel_option(const REC_SEL_TYPE, const char *const,
+				const char **, REC_SEL **, const int);
+extern int write_rec_sel(FILE *, const REC_SEL *const);
+extern int write_rec_sel_file(const char *const, const REC_SEL *const);
+extern int read_rec_sel(FILE *, REC_SEL **);
+extern int read_rec_sel_file(const char *const, REC_SEL **);
+extern int imp_is_rolled(const int);
+extern int imp_is_flat(const int);
+extern int imp_is_live_scan(const int);
+extern int imp_is_latent(const int);
+extern int simplify_rec_sel(REC_SEL **);
+
+/***********************************************************************/
+/* TYPE1314.C : Type-13 and Type-14 ROUTINES */
+extern int fingerprint2tagged_field_image(RECORD **, unsigned char *,
+                  const int, const int, const int, const int, const double,
+                  char *, const int, const int, char *);
+extern int image2type_13(RECORD **, unsigned char *, const int, const int,
+                  const int, const int, const double, char *, const int,
+                  const int, char *);
+extern int image2type_14(RECORD **, unsigned char *, const int, const int,
+                  const int, const int, const double, char *, const int,
+                  const int, char *);
+
+/***********************************************************************/
+/* UPDATE.C : UPDATE ROUTINES */
+extern int update_ANSI_NIST(ANSI_NIST *, RECORD *);
+extern int update_ANSI_NIST_record(RECORD *, FIELD *);
+extern int update_ANSI_NIST_field(FIELD *, SUBFIELD *);
+extern int update_ANSI_NIST_subfield(SUBFIELD *, ITEM *);
+extern int update_ANSI_NIST_item(ITEM *, const int);
+extern int update_ANSI_NIST_record_LENs(ANSI_NIST *);
+extern int update_ANSI_NIST_record_LEN(ANSI_NIST *, const int);
+extern int update_ANSI_NIST_binary_record_LEN(RECORD *);
+extern int update_ANSI_NIST_tagged_record_LEN(RECORD *);
+extern void update_ANSI_NIST_field_ID(FIELD *, const int, const int);
+
+/***********************************************************************/
+/* UTIL.C : UTILITY ROUTINES */
+extern int increment_numeric_item(const int, const int, const int,
+              const int, ANSI_NIST *, char *);
+extern int decrement_numeric_item(const int, const int, const int,
+              const int, ANSI_NIST *, char *);
+
+/***********************************************************************/
+/* VALUE2.C : STRING TO STRUCTURE ROUTINES */
+extern int value2field(FIELD **, const int, const int, const char *);
+extern int value2subfield(SUBFIELD **, const char *);
+extern int value2item(ITEM **, const char *);
+
+#endif /* !_AN2K_H */
Index: nbis-4.2.0/an2k/include/jpeg2k.h
===================================================================
--- nbis-4.2.0.orig/an2k/include/jpeg2k.h	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/an2k/include/jpeg2k.h	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,28 @@
+/**********************************************************************
+ * 
+ *  This file is part of a fork of NIST Biometric Image Software. 
+ *  Modifications to the upstream source code are distributed under the
+ *  following terms: 
+ * 
+ *     Copyright 2013 Michael Chaberski
+ * 
+ *     Licensed under the Apache License, Version 2.0 (the "License");
+ *     you may not use this file except in compliance with the License.
+ *     You may obtain a copy of the License at
+ * 
+ *         http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ *     Unless required by applicable law or agreed to in writing, software
+ *     distributed under the License is distributed on an "AS IS" BASIS,
+ *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *     See the License for the specific language governing permissions and
+ *     limitations under the License.
+ * 
+ *  The original source code is a work in the public domain. The original 
+ *  license and disclaimers are below.
+ * 
+ *  BEGIN ORIGINAL LICENSE TEXT                                       
+ **********************************************************************/
 /*******************************************************************************
 
 License: 
@@ -61,7 +86,7 @@
 #endif
 
 #ifdef __NBIS_OPENJPEG__
-	#include <openjpeg/openjpeg.h>
+	#include <openjpeg.h>
 #endif
 
 /*********************************************************************/
Index: nbis-4.2.0/an2k/p_rules.mak
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ nbis-4.2.0/an2k/p_rules.mak	2013-12-17 13:29:27.000000000 -0500
@@ -0,0 +1,132 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
+#*******************************************************************************
+#
+# License: 
+# This software and/or related materials was developed at the National Institute
+# of Standards and Technology (NIST) by employees of the Federal Government
+# in the course of their official duties. Pursuant to title 17 Section 105
+# of the United States Code, this software is not subject to copyright
+# protection and is in the public domain. 
+#
+# This software and/or related materials have been determined to be not subject
+# to the EAR (see Part 734.3 of the EAR for exact details) because it is
+# a publicly available technology and software, and is freely distributed
+# to any interested party with no licensing requirements.  Therefore, it is 
+# permissible to distribute this software as a free download from the internet.
+#
+# Disclaimer: 
+# This software and/or related materials was developed to promote biometric
+# standards and biometric technology testing for the Federal Government
+# in accordance with the USA PATRIOT Act and the Enhanced Border Security
+# and Visa Entry Reform Act. Specific hardware and software products identified
+# in this software were used in order to perform the software development.
+# In no case does such identification imply recommendation or endorsement
+# by the National Institute of Standards and Technology, nor does it imply that
+# the products and equipment identified are necessarily the best available
+# for the purpose.
+#
+# This software and/or related materials are provided "AS-IS" without warranty
+# of any kind including NO WARRANTY OF PERFORMANCE, MERCHANTABILITY,
+# NO WARRANTY OF NON-INFRINGEMENT OF ANY 3RD PARTY INTELLECTUAL PROPERTY
+# or FITNESS FOR A PARTICULAR PURPOSE or for any purpose whatsoever, for the
+# licensed product, however used. In no event shall NIST be liable for any
+# damages and/or costs, including but not limited to incidental or consequential
+# damages of any kind, including economic damage or injury to property and lost
+# profits, regardless of whether NIST shall be advised, have reason to know,
+# or in fact shall know of the possibility.
+#
+# By using this software, you agree to bear all risk relating to quality,
+# use and performance of the software and/or related materials.  You agree
+# to hold the Government harmless from any claim arising from your use
+# of the software.
+#
+#*******************************************************************************
+# Project:              NIST Fingerprint Software
+# SubTree:              /NBIS/Main/an2k
+# Filename:             p_rules.mak.src
+# Integrators:          Kenneth Ko
+# Organization:         NIST/ITL
+# Host System:          GNU GCC/GMAKE GENERIC (UNIX)
+# Date Created:         08/20/2006
+# Date Updated:         01/31/2008 (Kenneth Ko)
+#                       09/03/2008 (Kenneth Ko)
+#                       09/29/2008 (Kenneth Ko)
+#
+# ******************************************************************************
+#
+# This rules file contains all the necessary variables to build "an2k".
+#
+# ******************************************************************************
+THIS_DIR = $(subst //,/,$(dir $(CURDIR)/$(lastword $(MAKEFILE_LIST))))
+include $(THIS_DIR)/../rules.mak
+#
+# ------------------------------------------------------------------------------
+#
+PACKAGE		:= an2k
+PROGRAMS	:= an2k2iaf an2k2txt an2ktool chkan2k cropcoeff dpyan2k \
+	           histogen iaf2an2k txt2an2k
+LIBRARYS	:= an2k
+LIBRARY_NAMES	:= $(LIBRARYS:%=lib%.a)
+#
+# ------------------------------------------------------------------------------
+#
+DIR_ROOT_PACKAGE	:= $(DIR_ROOT)/$(PACKAGE)
+INSTALL_BIN_DIR		:= $(DIR_ROOT_PACKAGE)/bin
+INSTALL_LIB_DIR		:= $(DIR_ROOT_PACKAGE)/lib
+#
+# ------------------------------------------------------------------------------
+#
+DIR_SRC		:= $(DIR_ROOT_PACKAGE)/src
+DIR_INC		:= $(DIR_ROOT_PACKAGE)/include
+DIR_SRC_BIN	:= $(DIR_SRC)/bin
+DIR_SRC_LIB	:= $(DIR_SRC)/lib
+#
+DIR_OBJ		:= $(DIR_ROOT_PACKAGE)/obj
+DIR_BIN		:= $(DIR_ROOT_PACKAGE)/bin
+DIR_LIB		:= $(DIR_ROOT_PACKAGE)/lib
+#
+DIR_SRC_BIN_ALL	:= $(PROGRAMS:%=$(DIR_SRC_BIN)/%)
+DIR_SRC_LIB_ALL	:= $(LIBRARYS:%=$(DIR_SRC_LIB)/%)
+#
+BASE_DIR := \
+	$(DIR_SRC) \
+	$(DIR_SRC_BIN) \
+	$(DIR_SRC_LIB) \
+	$(DIR_SRC_LIB_ALL) \
+	$(DIR_SRC_BIN_ALL)
+#
+#
+DIR_OBJ_SRC	:= $(DIR_OBJ)/src
+DIR_OBJ_SRC_BIN	:= $(DIR_OBJ_SRC)/bin
+DIR_OBJ_SRC_LIB	:= $(DIR_OBJ_SRC)/lib
+#
+DIR_OBJ_SRC_BIN_ALL	:= $(PROGRAMS:%=$(DIR_OBJ_SRC_BIN)/%)
+DIR_OBJ_SRC_LIB_ALL	:= $(LIBRARYS:%=$(DIR_OBJ_SRC_LIB)/%)
+#
+OBJ_BASE_DIR	:= $(DIR_OBJ) $(subst $(DIR_SRC),$(DIR_OBJ_SRC),$(BASE_DIR))
+#
+# ------------------------------------------------------------------------------
+#
Index: nbis-4.2.0/an2k/src/bin/chkan2k/Makefile
===================================================================
--- nbis-4.2.0.orig/an2k/src/bin/chkan2k/Makefile	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/an2k/src/bin/chkan2k/Makefile	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -66,7 +90,6 @@
 	$(EXPORTS_LIB_DIR)/libihead.a \
 	$(EXPORTS_LIB_DIR)/libwsq.a \
 	$(EXPORTS_LIB_DIR)/libjpegl.a \
-	$(EXPORTS_LIB_DIR)/libjpegb.a \
 	$(EXPORTS_LIB_DIR)/libfet.a \
 	$(EXPORTS_LIB_DIR)/libioutil.a \
 	$(EXPORTS_LIB_DIR)/libutil.a
@@ -77,22 +100,22 @@
 	$(EXPORTS_LIB_DIR)/libjasper.a
 endif
 #
-ifeq ($(NBIS_OPENJPEG_FLAG),-D__NBIS_OPENJPEG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libopenjpeg.a 
-endif
+#~ ifeq ($(NBIS_OPENJPEG_FLAG),-D__NBIS_OPENJPEG__)
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libopenjpeg.a 
+#~ endif
 #
 ifeq ($(NBIS_PNG_FLAG),-D__NBIS_PNG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libpng.a \
-	$(EXPORTS_LIB_DIR)/libz.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libpng.a \
+	#~ $(EXPORTS_LIB_DIR)/libz.a
 endif
 #
 EXT_INCS	:= -I$(EXPORTS_INC_DIR)
 #
-EXT_LIBS	:= -lm
+EXT_LIBS	:= -lm -ljpeg -lopenjpeg
 #
 include $(DIR_ROOT_BUILDUTIL)/bin.mak
 
Index: nbis-4.2.0/an2k/src/bin/cropcoeff/Makefile
===================================================================
--- nbis-4.2.0.orig/an2k/src/bin/cropcoeff/Makefile	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/an2k/src/bin/cropcoeff/Makefile	2013-12-17 13:29:27.000000000 -0500
@@ -65,7 +65,6 @@
 	$(EXPORTS_LIB_DIR)/liban2k.a \
 	$(EXPORTS_LIB_DIR)/libihead.a \
 	$(EXPORTS_LIB_DIR)/libwsq.a \
-	$(EXPORTS_LIB_DIR)/libjpegb.a \
 	$(EXPORTS_LIB_DIR)/libjpegl.a \
 	$(EXPORTS_LIB_DIR)/libfet.a \
 	$(EXPORTS_LIB_DIR)/libioutil.a \
@@ -73,7 +72,7 @@
 #
 EXT_INCS	:= -I$(EXPORTS_INC_DIR)
 #
-EXT_LIBS	:=  -lm
+EXT_LIBS	:=  -lm -ljpeg  -lopenjpeg
 
 ifeq ($(MSYS_FLAG),-D__MSYS__)
 EXT_LIBS	:= \
Index: nbis-4.2.0/an2k/src/bin/dpyan2k/Makefile.X11
===================================================================
--- nbis-4.2.0.orig/an2k/src/bin/dpyan2k/Makefile.X11	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/an2k/src/bin/dpyan2k/Makefile.X11	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -83,17 +107,17 @@
 	$(EXPORTS_LIB_DIR)/libjasper.a
 endif
 #
-ifeq ($(NBIS_OPENJPEG_FLAG),-D__NBIS_OPENJPEG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libopenjpeg.a
-endif
+#~ ifeq ($(NBIS_OPENJPEG_FLAG),-D__NBIS_OPENJPEG__)
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libopenjpeg.a
+#~ endif
 #
 ifeq ($(NBIS_PNG_FLAG),-D__NBIS_PNG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libpng.a \
-	$(EXPORTS_LIB_DIR)/libz.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libpng.a \
+	#~ $(EXPORTS_LIB_DIR)/libz.a
 endif
 #
 EXT_INCS	:= -I. -I$(EXPORTS_INC_DIR) -I$(X11_INC)
Index: nbis-4.2.0/an2k/src/lib/an2k/dec_jpeg2k.c
===================================================================
--- nbis-4.2.0.orig/an2k/src/lib/an2k/dec_jpeg2k.c	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/an2k/src/lib/an2k/dec_jpeg2k.c	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,28 @@
+/**********************************************************************
+ * 
+ *  This file is part of a fork of NIST Biometric Image Software. 
+ *  Modifications to the upstream source code are distributed under the
+ *  following terms: 
+ * 
+ *     Copyright 2013 Michael Chaberski
+ * 
+ *     Licensed under the Apache License, Version 2.0 (the "License");
+ *     you may not use this file except in compliance with the License.
+ *     You may obtain a copy of the License at
+ * 
+ *         http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ *     Unless required by applicable law or agreed to in writing, software
+ *     distributed under the License is distributed on an "AS IS" BASIS,
+ *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *     See the License for the specific language governing permissions and
+ *     limitations under the License.
+ * 
+ *  The original source code is a work in the public domain. The original 
+ *  license and disclaimers are below.
+ * 
+ *  BEGIN ORIGINAL LICENSE TEXT                                       
+ **********************************************************************/
 /*******************************************************************************
 
 License: 
@@ -62,7 +87,7 @@
 #include <jpeg2k.h>
 
 #ifdef __NBIS_OPENJPEG__
-	#include "openjpeg/openjpeg.h"
+	#include "openjpeg.h"
 #endif
 
 #ifdef __NBIS_JASPER__
Index: nbis-4.2.0/an2k/src/lib/an2k/decode.c
===================================================================
--- nbis-4.2.0.orig/an2k/src/lib/an2k/decode.c	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/an2k/src/lib/an2k/decode.c	2013-12-17 13:29:27.000000000 -0500
@@ -69,7 +69,7 @@
 
 #include <an2k.h>
 #include <wsq.h>
-#include <jpegb.h>
+/* #include <jpegb.h> */
 #include <jpegl.h>
 #include <intrlv.h>
 #include <defs.h>
@@ -550,15 +550,19 @@
          return(ret);
    }
    /* If JPEGB compressed ... */
+   
+   /* **************************************
+    * 20131216 MC removed support for JPEGB
+    * ************************************** 
    else if(strcmp(img_comp, COMP_JPEGB) == 0){
       if((ret = jpegb_decode_mem(&idata2, &iw2, &ih2, &id2, &ppi, &lossyflag,
                                  idata1, ilen1)) != 0)
          return(ret);
       /* For 3 component color, JPEGB's decoder returns interleaved RGB. */
       /* So, if flag set to NOT interleaved ... */
-      if((id2 == 24) && (intrlvflag == 0)){
-         /* There is no downsampling of RGB planes. */
-         n_cmpnts = 3;
+      /* if((id2 == 24) && (intrlvflag == 0)){ */
+         /* There is no downsampling of RGB planes. */ /*
+         n_cmpnts = 3; 
          for(i = 0; i < n_cmpnts; i++){
             hor_sampfctr[i] = 1;
             vrt_sampfctr[i] = 1;
@@ -573,6 +577,7 @@
          ilen2 = ilen1;
       }
    }
+   */
    /* If JPEGL compressed ... */
    else if(strcmp(img_comp, COMP_JPEGL) == 0){
       if((ret = jpegl_decode_mem(&img_dat, &lossyflag, idata1, ilen1)) != 0)
Index: nbis-4.2.0/an2k/src/lib/an2k/select.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ nbis-4.2.0/an2k/src/lib/an2k/select.c	2013-12-17 13:29:27.000000000 -0500
@@ -0,0 +1,1736 @@
+/**********************************************************************
+ * 
+ *  This file is part of a fork of NIST Biometric Image Software. 
+ *  Modifications to the upstream source code are distributed under the
+ *  following terms: 
+ * 
+ *     Copyright 2013 Michael Chaberski
+ * 
+ *     Licensed under the Apache License, Version 2.0 (the "License");
+ *     you may not use this file except in compliance with the License.
+ *     You may obtain a copy of the License at
+ * 
+ *         http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ *     Unless required by applicable law or agreed to in writing, software
+ *     distributed under the License is distributed on an "AS IS" BASIS,
+ *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *     See the License for the specific language governing permissions and
+ *     limitations under the License.
+ * 
+ *  The original source code is a work in the public domain. The original 
+ *  license and disclaimers are below.
+ * 
+ *  BEGIN ORIGINAL LICENSE TEXT                                       
+ **********************************************************************/
+/*******************************************************************************
+
+License: 
+This software was developed at the National Institute of Standards and 
+Technology (NIST) by employees of the Federal Government in the course 
+of their official duties. Pursuant to title 17 Section 105 of the 
+United States Code, this software is not subject to copyright protection 
+and is in the public domain. NIST assumes no responsibility  whatsoever for 
+its use by other parties, and makes no guarantees, expressed or implied, 
+about its quality, reliability, or any other characteristic. 
+
+This software has been determined to be outside the scope of the EAR
+(see Part 734.3 of the EAR for exact details) as it has been created solely
+by employees of the U.S. Government; it is freely distributed with no
+licensing requirements; and it is considered public domain.  Therefore,
+it is permissible to distribute this software as a free download from the
+internet.
+
+Disclaimer: 
+This software was developed to promote biometric standards and biometric
+technology testing for the Federal Government in accordance with the USA
+PATRIOT Act and the Enhanced Border Security and Visa Entry Reform Act.
+Specific hardware and software products identified in this software were used
+in order to perform the software development.  In no case does such
+identification imply recommendation or endorsement by the National Institute
+of Standards and Technology, nor does it imply that the products and equipment
+identified are necessarily the best available for the purpose.  
+
+*******************************************************************************/
+
+
+/***********************************************************************
+      LIBRARY: AN2K - ANSI/NIST 2000 Reference Implementation
+
+      FILE:    SELECT.C
+      AUTHOR:  Joseph C. Konczal
+      DATE:    01/30/2008
+
+      Contains routines used to select records from an ANSI NIST file
+      based on multiple criteria consisting of combinations of finger
+      position, impression type, and other features.
+***********************************************************************
+               ROUTINES:
+	                * get_type_params_by_type()
+                        * get_type_params_by_name()
+                        select_ANSI_NIST_record()
+                        new_rec_sel()
+                        alloc_rec_sel()
+                        free_rec_sel()
+                        add_rec_sel_num()
+                        add_rec_sel_str()
+                        add_rec_sel()
+                        simplify_rec_sel()
+                        * validate_rec_sel_num_value()
+                        * rec_sel_usage()
+                        parse_rec_sel_option()
+                        write_rec_sel()
+                        write_rec_sel_file()
+                        read_rec_sel()
+                        read_rec_sel_file()
+                        imp_is_live_scan()
+                        imp_is_latent()
+                        imp_is_rolled()
+                        imp_is_flat()
+
+      * The marked functions are delcared static and called only from
+        within select.c.
+
+***********************************************************************/
+
+#include <stdio.h>
+#include <stdlib.h>
+#include <stdarg.h>
+#include <errno.h>
+#include <strings.h>
+#include <ctype.h>
+
+#include <an2k.h>
+
+/***********************************************************************
+************************************************************************
+Data Structures
+
+   The following data structures and tables are used by
+   parse_rec_sel_option to decide how to parse record selection
+   options and what limits to enforce.  To add the ability to parse
+   options for another type, it might only be necessary to add it to
+   these tables.  However, to actually use the values so entered, the
+   select_ANSI_NIST_record function would also need to be modified to
+   handle the new type of value properly instead of warning that it is
+   not implemented.
+
+************************************************************************/
+
+/* Th AR_SZ macro calculates the number of elements in an array. */
+#define AR_SZ(x) (sizeof(x)/sizeof(*x))
+
+/* The structure below holds a list of synonymous names the set of
+   values to which they map.  */
+typedef struct rec_sel_named_sets_s {
+   const char *names[6]; /* name strings, e.g. "thumb", null terminated */
+   int num_values;
+   REC_SEL_VALUE values[13]; /* associated values, e.g. 1 and 6 */
+} REC_SEL_NAMED_SETS;
+
+/* Logical Record Types, based on ANSI/NIST-ITL 1-2007, Table 4, p. 13. */
+static const REC_SEL_NAMED_SETS lrt_names[] = {
+   {{ "grey print", "gp", NULL },    3, {{num:4}, {num:13}, {num:14}}},
+   {{ "Transaction information", "ti", NULL },            1, {{num:1}}},
+   {{ "User-defined descriptive text", "udt", NULL },     1, {{num:2}}},
+   {{ "Low-resolution grayscale fingerprint image", "lrgsfi", NULL }, 1, {{num:3}}},
+   {{ "High-resolution grayscale fingerprint image", "hrgsfi",NULL }, 1, {{num:4}}},
+   {{ "Low-resolution binary fingerprint image", "lrbfi", NULL },     1, {{num:5}}},
+   {{ "High-resolution binary fingerprint image", "hrbfi", NULL },    1, {{num:6}}},
+   {{ "User-defined image", "udi", NULL },                1, {{num:7}}},
+   {{ "Signature image", "si", NULL },                    1, {{num:8}}},
+   {{ "Minutiae data", "md", NULL },                      1, {{num:9}}},
+   {{ "Facial & SMT image", "fsmti", NULL },              1, {{num:10}}},
+   {{ "Variable-resolution latent image", "vrli", NULL }, 1, {{num:13}}},
+   {{ "Variable-resolution fingerprint image", "vrfi", NULL }, 1, {{num:14}}},
+   {{ "Variable-resolution palmprint image", "vrpi", NULL },   1, {{num:15}}},
+   {{ "User-defined variable-resolution testing image","udvrti",NULL},1,{{num:16}}},
+   {{ "Iris image", "ii", NULL },                         1, {{num:17}}},
+   {{ "CBEFF Biometric data record", "cbdr", NULL },      1, {{num:99}}},
+};
+static const REC_SEL_VALUE lrt_values[] = {
+   {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, /* 11 & 12 reserved */
+   {13}, {14}, {15}, {16}, {17}, /* 18 through 98 reserved */
+   {99}
+};
+
+/* The FGP and PLP selector types are complicated by the fact that
+   some record types can have either one in one of the FGP fields, and
+   some can have only one or the other.  They are defined below in a
+   large, combined structure, which is split into two pieces for the
+   separate items. */
+
+/* Finger Positions, based on ANSI/NIST-ITL 1-2007, Table 12, p. 31. */
+/* and Palm Position Codes, based on ANSI/NIST-ITL 1-2007, Table 35, p. 84. */
+
+static const int fgp_names_count = 24; /* the rest are PLPs */
+#define FGP_NAMES_COUNT 24
+static const int fgp_values_count = 17;  
+#define FGP_VALUES_COUNT 17
+
+static const REC_SEL_NAMED_SETS fgplp_names[] = {
+   {{ "thumb", "t", NULL },                         4, {{num:1},{num:6},{num:11},{num:12}}}, /*0*/
+   {{ "index finger", "i", "if", NULL },            2, {{num:2}, {num:7}}},       /*1*/
+   {{ "middle finger", "m", "mf", NULL },           2, {{num:3}, {num:8}}},       /*2*/
+   {{ "ring finger", "r", "rf", NULL },             2, {{num:4}, {num:9}}},       /*3*/
+   {{ "little finger", "l", "lf", NULL },           2, {{num:5}, {num:10}}},      /*4*/
+   {{ "right hand finger", "rhf", NULL }, 7, 
+                                 {{num:1}, {num:2}, {num:3}, {num:4}, {num:5}, {num:11}, {num:13}}}, /*5*/
+   {{ "left hand finger", "lhf", NULL },  7, 
+                                 {{num:6}, {num:7}, {num:8}, {num:9}, {num:10}, {num:12}, {num:14}}}, /*6*/
+   {{ "unknown finger", "uf", NULL },	            1, {{num:0}}},            /*7*/
+   {{ "right thumb", "rt", NULL },                  2, {{num:1}, {num:11}}},      /*8*/
+   {{ "right index finger", "rif", "ri", NULL },    1, {{num:2}}},            /*9*/
+   {{ "right middle finger", "rmf", NULL },         1, {{num:3}}},           /*10*/
+   {{ "right ring finger", "rrf", NULL },           1, {{num:4}}},           /*11*/
+   {{ "right little finger", "rlf", "rl", NULL },   1, {{num:5}}},           /*12*/
+   {{ "left thumb", "lt", NULL },                   2, {{num:6}, {num:12}}}, /*13*/
+   {{ "left index finger", "lif", NULL },           1, {{num:7}}},           /*14*/
+   {{ "left middle finger", "lmf", NULL },          1, {{num:8}}},           /*15*/
+   {{ "left ring finger", "lrf", NULL },            1, {{num:9}}},           /*16*/
+   {{ "left little finger", "llf", NULL },          1, {{num:10}}},          /*17*/
+   {{ "plain right thumb", "prt", NULL },           1, {{num:11}}},          /*18*/
+   {{ "plain left thumb", "plt", NULL },            1, {{num:12}}},          /*19*/
+   {{ "plain right four fingers", "prff", "r4", NULL },      1, {{num:13}}}, /*20*/
+   {{ "plain left four fingers", "plff", "l4", NULL },       1, {{num:14}}}, /*21*/
+   {{ "left & right thumbs", "both thumbs", "rlt", "bt", "2t",NULL}, 1, {{num:15}}},
+   {{ "eji", "tip", NULL },                                  1, {{num:19}}}, /*23*/
+   /* End of Finger Position Codes, Beginning of Palmprint Codes. */
+   {{ "interdigital", NULL },                   2, {{num:31}, {num:34}}},        /*24*/
+   {{ "thenar", NULL },                         2, {{num:32}, {num:35}}},
+   {{ "hypothenar", NULL },                     2, {{num:33}, {num:36}}},
+   {{ "right palm", "rp", NULL },   8,
+                             {{num:21}, {num:22}, {num:25}, {num:26}, {num:29}, {num:31}, {num:32}, {num:33}}},
+   {{ "left palm", "lp", NULL },    8, 
+                             {{num:23}, {num:24}, {num:27}, {num:28}, {num:30}, {num:34}, {num:35}, {num:36}}},
+   {{ "unknown palm", "up", NULL },             1, {{num:20}}},
+   {{ "right full palm", "rfp", NULL },         1, {{num:21}}},
+   {{ "right writer's palm", "rwp", NULL },     1, {{num:22}}},
+   {{ "left full palm", "lfp", NULL },          1, {{num:23}}},
+   {{ "left writer's palm", "lwp", NULL },      1, {{num:24}}},
+   {{ "full palm", "fp", NULL },                2, {{num:21}, {num:23}}},
+   {{ "writer's palm", "wp", NULL },            2, {{num:22}, {num:24}}},
+   {{ "right lower palm", "rlp", NULL },        1, {{num:25}}},
+   {{ "right upper palm", "rup", NULL },        1, {{num:26}}},
+   {{ "left lower palm", "llp", NULL },         1, {{num:27}}},
+   {{ "left upper palm", "lup", NULL },         1, {{num:28}}},
+   {{ "lower palm", "lp", NULL },               2, {{num:25}, {num:27}}},
+   {{ "upper palm", "up", NULL },               2, {{num:26}, {num:28}}},
+   {{ "right other", "ro", NULL },              1, {{num:29}}},
+   {{ "left other", "lo", NULL },               1, {{num:30}}},
+   {{ "other palm", "op", NULL },               2, {{num:29}, {num:30}}},
+   {{ "right interdigital", "rin", NULL },      1, {{num:31}}},
+   {{ "right thenar", "rthe", NULL },           1, {{num:32}}},
+   {{ "right hypothenar", "rhy", NULL },        1, {{num:33}}},
+   {{ "left interdigital", "lin", NULL },       1, {{num:34}}},
+   {{ "left thenar", "lthe", NULL },            1, {{num:35}}},
+   {{ "left hypothenar", "lhy", NULL },         1, {{num:36}}},
+};
+static const REC_SEL_VALUE fgplp_values[] = {
+     {0},  {1},  {2},  {3},  {4},  {5},  {6},  {7},  {8},  {9}, 
+    {10}, {11}, {12}, {13}, {14}, {15}, /*16-18 omitted*/ {19},
+    /* Preceeding are FGP, following are PLP.  The PLP are contiguous */
+    {20}, {21}, {22}, {23}, {24}, {25}, {26}, {27}, {28}, {29},
+    {30}, {31}, {32}, {33}, {34}, {35}, {36}
+};
+
+/* Impression Type, based on ANSI/NIST-ITL {1}-{2007}, Table {11}, p. {30}. */
+static const REC_SEL_NAMED_SETS imp_names[] = {
+   {{ "rolled", "r", NULL },   6, {{num:1}, {num:3}, {num:21}, {num:23}, {num:25}, {num:27}}},
+   {{ "plain", "p", NULL },    6, {{num:0}, {num:2}, {num:20}, {num:22}, {num:24}, {num:26}}},
+   {{ "latent", "lat", NULL }, 8, {{num:4}, {num:5}, {num:6}, {num:7}, {num:12}, {num:13}, {num:14}, {num:15}}},
+   /* don't move live-scan without fixing the pointer definition below */
+   {{ "live-scan", "live", NULL },   12, {{num:0},  {num:1},  {num:8},  {num:10}, {num:20}, {num:21},
+				          {num:22}, {num:23}, {num:24}, {num:25}, {num:26}, {num:27}}},
+   {{ "nonlive-scan", "nonlive", NULL },            3, {{num:2}, {num:3}, {num:11}}},
+   {{ "palm", NULL },                               4, {{num:12},{num:13},{num:14},{num:15}}},
+   {{ "live-scan plain", "lsp", "lspl", NULL },     1, {{num:0}}},
+   {{ "live-scan rolled", "lsr", "lsro", NULL },    1, {{num:1}}},
+   {{ "nonlive-scan plain", "nsp", "nspl", NULL },  1, {{num:2}}},
+   {{ "nonlive-scan rolled", "nsr", "nsro", NULL }, 1, {{num:3}}},
+   {{ "latent impression", "li", NULL },            1, {{num:4}}},
+   {{ "latent tracing", "lt", NULL },               1, {{num:5}}},
+   {{ "latent photo", "lp", NULL },                 1, {{num:6}}},
+   {{ "latent lift", "ll", NULL },                  1, {{num:7}}},
+   {{ "live-scan vertical swipe", "lsvs", NULL },   1, {{num:8}}},
+   /* 9 omitted */
+   {{ "live-scan palm", "lspa", NULL },             1, {{num:10}}},
+   {{ "nonlive-scan palm", "nspa", NULL },          1, {{num:11}}},
+   {{ "latent palm impression", "lpi", NULL },      1, {{num:12}}},
+   {{ "latent palm tracing", "lpt", NULL },         1, {{num:13}}},
+   {{ "latent palm photo", "lpp", NULL },           1, {{num:14}}},
+   {{ "latent palm lift", "lpl", NULL },            1, {{num:15}}},
+   /* 16 through 19 omitted */
+   {{ "live-scan optical contact plain", "lsocp", NULL },           1, {{num:20}}},
+   {{ "live-scan optical contact rolled", "lsocr", NULL },          1, {{num:21}}},
+   {{ "live-scan non-optical contact plain", "lsnocp", NULL },      1, {{num:22}}},
+   {{ "live-scan non-optical contact rolled", "lsnocr", NULL },     1, {{num:23}}},
+   {{ "live-scan optical contactless plain", "lsoclp", NULL },      1, {{num:24}}},
+   {{ "live-scan optical contactless rolled", "lsoclr", NULL },     1, {{num:25}}},
+   {{ "live-scan non-optical contactless plain", "lsnoclp", NULL }, 1, {{num:26}}},
+   {{ "live-scan non-optical contactless rolled", "lsnoclr", NULL },1, {{num:27}}},
+   {{ "other", NULL },                             1, {{num:28}}},
+   {{ "unknown", NULL },                           1, {{num:29}}},
+};
+static const REC_SEL_VALUE imp_values[] = {
+    {0},  {1},  {2},  {3},  {4},  {5},  {6},  {7},  {8}, /* 9 omitted */
+   {10}, {11}, {12}, {13}, {14}, {15}, /* 16 through 19 omitted */
+   {20}, {21}, {22}, {23}, {24}, {25}, {26}, {27}, {28}, {29} 
+};
+static const REC_SEL_NAMED_SETS *imp_rolled_set    = &imp_names[0];
+static const REC_SEL_NAMED_SETS *imp_flat_set      = &imp_names[1];
+static const REC_SEL_NAMED_SETS *imp_latent_set    = &imp_names[2];
+static const REC_SEL_NAMED_SETS *imp_live_scan_set = &imp_names[3];
+
+
+/* NIST IR {7175}, August {2004}, Fingerprint Image Quality, Table {2}, p. {12}. */
+static const REC_SEL_NAMED_SETS nqm_names[] = {
+   {{ "excellent", NULL },       1, {{num:1}}},
+   {{ "very good", "vg", NULL }, 1, {{num:2}}},
+   {{ "good", NULL },            1, {{num:3}}},
+   {{ "fair", NULL },            1, {{num:4}}},
+   {{ "poor", NULL },            1, {{num:5}}},
+};
+
+/* Image Type, based on ANSI/NIST-ITL 1-2007, Section 15.1.4, p. 45. */
+static const REC_SEL_NAMED_SETS imt_names[] = {
+   {{ "face",   NULL }, 1, {{str : "FACE"}}},
+   {{ "scar",   NULL }, 1, {{str : "SCAR"}}},
+   {{ "mark",   NULL }, 1, {{str : "MARK"}}},
+   {{ "tattoo", NULL }, 1, {{str : "TATTOO"}}},
+};
+
+/* Subject Pose, based on ANSI/NIST-ITL 1-2007, Table 11, p. 30.19, p. 51. */
+static const REC_SEL_VALUE pos_values[] = {
+   {str : "F"}, {str : "R"}, {str : "L"}, {str : "A"}, {str : "D"}
+};
+
+static const REC_SEL_NAMED_SETS pos_names[] = {
+   {{ "full face frontal", "fff", NULL },   1, {{str : "F"}}},
+   {{ "right profile", "rp", NULL },        1, {{str : "R"}}},
+   {{ "left profile", "lp", NULL },         1, {{str : "L"}}},
+   {{ "angled pose", "ap", NULL },          1, {{str : "A"}}},
+   {{ "determined 3d pose", "d3dp", NULL }, 1, {{str : "D"}}},
+};
+
+/* The structure below ties together the structures and arrays defined
+   above with more information about each type of record selector.
+   The record selector types themselves are enumerated in an2k.h. */
+typedef struct rec_sel_type_params_s {
+   const REC_SEL_TYPE type;
+   const char *name;
+   const char *description;
+   const char *reference;
+   const int min;
+   const int max;
+   const REC_SEL_VALUE_TYPE value_type;
+   const int value_count;
+   const REC_SEL_VALUE *enum_values;
+   const int named_sets_count;
+   const REC_SEL_NAMED_SETS *named_sets;
+} REC_SEL_TYPE_PARAMS;
+
+/* These types are enumerated in an2k.h. */
+static const REC_SEL_TYPE_PARAMS rec_sel_type_params[] = {
+   { rs_and, "AND", "Boolean AND",
+     NULL, /* no reference in std */
+     0, 0, rsv_rs,
+     0, NULL, 0, NULL },
+   { rs_or,  "OR",  "Boolean OR",
+     NULL,
+     0, 0, rsv_rs,
+     0, NULL, 0, NULL },
+   { rs_lrt, "LRT", "Logical Record Type",
+     "ANSI/NIST-ITL 1-2007, Table 4, p. 13.",
+     1, 99, rsv_num, 
+     AR_SZ(lrt_values), lrt_values, AR_SZ(lrt_names), lrt_names },
+   { rs_fgplp, "FGPLP", "Finger or Palm Position",
+     "ANSI/NIST-ITL 1-2007, Tables 12 and 35, pp. 31 and 84.",
+     0, 36, rsv_num,
+     AR_SZ(fgplp_values), fgplp_values, AR_SZ(fgplp_names), fgplp_names },
+   { rs_fgp, "FGP", "Finger Position",
+     "ANSI/NIST-ITL 1-2007, Table 12, p. 31.",
+     0, 19, rsv_num,
+     FGP_VALUES_COUNT, fgplp_values, FGP_NAMES_COUNT, fgplp_names },
+   { rs_plp, "PLP", "Palmprint Position",
+     "ANSI/NIST-ITL 1-2007, Table 35, p. 84.",
+     20, 36, rsv_num,
+     0, NULL, AR_SZ(fgplp_names)-FGP_NAMES_COUNT, fgplp_names+FGP_NAMES_COUNT },
+   { rs_imp, "IMP", "Impression Type",
+     "ANSI/NIST-ITL 1-2007, Table 11, p. 30.",
+     0, 29, rsv_num,
+     AR_SZ(imp_values), imp_values, AR_SZ(imp_names), imp_names },
+   { rs_idc, "IDC", "Image Designation Character",
+     "ANSI/NIST-ITL 1-2007.",
+     0, 0, rsv_num,
+     0, NULL, 0, NULL },
+   { rs_nqm, "NQM", "NIST Quality Metric",
+     "NIST IR 7151, August 2004, Fingerprint Image Quality",
+     1, 5, rsv_num,
+     0, NULL, AR_SZ(nqm_names), nqm_names },
+   { rs_imt, "IMT", "Image Type",
+     "ANSI/NIST-ITL 1-2007, Section 15.1.3, p. 45.",
+     0, 0, rsv_str,
+     0, NULL, AR_SZ(imt_names), imt_names },
+   { rs_pos, "POS", "Subject Pose",
+     "ANSI/NIST-ITL 1-2007, Table 19, p. 51.",
+     0, 0, rsv_str,
+     AR_SZ(pos_values), pos_values, AR_SZ(pos_names), pos_names },
+};
+
+/***********************************************************************
+************************************************************************
+#cat: get_type_params_by_name - Takes a string representation
+#cat:               of a possible record selection parameter type name
+#cat:               and returns the corresponding record selection
+#cat:               type, if it exists.
+
+   Input
+      type        - the enumerated type value to look up
+   Output
+      params      - points to the type properties structure
+   Return
+      Zero        - success
+      Nonzero     - not found or system error
+
+************************************************************************/
+static int
+get_type_params_by_type(const REC_SEL_TYPE_PARAMS **params,
+			const REC_SEL_TYPE type)
+#define ERRHDR "ERROR : get_type_params_by_type : "
+{
+   const REC_SEL_TYPE_PARAMS *type_params;
+
+   for (type_params = rec_sel_type_params;
+	type_params - rec_sel_type_params < AR_SZ(rec_sel_type_params);
+	type_params++) {
+      if (type == type_params->type)
+	 break;
+   }
+   if (type_params - rec_sel_type_params == AR_SZ(rec_sel_type_params)) {
+      fprintf(stderr, ERRHDR "parameters not specified for type %d\n", type);
+      return -1;
+   }
+
+   *params = type_params;
+   return 0;
+}
+#undef ERRHDR
+
+/***********************************************************************
+************************************************************************
+#cat: get_type_params_by_name - Takes a string representation
+#cat:               of a possible record selection parameter type name
+#cat:               and returns the corresponding record selection
+#cat:               type, if it exists.
+
+   Input
+      type_name   - a character string containing the type name to look up
+   Output
+      params      - points to the type properties structure
+   Return
+      Zero        - success
+      Nonzero     - not found or system error
+
+************************************************************************/
+static int
+get_type_params_by_name(const REC_SEL_TYPE_PARAMS **params,
+			const char *const type_name)
+#define ERRHDR "ERROR : get_type_params_by_name : "
+{
+   const REC_SEL_TYPE_PARAMS *type_params;
+
+   for (type_params = rec_sel_type_params;
+	type_params - rec_sel_type_params < AR_SZ(rec_sel_type_params);
+	type_params++) {
+      if (!strcmp(type_params->name, type_name)) /* match */
+	 break;
+   }
+   if (type_params - rec_sel_type_params == AR_SZ(rec_sel_type_params)) {
+      fprintf(stderr, ERRHDR "parameters not specified for type '%s'\n",
+	      type_name);
+      return -1;
+   }
+   
+   *params = type_params;
+   return 0;
+}
+#undef ERRHDR
+
+/***********************************************************************
+************************************************************************
+#cat: select_ANSI_NIST_record - Takes an ANSI/NIST record and a set of
+#cat:               selection criteria and determines whether the
+#cat:               record matches the criteria.
+
+   Input:
+      record     - record structure to be checked
+      criteria   - criteria structure indicating what to check
+
+   Return Code:
+      TRUE       - record meets the criteria
+      FALSE      - record does not meet the criteria
+************************************************************************/
+int select_ANSI_NIST_record(RECORD *record,
+			    const REC_SEL *const criteria)
+#define ERRHDR "ERROR : select_ANSI_NIST_record : "
+{
+   FIELD *field;
+   int parm_i, subfield_i, field_i;
+   int item_value;
+   int fgp_count = 0, fgp_value[17];
+   const REC_SEL_TYPE_PARAMS *type_params;
+   
+   /* To simplify composition of criteria, missing or empty criteria
+      structures match by default. */
+   if (!criteria || criteria->num_values == 0)
+      return TRUE;		/* default unfiltered */
+
+   /* Check the criteria. */
+
+   for (parm_i = 0; parm_i < criteria->num_values; parm_i++) {
+
+    /* In order to simplify recursion and produce a correct and robust
+      implementation, each node contains either a collection of other
+      nodes whose values are combined by a boolean operation, or a
+      single value of a specific type. */
+
+     switch (criteria->type) {
+
+	 /* Both 'rs_and' and 'or' either short circuit or continue, others
+	    return TRUE or FALSE immediatly. */
+      case rs_and:
+	 if (!select_ANSI_NIST_record(record, criteria->value.rs[parm_i]))
+	    return FALSE;	/* 'rs_and' short circuit */
+	 break;
+
+      case rs_or:
+	 if (select_ANSI_NIST_record(record, criteria->value.rs[parm_i]))
+	    return TRUE;	/* 'rs_or' short circuit */
+	 break;
+
+      case rs_fgp:			/* finger position */
+      case rs_plp:			/* palmprint position */
+      case rs_fgplp:		/* finger or palmprint position */
+	 /* First, find the values and convert them to integers... */
+	 if (!lookup_FGP_field(&field, &field_i, record))
+	    return FALSE;
+	 for (subfield_i=0;
+	      subfield_i < field->num_subfields;
+	      subfield_i++) {
+	    /* In the files on disk, the FGP field in types 3-6 are
+	       stored as binary integers, with 255 indicating unused
+	       fields, and in types 9 and 13-15 as 1-2 byte ASCII
+	       numbers, but they are all ASCII in the ANSI/NIST
+	       structure. */
+	    const int new_fgp_int
+	       = atoi((char *)field->subfields[subfield_i]->items[0]->value);
+	    
+	    if (new_fgp_int == 255)
+	       break;
+	    if (subfield_i > AR_SZ(fgp_value)) {
+	       fprintf(stderr, ERRHDR
+		       "unsupported number of FGP items > %d\n",
+		       AR_SZ(fgp_value));
+	       return FALSE;
+	    }
+	    fgp_value[fgp_count++] = new_fgp_int;
+	 }
+
+	 /* ...then check for a match */
+	 for (subfield_i=0; subfield_i < fgp_count; subfield_i++)
+	    if (criteria->value.num == fgp_value[subfield_i])
+	       return TRUE;
+	 break;
+
+      case rs_imp:			/* impression type */
+	 if (!lookup_IMP_field(&field, &field_i, record))
+	    return FALSE;
+	 item_value = atoi((char *)field->subfields[0]->items[0]->value);
+	 if (criteria->value.num == item_value)
+	    return TRUE;
+	 break;
+
+      case rs_idc:			/* image descriptor character */
+	 if (record->type == TYPE_1_ID)
+	    return FALSE;	/* Records of TYPE-1 have no IDC. */
+	 if (!lookup_ANSI_NIST_field(&field, &field_i, IDC_ID, record))
+	    return FALSE;
+	 item_value = atoi((char *)field->subfields[0]->items[0]->value);
+	 if (criteria->value.num == item_value)
+	    return TRUE;
+	 break;
+
+      case rs_lrt:			/* logical record type */
+	 if (record->type == criteria->value.num)
+	    return TRUE;
+	 break;
+
+     case rs_nqm:
+	if (record->type != TYPE_14_ID)
+	   return FALSE;
+	if (!lookup_ANSI_NIST_field(&field, &field_i, NQM_ID, record))
+	   return FALSE;
+	for (subfield_i = 0;
+	     subfield_i < field->num_subfields;
+	     subfield_i++) {
+	   /* const int new_fgp_int
+	      = atoi((char *)field->subfields[subfield_i]->items[0]->value); */
+	   const int new_nfiq_int
+	      = atoi((char *)field->subfields[subfield_i]->items[1]->value);
+	   if (subfield_i > 0) 
+	      fprintf(stderr, "WARNING : select.c : "
+		      "NQM subfield %d > 1, handling of multiple finger slaps "
+		      "not completely implemented", subfield_i+1);
+	   if (criteria->value.num == new_nfiq_int)
+	      return TRUE;
+	}
+	break;
+
+     case rs_imt:
+	if (record->type != TYPE_10_ID)
+	   return FALSE;
+	
+	break;
+
+     case rs_pos:
+	if (record->type != TYPE_10_ID)
+	   return FALSE;
+	if (!lookup_ANSI_NIST_field(&field, &field_i, POS_ID, record))
+	   return FALSE;
+	for (subfield_i = 0;
+	     subfield_i < field->num_subfields;
+	     subfield_i++) {
+	   const int new_pos_int
+	      = atoi((char *)field->subfields[subfield_i]->items[0]->value);
+
+	   if (subfield_i > 0) 
+	      fprintf(stderr, "WARNING : select.c : "
+		      "POS subfield %d > 1, handling of multiple finger slaps "
+		      "not completely implemented", subfield_i+1);
+	   if (criteria->value.num == new_pos_int)
+	      return TRUE;
+	}
+	
+	break;
+
+      default:
+	 if (get_type_params_by_type(&type_params, criteria->type))
+	    fprintf(stderr, ERRHDR 
+		    "missing implementation of criterion type # %d\n",
+		    criteria->type);
+	 else
+	    fprintf(stderr, ERRHDR
+		    "incomplete implementation of criterion type %s (%s)\n",
+		    type_params->name, type_params->description);
+	 break;
+      }
+   }
+   /* Either all the and-ed values were true, or none of the others were.. */
+   return criteria->type == rs_and ? TRUE : FALSE;
+}
+#undef ERRHDR
+
+/***********************************************************************
+************************************************************************
+#cat: new_rec_sel - Allocates then fills a record selector structure
+#cat:              designed to be combined with other similar
+#cat:              structures to represent the criteria for selecting
+#cat:              records from ANSI/NIST files.
+
+   Input:
+      type       - the type of record selector to create
+      num_values - the number of values specified next
+      ...        - values, either one number or some nested record selectors
+   Output:
+      recsel     - points to the allocated structure
+   Return Code:
+      Zero       - success
+      Negative   - error
+************************************************************************/
+int new_rec_sel(REC_SEL **rec_sel, const REC_SEL_TYPE type,
+		const int num_values, ...)
+#define ERRHDR "ERROR : new_rec_sel : "
+{
+   va_list values;
+   int ret, i, j;
+
+   va_start(values, num_values);
+
+   if (num_values < 1) {
+      fprintf(stderr, ERRHDR "at least one value must be supplied");
+      ret = -1;
+   } else {
+      ret = alloc_rec_sel(rec_sel, type, num_values);
+      if (!ret) {
+	 if (type == rs_and || type == rs_or) { /* boolean combination */
+	    /* i counts args, j counts stored non-NULL values */
+	    for(i = j = 0; i < num_values; i++) {
+	       REC_SEL *rs = va_arg(values, REC_SEL *);
+	       if (rs != NULL)
+		  (*rec_sel)->value.rs[j++] = rs;
+	    }
+	    (*rec_sel)->num_values = j;
+	 } else if (num_values > 1) { /* error */
+	    const REC_SEL_TYPE_PARAMS *type_params;
+	    if (!get_type_params_by_type(&type_params, type)) {
+	       fprintf(stderr, ERRHDR "too many values %d for type %s\n",
+		       num_values, type_params->name);
+	    }
+	    ret = -2;
+	 } else {		/* numeric value */
+	    (*rec_sel)->value.num = va_arg(values, int);
+	    (*rec_sel)->num_values = 1;
+	 }
+      }
+   }
+
+   va_end(values);
+   return ret;
+}
+#undef ERRHDR
+
+/***********************************************************************
+************************************************************************
+#cat: alloc_rec_sel - Allocates an empty initialized structure
+#cat:              designed to be combined with other similar
+#cat:              structures to represent the criteria for selecting
+#cat:              records from ANSI/NIST files.
+
+   Input:
+      type       - the type of record selector to create
+      alloc_values  - the size of array or number value of slots to allocate
+   Output:
+      recsel     - points to the allocated structure
+   Return Code:
+      Zero       - success
+      Negative   - error
+************************************************************************/
+int alloc_rec_sel(REC_SEL **rec_sel,
+		  const REC_SEL_TYPE type,
+		  const int alloc_values)
+{
+   REC_SEL *rs;
+   int size;
+
+   if (type == rs_and || type == rs_or)
+      size = sizeof(REC_SEL) + alloc_values * sizeof(REC_SEL_VALUE);
+   else
+      size = sizeof(REC_SEL);
+
+   rs = (REC_SEL *)malloc(size);
+   if (!rs) {
+      perror("ERROR : alloc_rec_sel : cannot malloc %d bytes : ");
+      return(-1);
+   }
+   rs->alloc_values = alloc_values;
+   rs->type = type;
+   rs->num_values = 0;
+   if (type == rs_and || type == rs_or) {
+      rs->value.rs = (REC_SEL**)(rs + 1);
+   }
+   *rec_sel = rs;
+
+   return 0;
+}
+
+/***********************************************************************
+************************************************************************
+#cat: free_rec_sel - Deallocate a record selection criteria structure
+#cat:              and all the nested allocated structures.  Ignore
+#cat:              NULL pointers.
+
+   Input:
+      critera	 - points to the structure to be deallocated
+************************************************************************/
+void free_rec_sel(REC_SEL *criteria) {
+   int i;
+
+   if (criteria) {
+      if (criteria->type == rs_and || criteria->type == rs_or) {
+	 for (i = 0; i < criteria->num_values; i++) {
+	    free_rec_sel(criteria->value.rs[i]);
+	 }
+      }
+      free(criteria);
+   }
+}
+
+/***********************************************************************
+************************************************************************
+#cat: add_rec_sel_num - Create a record selection criteria structure
+#cat:              of the specified type and numeric value, and add it to
+#cat:              another record selection criteria structure, which
+#cat:              has been created separately and assigned a logical
+#cat:              operation to apply in combining the results of
+#cat:              a record against the nested criteria structures.
+
+   Input:
+      head       - a pointer to the location of the containing structure
+      type	 - the type of selection criterion value to add
+      value      - the numeric value of the criterion
+   Output:
+      head  	 - the location of the containing structure, which could 
+                   be reallocated to make enough space for the added value
+   Return Code:
+      zero  	 - success
+      negative   - error
+************************************************************************/
+int add_rec_sel_num(REC_SEL **head, const REC_SEL_TYPE type, const int value)
+{
+   REC_SEL *new_sel;
+   int res;
+   
+   res = new_rec_sel(&new_sel, type, 1, value);
+   if (res < 0) {
+      return res;
+   }
+
+   return add_rec_sel(head, new_sel);
+}
+
+/***********************************************************************
+************************************************************************
+#cat: add_rec_sel_str - Create a record selection criteria structure
+#cat:              of the specified type and string value, and add it to
+#cat:              another record selection criteria structure, which
+#cat:              has been created separately and assigned a logical
+#cat:              operation to apply in combining the results of
+#cat:              a record against the nested criteria structures.
+
+   Input:
+      head       - a pointer to the location of the containing structure
+      type	 - the type of selection criterion value to add
+      value      - a pointer to the string value of the criterion
+   Output:
+      head  	 - the location of the containing structure, which could 
+                   be reallocated to make enough space for the added value
+   Return Code:
+      zero  	 - success
+      negative   - error
+************************************************************************/
+int add_rec_sel_str(REC_SEL **head, const REC_SEL_TYPE type, const char* value)
+{
+   REC_SEL *new_sel;
+   int res;
+
+   res = alloc_rec_sel(&new_sel, type, 1);
+   if (res < 0) {
+      return res;
+   }
+   new_sel->num_values = 1;
+   new_sel->value.str = (char *)value;
+
+   return add_rec_sel(head, new_sel);
+}
+
+/***********************************************************************
+************************************************************************
+#cat: add_rec_sel - Add specified record selection criteria
+#cat:              structure to another record selection criteria
+#cat:              structure, which has been created separately and
+#cat:              assigned a logical operation to apply in combining
+#cat:              the results of checking a record against the nested
+#cat:              criteria structures.
+
+   Input:
+      head       - a pointer to the location of the containing structure
+      new_sel	 - the selection criteria structure to add
+   Output:
+      head  	 - the location of the containing structure, which could 
+                   be reallocated to make enough space for the added value
+   Return Code:
+      zero  	 - success
+      negative   - error
+************************************************************************/
+int add_rec_sel(REC_SEL **head, const REC_SEL *const new_sel)
+#define ERRHDR "ERROR : add_rec_sel : "
+{
+   REC_SEL* new_ptr;
+
+   /* as usual, most of the code handles the exceptional case, here
+      more space is needed */
+   if ((*head)->num_values == (*head)->alloc_values) {
+      /* double the number of available slots */
+      int new_alloc_values = 2 * (*head)->alloc_values;
+      int new_size 
+	 = sizeof(REC_SEL) + new_alloc_values*sizeof(REC_SEL_VALUE);
+      
+      new_ptr = realloc(*head, new_size);
+      if (new_ptr == NULL) {
+	 fprintf(stderr, ERRHDR "connot realloc from %d bytes to %d\n",
+		 (*head)->alloc_values * sizeof(REC_SEL_VALUE), new_size);
+	 return -1;
+      }
+      *head = new_ptr;
+      (*head)->alloc_values = new_alloc_values;
+      (*head)->value.rs = (REC_SEL**)(*head + 1);	 
+   }
+
+   /* add the new selector value */
+   /* suppress compiler complaint about discarding the const qualifier
+      by casting */
+   (*head)->value.rs[(*head)->num_values++] = (REC_SEL *)new_sel;
+   return 0;
+}
+#undef ERRHDR
+
+/***********************************************************************
+************************************************************************
+#cat: validate_rec_sel_num_value - Check the given integer value
+#cat:              against the restrictions in the given type
+#cat:              parameters, and indicate whether the value is
+#cat:              valid for this type.
+
+   Input:
+      type_params - points to a record selector type parameter structure
+      value      - the value to check to see if it is valid for the given type
+   Return Code:
+      zero       - OK
+      nonzero    - not valid
+************************************************************************/
+static int 
+validate_rec_sel_num_value(const REC_SEL_TYPE_PARAMS *const type_params,
+			   const int value)
+#define ERRHDR "ERROR : validate_rec_sel_num_value : "
+{
+   /* The standard does not define numeric values for some things... */
+   if (rsv_num != type_params->value_type)
+      return FALSE;
+
+   /* First check the extremes. */
+   if (type_params->min < type_params->max) {
+      if (value < type_params->min) {
+	 fprintf(stderr, ERRHDR "%s (%s) value %d is below the minimum of %d\n",
+		 type_params->description, type_params->name, 
+		 value, type_params->min);
+	 return -1;
+      } else if (value > type_params->max) {
+	 fprintf(stderr, ERRHDR "%s (%s) value %d is above the maximum of %d\n",
+		 type_params->description, type_params->name, 
+		 value, type_params->max);
+	 return -2;
+      }
+   } 
+
+   /* Even within the extremes, not all values are necessarily valid. */
+   if (type_params->enum_values) {
+      const REC_SEL_VALUE *valp;
+      
+      for (valp = type_params->enum_values;
+	   valp - type_params->enum_values < type_params->value_count;
+	   valp++) {
+	 if ((*valp).num == value) {
+	    return 0;
+	 }
+      }
+      fprintf(stderr, ERRHDR "%s (%s) value %d is not valid.\n",
+	      type_params->description, type_params->name, value);
+      return -3;
+   }
+
+   /* If no constraints are defined, then anything goes. */
+   return 0;
+}
+#undef ERRHDR
+
+/***********************************************************************
+************************************************************************
+#cat: rec_sel_usage - Print information about how to specify record
+#cat:              selectors of a particular type
+
+   Input:
+      tp         - a pointer to a set of record selector type parameters
+   Output:       
+                 - prints to stderr
+   Return Code:
+                 - none
+***********************************************************************/
+static void rec_sel_usage(const REC_SEL_TYPE_PARAMS *const tp)
+{
+   const int ind_inc = 3, line_len = 80;
+   int i, pos, indent = ind_inc;
+
+   fprintf(stderr, "%*sSpecification of %s (%s):\n",
+	   indent, "", tp->description, tp->name);
+   indent += ind_inc;
+   if (tp->reference)
+      fprintf(stderr, "%*sreference: %s\n", indent, "", tp->reference);
+   if (tp->min != tp->max) 
+      fprintf(stderr, "%*slimits: %d, %d\n", indent, "", tp->min, tp->max);
+   else
+      fprintf(stderr, "%*slimits: unspecified\n", indent, "");
+
+   if (tp->value_count) {
+      pos = fprintf(stderr, "%*svalid values: ", indent, "");
+      for (i = 0; i < tp->value_count; i++) {
+	 if (pos + 4 > line_len) 
+	    /* spaces below to match:    'valid values: ' */
+	    pos = fprintf(stderr,   "\n%*s              ", indent, "") - 1;
+	 pos += fprintf(stderr, "%ld, ", tp->enum_values[i].num);
+      }
+      fprintf(stderr, "\b\b.\n");
+   } else {
+      fprintf(stderr, "%*svalid values: whole range, endpoints included\n",
+	      indent, "");
+   }
+
+   if (tp->named_sets_count) {
+      fprintf(stderr, "%*snamed sets of values"
+	      " (unique abbreviations accepted):\n", indent, "");
+      indent += ind_inc;
+      for (i = 0; i < tp->named_sets_count; i++) {
+	 const REC_SEL_NAMED_SETS *const ns = tp->named_sets + i;
+	 const char *const *npp;
+	 const REC_SEL_VALUE *vp;
+	 
+	 pos = fprintf(stderr, "%*s", indent, "");
+	 for (npp = ns->names; *npp; npp++) {
+	    if (pos + 2 + strlen(*npp) > line_len)
+	       pos = fprintf(stderr,   "\n%*s", indent, "") - 1;
+	    pos += fprintf(stderr, "%s, ", *npp);
+	 }
+	 indent += ind_inc;
+
+	 pos += fprintf(stderr, "\b\b ") - 4;
+	 if (pos + 8 > line_len)
+	    pos = fprintf(stderr, "\n%*s", indent, "") - 1;
+	 pos += fprintf(stderr, "=> {");
+	 for (vp = ns->values; vp - ns->values < ns->num_values; vp++) {
+	    if (pos + 4 > line_len)
+	       pos = fprintf(stderr,   "\b\n%*s", indent, "") - 2;
+	    if (rsv_num == tp->value_type)
+	       pos += fprintf(stderr, "%ld, ", (*vp).num);
+	    else if (rsv_str == tp->value_type)
+	       pos += fprintf(stderr, "\"%s\", ", (*vp).str);
+	 }
+	 fprintf(stderr, "\b\b}\n");
+	 indent -= ind_inc;
+      }
+      indent -= ind_inc;
+   }
+}
+
+/***********************************************************************
+************************************************************************
+#cat: parse_rec_sel_option - Parse a command line option specifying
+#cat:              record selection criteria, such as FGP or IMP.
+#cat:              Values may be specified as integers from tables in
+#cat:              the standard, lists or ranges of such integers, or
+#cat:              strings that map to one or more integer values.
+#cat:              Returns a record selector of type 'or' containing
+#cat:              all the specified values.
+
+   Input:
+      type       - type of selector to parse, e.g., FGP, or IMP.
+      optstr	 - option argument string
+      rest       - NULL or address for returning a pointer into a string
+      head       - top level record selector, NULL on the first call,
+                   or the address returned previously
+      verbose    - if true, print some information to stderr
+   Output:
+      rest       - address of remaining unparsed portion of option string
+      head 	 - address of the top level criteria structure holding 
+                   the results of the parsing
+
+   Return Code:
+      zero     	 - success
+      nonzero    - error
+************************************************************************/
+int parse_rec_sel_option(const REC_SEL_TYPE type,
+			 const char *const optstr,
+			 const char **remainder,
+			 REC_SEL **head,
+			 const int verbose)
+#define ERRHDR "ERROR : parse_rec_sel_option : "
+{
+   const char *const separators = ",-:"; /* meanings: list, range, stop */
+   const REC_SEL_TYPE_PARAMS *type_params;
+   const char *startp, *strendp;
+   int range_start;
+   
+   /* the first time through, an 'rs_or' record needs to be created to
+      hold the alternative acceptable values for this type */
+   if (*head == NULL) {
+      REC_SEL *orsel;
+
+      if (alloc_rec_sel(&orsel, rs_or, 5)) {
+	 return -1;
+      }
+      *head = orsel;
+   }
+   
+   /* Choose a table for interpreting names and validating values
+      based on the selector type. */
+   if (get_type_params_by_type(&type_params, type)) {
+      fprintf(stderr, ERRHDR "option parsing not implemented for type %d\n",
+	      type);
+      return -1;
+   }
+
+   /* print a notice about parameters about to be processed, if it
+      looks like there are any */
+   if (verbose && *optstr != '\0' && *optstr != ':')
+      fprintf(stderr, "%s: using selector type %s (%s) parameters\n\t",
+	      __func__, type_params->description, type_params->name);
+
+   /* Parse each field of the option string value.  A field is a
+      single token that specifies one or more values, i.e., a name or
+      number.  Fields are combined using commas to form a list, or a
+      dash to form a range of numerical values. */
+
+   range_start = -1; /* Zero is typically a valid field value, so -1
+			is used to indicate when no range start value
+			has been identified. */
+
+   /* loop over the fields in the option argument string */
+   for (startp = strendp = optstr; 
+	*strendp != '\0' && *strendp != ':';
+	startp = strendp+1) {
+      char *numendp;
+      int new_value;
+
+      /* skip any spaces preceeding the value */
+      while (*startp == ' ') {
+	 ++startp;
+      }
+
+      /* find an option field separator or the end of the option */
+      for(strendp = startp; *strendp; strendp++) {
+	 if (strchr(separators, *strendp)) {
+	    break;		/* break small local for-loop */
+	 }
+      }
+      /* strendp now points to a value separator or the end of the string */
+
+      /* check for an empty string, which could happen after ignoring spaces */
+      if (startp == strendp) {
+	 fprintf(stderr, ERRHDR
+		 "missing value near character %d in argument : '%s'\n",
+		 startp-optstr+1, optstr);
+	 return -1;
+      }
+      
+      if (!strncasecmp(startp, "help", 4)) {
+ 	 rec_sel_usage(type_params);
+	 if ( remainder && 
+	      (*strendp != ':' || !strncasecmp(strendp, ":help", 5)) ) {
+	    *remainder = startp;
+	    return 0;
+	 }
+	 return -1;  /* not really an error, but should not proceed */
+      }
+
+      /* check for a number that takes up the whole string */
+      new_value = strtol(startp, &numendp, 10);
+      if (numendp == strendp) {                              /* number found */
+
+	 /* Validate the number.  First check the extremes. */
+	 if (validate_rec_sel_num_value(type_params, new_value))
+	    return -3;
+	 
+	 /* What is the use of the number? */
+	 if (range_start != -1) {                 /* end of range */
+
+	    if (type_params->enum_values) { /* allowed values are enumerated */
+	       /* include only valid values within the range */
+	       const REC_SEL_VALUE *valp;
+
+	       for (valp = type_params->enum_values;
+		    valp - type_params->enum_values < type_params->value_count;
+		    valp++) {
+		  if ((*valp).num >= range_start && (*valp).num <= new_value) {
+		     if (verbose) 
+			fprintf(stderr, "%ld ", (*valp).num);
+		     if (add_rec_sel_num(head, type, (*valp).num))
+			return -5;
+		  }
+	       }
+	    } else { /* no enumerated values */
+	       /* all values within the range are valid */
+	       int val;
+
+	       for (val = range_start; val <= new_value; val++) {
+		  if (verbose)
+		     fprintf(stderr, "%d ", val);
+		  if (add_rec_sel_num(head, type, val))
+		     return -5;
+	       }
+	    }
+	    range_start = -1;
+
+	 } else if (strendp && *strendp == '-') { /* beginning of range */
+	    range_start = new_value;
+
+	 } else {		                  /* just a number */
+	    if (verbose)
+	       fprintf(stderr, "%d ", new_value);
+	    if (add_rec_sel_num(head, type, new_value))
+	       return -6;
+	 }
+
+      } else if (range_start != -1 || *strendp == '-') { /*invalid range found*/
+	 fprintf(stderr, ERRHDR "unsupported range specifier : %s\n", startp);
+	    return -7;
+
+      } else {		                           /* maybe its a named value */
+	 /* just looking, using pointers to constants to make sure */
+	 const REC_SEL_NAMED_SETS *ntp, *found_ntp;
+	 const char *const *namep, *const *found_namep;
+	 const REC_SEL_NAMED_SETS *const name_table
+	    = type_params->named_sets;
+	 int num_dups = 0, num_problem_dups = 0, exact_match = 0;
+	 const char *dups[20];
+
+	 /* Check the relevant table of named value sets, allowing
+	    unique abbreviations. */
+	 found_ntp = NULL;
+	 for (ntp = name_table;
+	      ntp - name_table < type_params->named_sets_count;
+	      ntp++) {
+	    for (namep = ntp->names; *namep; namep++) {
+	       if (!strncasecmp(startp, *namep, strendp-startp)) {
+		  if (!strncasecmp(startp, *namep, strlen(*namep))) {/* exact */
+		     found_ntp = ntp;
+		     exact_match = 1;
+		  }
+		  if (num_dups < AR_SZ(dups)) {
+		     dups[num_dups++] = *namep;
+		  }
+		  if (found_ntp  /* duplicate abbreviation */
+		      && found_ntp != ntp) {  /* duplicates within a set
+					       are not a problem */
+			num_problem_dups++;
+		  } else {
+		     found_namep = namep;
+		     found_ntp = ntp;		    
+		  }
+	       }
+	    }
+	 }
+
+	 if (found_ntp) {
+	    const REC_SEL_VALUE *valp;
+	    int dup_i;
+	    
+	    if (num_problem_dups && !exact_match) {
+	       fprintf(stderr, ERRHDR 
+		       "ambiguous abbreviation '%.*s', could match ",
+		       strendp-startp, startp);
+	       for (dup_i = 0; dup_i < num_dups; dup_i++) {
+		  fprintf(stderr, "'%s', ", dups[dup_i]);
+	       }
+	       fprintf(stderr, "\b\b.\n");
+	       return -8;
+	    }
+	    
+	    /* Convert text items to canonical values, either numbers
+	       or strings. */
+	    for (valp = found_ntp->values;
+		 valp - found_ntp->values < found_ntp->num_values; 
+		 valp++) {
+	       if (rsv_num == type_params->value_type) {
+		  if (verbose)
+		     fprintf(stderr, "%ld ", valp->num);
+		  if (add_rec_sel_num(head, type, valp->num) < 0)
+		     return -9;
+	       } else if (rsv_str == type_params->value_type) {
+		  if (verbose)
+		     fprintf(stderr, "\"%s\" ", valp->str);
+		  if (add_rec_sel_str(head, type, valp->str) < 0)
+		     return -11;
+	       }
+	    }
+	 } else {
+	    fprintf(stderr, ERRHDR "unimplemented %s (%s) name : '%.*s'\n",
+		    type_params->description, type_params->name,
+		    strendp-startp, startp);
+	    return -10;
+	 }
+      }
+   }
+
+   /* print a newline only if there were parameter values printed */
+   if (verbose && *optstr != '\0' && *optstr != ':')
+      fprintf(stderr, "\n");
+
+   /* The remainder, if any, after the colon ':', can be parsed
+      differently by the caller, if the call included a non-null
+      pointer to a character pointer to recieve the location. */
+   if (*strendp == ':') {	/* there is more that wasn't parsed */
+      if (remainder) {
+	 *remainder = ++strendp;
+      } else {
+	 fprintf(stderr, ERRHDR "part of option specifier not parsed : %s\n",
+		 ++strendp);
+      }
+   } else if (remainder) {	/* end of string, but caller wants remainder */
+      *remainder = strendp;
+   }
+
+   return 0;
+}
+#undef ERRHDR
+
+/***********************************************************************
+************************************************************************
+#cat: simplify_rec_sel - Simplify a set of record selectors,
+#cat:              eliminating unnecessary or redundant elements, like
+#cat:              an 'rs_and' or 'rs_or' with one or no arguments,
+#cat:              combining nested 'rs_and's, etc.
+
+   Input:
+      rec_sel    - pointer to record selector to simplify
+   Output:
+      rec_sel    - pointer to simplified record selector
+   Return Code:
+      zero     	 - success
+      negative   - error
+************************************************************************/
+int simplify_rec_sel(REC_SEL **rs)
+{
+#if 0
+   int i, j, k;		/* loop control is tricky here */
+
+   /* atomic record selectors cannot be simplified,
+      only 'rs_and' and 'rs_or' types */
+   if ((*rs)->type == rs_and || (*rs)->type == rs_or) {
+      REC_SEL **rsvn = (*rs)->value.rs;
+      for (i = 0; i < (*rs)->num_values; i++) {
+	 if (simplify_rec_sel(&rsvn[i])) /* depth first recursion */
+	    return -1;
+	 
+	 /* eliminate NULLs */
+	 while ((*rs)->num_values > 1 && rsvn[i] == NULL) {
+	    /* shift remaining values left to eliminate the NULL */
+	    for(j = i + 1; j < (*rs)->num_values; j++) {
+	       rsvn[j - 1] == rsvn[j];
+	    }
+	    (*rs)->num_values--; /* dynamic loop limit change */
+	 }
+
+	 /* eliminate duplicates */
+	 j = i + 1;
+	 while (j < (*rs)->num_values) {
+	    if (rsvn[i]->type == rsvn[j]->type
+		&& rsvn[i]->value.num == rsvn[j]->value.num) {
+	       /* shift remaining values left to eliminate the redundant one */
+	       for (k = j + 1; k < (*rs)->num_values; k++) {
+		  rsvn[k - 1] = rsvn[k];
+	       }
+	       (*rs)->num_values--; /* dynamic loop limit change */
+	    } else {
+	       j++;   /* increment j only if we have not changed the value */
+	    }
+	 }
+      }
+
+      /* splice out unneeded boolean item */
+      if ((*rs)->num_values == 0) {
+	 /*	 free_rec_sel(*rs); */
+	 *rs = NULL;
+      } else if ((*rs)->num_values == 1) {
+	 REC_SEL *old_rs = *rs;
+	 *rs = (*rs)->value.rs[0];
+	 /*	 free_rec_sel(old_rs); */
+      }
+   }
+#endif
+   return 0;
+}
+
+/***********************************************************************
+************************************************************************
+#cat: write_rec_sel - Write a set of record selectors to an open I/O
+#cat:              stream in a human readable format that can be
+#cat:              examined, modified, and read back in with
+#cat:              read_rec_sel.
+
+   Input:
+      fpout      - pointer to a writeable file I/O stream
+      sel        - the record selector structure to write
+   Output:
+                 - output is written to the specified stream
+   Return Code:
+      zero     	 - success
+      nonzero    - error
+************************************************************************/
+int write_rec_sel(FILE *fpout, const REC_SEL *const sel)
+#define ERRHDR "ERROR : write_rec_sel : "
+{
+   static int indent = 0;
+   const REC_SEL_TYPE_PARAMS *type_params;
+   int rs_i, indent_increment, num_values;
+
+   if (!sel)
+      return 0;
+
+   /* look at how many values are assigned, and omit any that are NULL */
+   num_values = sel->num_values;
+   if (sel->type == rs_and || sel->type == rs_or) {
+      for (rs_i = 0; rs_i < sel->num_values; rs_i++) {
+	 if (!sel->value.rs)
+	    --num_values;
+      }
+   }
+   /* ... do nothing if there is nothing left */
+   if (!num_values)
+      return 0;
+
+   /* lookup the record selector type parameters,
+      which includes the type name string */
+   if (get_type_params_by_type(&type_params, sel->type)) {
+      fprintf(stderr, ERRHDR "unimplemented type %d\n", sel->type);
+      return -3;
+   }
+
+   /* print out the selectors, with indentation for easier reading */
+   fprintf(fpout, "%*s", indent, "");
+   indent_increment = 2 + fprintf(fpout, "%s ", type_params->name);
+   switch (type_params->value_type) {
+   case rsv_rs:
+      fprintf(fpout, "{\n");
+      indent += indent_increment;
+      for (rs_i = 0; rs_i < sel->num_values; rs_i++) {
+	 if (write_rec_sel(fpout, sel->value.rs[rs_i]) < 0) {
+	    return -4;
+	 }
+      }
+      fprintf(fpout, "%*s}", indent-2, "");
+      indent -= indent_increment;
+      break;
+
+   case rsv_num:
+      fprintf(fpout, "%3ld", sel->value.num);
+      break;
+
+   case rsv_str:
+      fprintf(fpout, "\"%s\"", sel->value.str);
+      break;
+
+   default:
+      fprintf(stderr, ERRHDR "invalid record-selector value type: %d\n",
+	      type_params->value_type);
+      return -1;
+   }
+   fprintf(fpout, "\n");
+   
+   return 0;
+}
+#undef ERRHDR
+
+/***********************************************************************
+************************************************************************
+#cat: write_rec_sel_file - Write a set of record selectors to the
+#cat:              named file in a human readable format that can be
+#cat:              examined, modified, and read back in with
+#cat:              read_rec_sel_file.
+
+   Input:
+      file       - the name of a file to be written
+      sel        - the record selector structure to write
+   Output:
+       	         - output is written to the specified file
+   Return Code:
+      zero     	 - success
+      nonzero    - error
+************************************************************************/
+int write_rec_sel_file(const char *const file, 
+		       const REC_SEL *const sel)
+#define ERRHDR "ERROR : write_rec_sel_file : "
+{
+   FILE *fpout;
+   int ret;
+
+   fpout = fopen(file, "w");
+   if (fpout == NULL) {
+      fprintf(stderr, ERRHDR "fopen : %s : %s\n", file, strerror(errno));
+      return -1;
+   }
+   
+   if ( (ret = write_rec_sel(fpout, sel)) ) {
+      if (fclose(fpout)) {
+	  fprintf(stderr, ERRHDR "fclose : %s : %s\n",
+		  file, strerror(errno));
+       }
+       return ret;
+   }
+
+   if (fclose(fpout)) {
+      fprintf(stderr, ERRHDR "fclose : %s : %s\n", file,strerror(errno));
+      return -2;
+   }
+
+   return 0;
+}
+#undef ERRHDR
+
+/***********************************************************************
+************************************************************************
+#cat: read_rec_sel - Read a set or record selectors from an open file
+#cat:              I/O stream into a set of record selector
+#cat:              structures.
+
+   Input
+      fpin       - pointer to a readable file I/O stream
+   Output
+      sel        - Address used to return a pointer to the record selection
+                   criteria read.  The space is dynamically allocated and can
+                   be freed with free_rec_sel.
+   Return
+      zero       - success
+      nonzero    - error
+************************************************************************/
+int read_rec_sel(FILE *fpin, REC_SEL **sel)
+#define ERRHDR "ERROR : read_rec_sel : "
+{
+   char buffer[64], *cp, *ep;
+   const REC_SEL_TYPE_PARAMS *type_params = NULL;
+   REC_SEL *new_sel, *current_sel = NULL;
+   int ci, num;
+   static int line_no = 1, col_no = 1;
+
+   /* 'type_params' starts out NULL.  When a record selector type name
+      is read, 'type_params' is set to point to the parameter
+      structure for that type.  After the corresponding value is read,
+      checked, and assigned, 'type_params' is again set to NULL,
+      indicating readiness to read another type.
+
+      'current_sel' starts out NULL.  After a record selector type is
+      read, a record selector structure is created, and its address is
+      assigned to 'current_sel'.  Then, one or more values are
+      assigned to the structure, depending the type. */
+
+   cp = buffer;
+   while (!feof(fpin)) {
+      ci = fgetc(fpin);
+
+      /* track cursor position for error reporting */
+      if (ci == '\n') {
+	 line_no++;		/* count the line */
+	 col_no = 1;		/* reset the column */
+      } else {
+	 col_no++;		/* count the column */
+      }
+
+      /* first accumulate the input into tokens */
+      if (!isspace(ci) && ci != EOF) {
+	 *cp++ = ci;	  /* append another character to the string */
+	 if (cp - buffer > sizeof(buffer)) {
+	    fprintf(stderr, ERRHDR
+		    "buffer overflow, exceeded %d bytes, reading '%.*s'\n",
+		    sizeof(buffer), sizeof(buffer), buffer);
+	    return -1;
+	 }
+
+      } else if (cp > buffer) {	/* the end of a token was found */
+	 *cp = 0;		/* ... terminate it */
+
+	 /* determine the the type of token and its value, check
+	   whether it is valid in the current context, then create the
+	   corresponding data structures */
+
+	 if (!strcmp(buffer, "{")) {       /* nested criteria opening bracket */
+	    if (!type_params
+		|| (type_params->type != rs_and && type_params->type != rs_or)) {
+	       fprintf(stderr, ERRHDR "unexpected '{' at line %d, column %d\n",
+		       line_no, col_no);
+	       return -2;
+	    }
+	    while (1) {		/* iterate over nested criteria */
+	       if (read_rec_sel(fpin, &new_sel))
+		  return -3;
+	       if (!new_sel) /* exit loop after closing bracket */
+		  break;
+	       if (add_rec_sel(&current_sel, new_sel))
+		  return -4;
+	    }
+	    *sel = current_sel;
+	    return 0;
+	    
+	 } else if (!strcmp(buffer, "}")) { /* nested criteria closing bracket*/
+	    *sel = NULL;
+	    return 0;		/* empty success */
+
+	 } else if (num = strtol(buffer, &ep, 0), *ep == '\0') { /* num value */
+	    if (!type_params ||
+		type_params->type == rs_and || type_params->type == rs_or) {
+	       fprintf(stderr, ERRHDR
+		       "unexpected number %d at line %d, column %d\n",
+		       num, line_no, col_no);
+	       return -5;
+	    }
+	    if (!current_sel) {
+	       /* this should never happen, but it doesn't hurt to check */
+	       fprintf(stderr, ERRHDR "no structure allocated to store"
+		       " type %s with value %d at line %d, column %d\n",
+		       type_params->name, num, line_no, col_no);
+	       return -6;
+	    }       
+	    if (validate_rec_sel_num_value(type_params, num))
+	       return -7;
+
+	    current_sel->value.num = num;
+	    current_sel->num_values = 1;
+	    *sel = current_sel;
+	    return 0;	/* success reading simple type/value pair */
+	    
+	 } else if (!type_params &&              /* record selector type name */
+		    !get_type_params_by_name(&type_params, buffer)) {
+	    if (alloc_rec_sel(&current_sel, type_params->type, 1))
+	       return -8;
+	    /* proceed to read the next token */
+	    
+	 } else {	    /* unexpected record selector type name, or other */
+	    fprintf(stderr, ERRHDR
+		    "unexpected token '%s' at line %d, column %d\n",
+		    buffer, line_no, col_no - (cp - buffer));
+	    return -9;
+	 }
+	 
+	 cp = buffer;		/* prepare for next token */
+      }     
+   }
+   
+   fprintf(stderr, ERRHDR "incomplete record selection specifier,"
+	   " at line %d, column %d\n", line_no, col_no);
+   *sel = NULL;
+   return -10;
+}
+#undef ERRHDR
+
+/***********************************************************************
+************************************************************************
+#cat: read_rec_sel_file - Read a set or record selectors from a file
+#cat:              into a set of record selector structures.
+
+   Input
+      input_file - The name of a file containing a tree of record
+                   selectors to be read and parsed to create the
+                   output structure.
+   Output
+      sel -        Address used to return a pointer to the record
+                   selection criteria structure created from the data
+                   read from the input file.  The space is dynamically
+                   allocated and can be freed with free_rec_sel.
+   Return
+      zero       - success
+      nonzero    - error
+************************************************************************/
+int read_rec_sel_file(const char *const input_file, REC_SEL **sel)
+{
+   FILE *fpin;
+   int ret;
+
+   fpin = fopen(input_file, "r");
+   if (fpin == NULL) {
+      fprintf(stderr, "ERROR : read_rec_sel_file : fopen : %s : %s\n",
+	      input_file, strerror(errno));
+      return -1;
+   }
+
+   if ( (ret = read_rec_sel(fpin, sel)) ) {
+      if (fclose(fpin)) {
+	 fprintf(stderr, "ERROR : read_rec_sel_file : fclose : %s : %s\n",
+		 input_file, strerror(errno));
+      }
+      return ret;	  
+   }
+
+   if (fclose(fpin)) {
+      fprintf(stderr, "ERROR : read_rec_sel_file : fclose : %s : %s\n",
+	      input_file, strerror(errno));
+      return -2;
+   }
+
+   return 0;
+}
+
+/***********************************************************************
+************************************************************************
+#cat: imp_is_live_scan - Indicates whether an impression of a given type
+#cat:              is a live scan.
+
+   Input
+      imp -        Impression type number.
+
+   Return
+      TRUE or FALSE
+************************************************************************/
+int imp_is_live_scan(const int imp)
+{
+   int i;
+
+   for (i = 0; i < imp_live_scan_set->num_values; i++) {
+      if (imp == imp_live_scan_set->values[i].num)
+	 return TRUE;
+   }
+   return FALSE;
+}
+
+
+/***********************************************************************
+************************************************************************
+#cat: imp_is_latent - Indicates whether an impression of a given type
+#cat:              is a latent print.
+
+   Input
+      imp -        Impression type number.
+
+   Return
+      TRUE or FALSE
+************************************************************************/
+int imp_is_latent(const int imp)
+{
+   int i;
+
+   for (i = 0; i < imp_latent_set->num_values; i++) {
+      if (imp == imp_latent_set->values[i].num)
+	 return TRUE;
+   }
+   return FALSE;
+}
+
+/***********************************************************************
+************************************************************************
+#cat: imp_is_rolled - Indicates whether an impression of a given type
+#cat:              is a rolled print.
+
+   Input
+      imp -        Impression type number.
+
+   Return
+      TRUE or FALSE
+************************************************************************/
+int imp_is_rolled(const int imp)
+{
+   int i;
+
+   for (i = 0; i < imp_rolled_set->num_values; i++) {
+      if (imp == imp_rolled_set->values[i].num)
+	 return TRUE;
+   }
+   return FALSE;
+}
+
+/***********************************************************************
+************************************************************************
+#cat: imp_is_flat - Indicates whether an impression of a given type
+#cat:              is a flat print.
+
+   Input
+      imp -        Impression type number.
+
+   Return
+      TRUE or FALSE
+************************************************************************/
+int imp_is_flat(const int imp)
+{
+   int i;
+
+   for (i = 0; i < imp_flat_set->num_values; i++) {
+      if (imp == imp_flat_set->values[i].num)
+	 return TRUE;
+   }
+   return FALSE;
+}
Index: nbis-4.2.0/bozorth3/p_rules.mak
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ nbis-4.2.0/bozorth3/p_rules.mak	2013-12-17 13:29:27.000000000 -0500
@@ -0,0 +1,129 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
+#*******************************************************************************
+#
+# License: 
+# This software and/or related materials was developed at the National Institute
+# of Standards and Technology (NIST) by employees of the Federal Government
+# in the course of their official duties. Pursuant to title 17 Section 105
+# of the United States Code, this software is not subject to copyright
+# protection and is in the public domain. 
+#
+# This software and/or related materials have been determined to be not subject
+# to the EAR (see Part 734.3 of the EAR for exact details) because it is
+# a publicly available technology and software, and is freely distributed
+# to any interested party with no licensing requirements.  Therefore, it is 
+# permissible to distribute this software as a free download from the internet.
+#
+# Disclaimer: 
+# This software and/or related materials was developed to promote biometric
+# standards and biometric technology testing for the Federal Government
+# in accordance with the USA PATRIOT Act and the Enhanced Border Security
+# and Visa Entry Reform Act. Specific hardware and software products identified
+# in this software were used in order to perform the software development.
+# In no case does such identification imply recommendation or endorsement
+# by the National Institute of Standards and Technology, nor does it imply that
+# the products and equipment identified are necessarily the best available
+# for the purpose.
+#
+# This software and/or related materials are provided "AS-IS" without warranty
+# of any kind including NO WARRANTY OF PERFORMANCE, MERCHANTABILITY,
+# NO WARRANTY OF NON-INFRINGEMENT OF ANY 3RD PARTY INTELLECTUAL PROPERTY
+# or FITNESS FOR A PARTICULAR PURPOSE or for any purpose whatsoever, for the
+# licensed product, however used. In no event shall NIST be liable for any
+# damages and/or costs, including but not limited to incidental or consequential
+# damages of any kind, including economic damage or injury to property and lost
+# profits, regardless of whether NIST shall be advised, have reason to know,
+# or in fact shall know of the possibility.
+#
+# By using this software, you agree to bear all risk relating to quality,
+# use and performance of the software and/or related materials.  You agree
+# to hold the Government harmless from any claim arising from your use
+# of the software.
+#
+#*******************************************************************************
+# Project:              NIST Fingerprint Software
+# SubTree:              /NBIS/Main/bozorth3
+# Filename:             p_rules.mak.src
+# Integrators:          Kenneth Ko
+# Organization:         NIST/ITL
+# Host System:          GNU GCC/GMAKE GENERIC (UNIX)
+# Date Created:         08/20/2006
+#
+# ******************************************************************************
+#
+# This rules file contains all the necessary variables to build "bozorth3".
+#
+# ******************************************************************************
+THIS_DIR = $(subst //,/,$(dir $(CURDIR)/$(lastword $(MAKEFILE_LIST))))
+include $(THIS_DIR)/../rules.mak
+#
+# ------------------------------------------------------------------------------
+#
+PACKAGE		:= bozorth3
+PROGRAMS	:= bozorth3
+LIBRARYS	:= bozorth3
+LIBRARY_NAMES	:= $(LIBRARYS:%=lib%.a)
+#
+# ------------------------------------------------------------------------------
+#
+DIR_ROOT_PACKAGE	:= $(DIR_ROOT)/$(PACKAGE)
+INSTALL_BIN_DIR		:= $(DIR_ROOT_PACKAGE)/bin
+INSTALL_LIB_DIR		:= $(DIR_ROOT_PACKAGE)/lib
+#
+# ------------------------------------------------------------------------------
+#
+DIR_SRC		:= $(DIR_ROOT_PACKAGE)/src
+DIR_INC		:= $(DIR_ROOT_PACKAGE)/include
+DIR_SRC_BIN	:= $(DIR_SRC)/bin
+DIR_SRC_LIB	:= $(DIR_SRC)/lib
+#
+DIR_OBJ		:= $(DIR_ROOT_PACKAGE)/obj
+DIR_BIN		:= $(DIR_ROOT_PACKAGE)/bin
+DIR_LIB		:= $(DIR_ROOT_PACKAGE)/lib
+#
+DIR_SRC_BIN_ALL	:= $(PROGRAMS:%=$(DIR_SRC_BIN)/%)
+DIR_SRC_LIB_ALL := $(LIBRARYS:%=$(DIR_SRC_LIB)/%)
+#
+BASE_DIR := \
+	$(DIR_SRC) \
+	$(DIR_SRC_BIN) \
+	$(DIR_SRC_LIB) \
+	$(DIR_SRC_LIB_ALL) \
+	$(DIR_SRC_BIN_ALL)
+#
+# ------------------------------------------------------------------------------
+#
+DIR_OBJ_SRC	:= $(DIR_OBJ)/src
+DIR_OBJ_SRC_BIN	:= $(DIR_OBJ_SRC)/bin
+DIR_OBJ_SRC_LIB	:= $(DIR_OBJ_SRC)/lib
+#
+DIR_OBJ_SRC_BIN_ALL	:= $(PROGRAMS:%=$(DIR_OBJ_SRC_BIN)/%)
+DIR_OBJ_SRC_LIB_ALL	:= $(LIBRARYS:%=$(DIR_OBJ_SRC_LIB)/%)
+#
+OBJ_BASE_DIR	:= $(DIR_OBJ) $(subst $(DIR_SRC),$(DIR_OBJ_SRC),$(BASE_DIR))
+#
+# ------------------------------------------------------------------------------
+#
Index: nbis-4.2.0/buildutil/bin.mak
===================================================================
--- nbis-4.2.0.orig/buildutil/bin.mak	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/buildutil/bin.mak	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -65,7 +89,7 @@
 endef
 #
 $(INSTALL_BIN_DIR)/$(PROGRAM): $(OBJFILES) $(LIBS)
-	$(CC) $(LDFLAGS) $(OBJFILES) $(LIBS) $(EXT_LIBS) -o $(INSTALL_BIN_DIR)/$(PROGRAM)
+	$(CC) $(OBJFILES) $(LIBS) $(EXT_LIBS) $(LDFLAGS) -o $(INSTALL_BIN_DIR)/$(PROGRAM)
 #
 config:
 	@for depfile in $(DEPFILES); do \
@@ -77,7 +101,7 @@
 	$(INSTALL_BIN) $(INSTALL_BIN_DIR)/$(PROGRAM) $(INSTALL_ROOT_BIN_DIR)
 #
 clean:
-	@echo "$(RM) $(OBJDIR)/*"
+#	@echo "$(RM) $(OBJDIR)/*"
 	@for objfile in $(OBJFILES); do \
 		$(RM) $$objfile; \
 	done; \
Index: nbis-4.2.0/buildutil/lib.mak
===================================================================
--- nbis-4.2.0.orig/buildutil/lib.mak	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/buildutil/lib.mak	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -72,8 +96,17 @@
 	$(CP) $(INSTALL_LIB_DIR)/$(LIBRARY).a $(EXPORTS_LIB_DIR)
 #
 config:
+    @echo "TOP: "$(TOP)
+    @echo "DIR_ROOT: "$(DIR_ROOT)
+	@echo "DIR_SRC_LIB: "$(DIR_SRC_LIB)
+	@echo "DIR_OBJ_SRC_LIB: "$(DIR_OBJ_SRC_LIB)
+	@echo "CURDIR: "$(CURDIR)
+	@echo "OBJDIR: "$(OBJDIR)
+	@echo "DEPFILES: "$(DEPFILES)
 	@for depfile in $(DEPFILES); do \
 		echo "Creating \"$$depfile\"...."; \
+		echo "Checking whether "$(dir $$depfile)" exists..."
+		test -d $(dir $$depfile) || echo "IMPENDING ERROR: directory does not exist: "$(dir $$depfile) ; \
 		$(TOUCH) $$depfile; \
 	done
 #
@@ -81,7 +114,7 @@
 	$(INSTALL_LIB) $(INSTALL_LIB_DIR)/$(LIBRARY).a $(INSTALL_ROOT_LIB_DIR)
 #
 clean:
-	@echo "$(RM) $(OBJDIR)/*.o"
+#	@echo "$(RM) $(OBJDIR)/*.o"
 	@for objfile in $(OBJFILES); do \
 		$(RM) $$objfile; \
 	done; \
Index: nbis-4.2.0/buildutil/package.mak
===================================================================
--- nbis-4.2.0.orig/buildutil/package.mak	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/buildutil/package.mak	2013-12-17 13:29:27.000000000 -0500
@@ -230,13 +230,13 @@
 clean:
 	@(cd $(DIR_SRC) && $(MAKE) clean) || exit 1
 	@if [ $(PACKAGE) != "ijg" ]; then \
-		echo "$(RM) $(INSTALL_LIB_DIR)/*"; \
+#		echo "$(RM) $(INSTALL_LIB_DIR)/*"; \
 		for lib in $(LIBRARY_NAMES); do \
 			$(RM) $(INSTALL_LIB_DIR)/$$lib; \
 		done; \
 	fi
 	@if [ $(PACKAGE) != "commonnbis" ]; then \
-		echo "$(RM) $(INSTALL_BIN_DIR)/*"; \
+#		echo "$(RM) $(INSTALL_BIN_DIR)/*"; \
 		for prog in $(PROGRAMS); do \
 			$(RM) $(INSTALL_BIN_DIR)/$$prog; \
 		done; \
Index: nbis-4.2.0/buildutil/pcasysx_lib.mak
===================================================================
--- nbis-4.2.0.orig/buildutil/pcasysx_lib.mak	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/buildutil/pcasysx_lib.mak	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -76,8 +100,17 @@
 	$(CP) $(INSTALL_LIB_DIR)/$(LIBRARY).a $(EXPORTS_LIB_DIR)
 #
 config:
+    @echo "TOP: "$(TOP)
+    @echo "DIR_ROOT: "$(DIR_ROOT)
+	@echo "DIR_SRC_LIB: "$(DIR_SRC_LIB)
+	@echo "DIR_OBJ_SRC_LIB: "$(DIR_OBJ_SRC_LIB)
+	@echo "CURDIR: "$(CURDIR)
+	@echo "OBJDIR: "$(OBJDIR)
+	@echo "DEPFILES: "$(DEPFILES)
 	@for depfile in $(DEPFILES); do \
 		echo "Creating \"$$depfile\"...."; \
+		echo "Checking whether "$(dir $$depfile)" exists..."
+		test -d $(dir $$depfile) || echo "IMPENDING ERROR: directory does not exist: "$(dir $$depfile) ; \
 		$(TOUCH) $$depfile; \
 	done
 #
Index: nbis-4.2.0/commonnbis/p_rules.mak
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ nbis-4.2.0/commonnbis/p_rules.mak	2013-12-17 13:29:27.000000000 -0500
@@ -0,0 +1,129 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
+#*******************************************************************************
+#
+# License: 
+# This software and/or related materials was developed at the National Institute
+# of Standards and Technology (NIST) by employees of the Federal Government
+# in the course of their official duties. Pursuant to title 17 Section 105
+# of the United States Code, this software is not subject to copyright
+# protection and is in the public domain. 
+#
+# This software and/or related materials have been determined to be not subject
+# to the EAR (see Part 734.3 of the EAR for exact details) because it is
+# a publicly available technology and software, and is freely distributed
+# to any interested party with no licensing requirements.  Therefore, it is 
+# permissible to distribute this software as a free download from the internet.
+#
+# Disclaimer: 
+# This software and/or related materials was developed to promote biometric
+# standards and biometric technology testing for the Federal Government
+# in accordance with the USA PATRIOT Act and the Enhanced Border Security
+# and Visa Entry Reform Act. Specific hardware and software products identified
+# in this software were used in order to perform the software development.
+# In no case does such identification imply recommendation or endorsement
+# by the National Institute of Standards and Technology, nor does it imply that
+# the products and equipment identified are necessarily the best available
+# for the purpose.
+#
+# This software and/or related materials are provided "AS-IS" without warranty
+# of any kind including NO WARRANTY OF PERFORMANCE, MERCHANTABILITY,
+# NO WARRANTY OF NON-INFRINGEMENT OF ANY 3RD PARTY INTELLECTUAL PROPERTY
+# or FITNESS FOR A PARTICULAR PURPOSE or for any purpose whatsoever, for the
+# licensed product, however used. In no event shall NIST be liable for any
+# damages and/or costs, including but not limited to incidental or consequential
+# damages of any kind, including economic damage or injury to property and lost
+# profits, regardless of whether NIST shall be advised, have reason to know,
+# or in fact shall know of the possibility.
+#
+# By using this software, you agree to bear all risk relating to quality,
+# use and performance of the software and/or related materials.  You agree
+# to hold the Government harmless from any claim arising from your use
+# of the software.
+#
+#*******************************************************************************
+# Project:              NIST Fingerprint Software
+# Filename:             p_rules.mak.src
+# Integrators:          Kenneth Ko
+# Organization:         NIST/ITL
+# Host System:          GNU GCC/GMAKE GENERIC (UNIX)
+# Date Created:         08/20/2006
+# Date Updated:		02/23/2007
+#
+# ******************************************************************************
+#
+# This rules file contains all the necessary variables to build "commonnbis".
+#
+# ******************************************************************************
+THIS_DIR = $(subst //,/,$(dir $(CURDIR)/$(lastword $(MAKEFILE_LIST))))
+include $(THIS_DIR)/../rules.mak
+#
+# ------------------------------------------------------------------------------
+#
+PACKAGE		:= commonnbis
+PROGRAMS	:= dummy
+LIBRARYS	:= cblas clapck f2c fet fft ioutil util
+#
+LIBRARY_NAMES	:= $(LIBRARYS:%=lib%.a)
+#
+# ------------------------------------------------------------------------------
+#
+DIR_ROOT_PACKAGE	:= $(DIR_ROOT)/$(PACKAGE)
+INSTALL_BIN_DIR		:= $(DIR_ROOT_PACKAGE)/bin
+INSTALL_LIB_DIR		:= $(DIR_ROOT_PACKAGE)/lib
+#
+# ------------------------------------------------------------------------------
+#
+DIR_SRC		:= $(DIR_ROOT_PACKAGE)/src
+DIR_INC		:= $(DIR_ROOT_PACKAGE)/include
+DIR_SRC_BIN	:= $(DIR_SRC)/bin
+DIR_SRC_LIB	:= $(DIR_SRC)/lib
+#
+DIR_OBJ		:= $(DIR_ROOT_PACKAGE)/obj
+DIR_BIN		:= $(DIR_ROOT_PACKAGE)/bin
+DIR_LIB		:= $(DIR_ROOT_PACKAGE)/lib
+#
+DIR_SRC_BIN_ALL	:= $(PROGRAMS:%=$(DIR_SRC_BIN)/%)
+DIR_SRC_LIB_ALL := $(LIBRARYS:%=$(DIR_SRC_LIB)/%)
+#
+BASE_DIR := \
+	$(DIR_SRC) \
+	$(DIR_SRC_BIN) \
+	$(DIR_SRC_LIB) \
+	$(DIR_SRC_LIB_ALL)
+#
+# ------------------------------------------------------------------------------
+#
+DIR_OBJ_SRC	:= $(DIR_OBJ)/src
+DIR_OBJ_SRC_BIN	:= $(DIR_OBJ_SRC)/bin
+DIR_OBJ_SRC_LIB	:= $(DIR_OBJ_SRC)/lib
+#
+DIR_OBJ_SRC_BIN_ALL	:= $(PROGRAMS:%=$(DIR_OBJ_SRC_BIN)/%)
+DIR_OBJ_SRC_LIB_ALL	:= $(LIBRARYS:%=$(DIR_OBJ_SRC_LIB)/%)
+#
+OBJ_BASE_DIR	:= $(DIR_OBJ) $(subst $(DIR_SRC),$(DIR_OBJ_SRC),$(BASE_DIR))
+#
+# ------------------------------------------------------------------------------
+#
Index: nbis-4.2.0/imgtools/include/imgtype.h
===================================================================
--- nbis-4.2.0.orig/imgtools/include/imgtype.h	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/imgtools/include/imgtype.h	2013-12-17 13:29:27.000000000 -0500
@@ -52,7 +52,7 @@
 /* UPDATED: 01/06/2009 by Kenneth Ko - add support for HPUX compile */
 
 #include <wsq.h>
-#include <jpegb.h>
+/* #include <jpegb.h> */
 #include <jpegl.h>
 #include <ihead.h>
 #include <an2k.h>
Index: nbis-4.2.0/imgtools/p_rules.mak
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ nbis-4.2.0/imgtools/p_rules.mak	2013-12-17 13:29:27.000000000 -0500
@@ -0,0 +1,130 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
+#*******************************************************************************
+#
+# License: 
+# This software and/or related materials was developed at the National Institute
+# of Standards and Technology (NIST) by employees of the Federal Government
+# in the course of their official duties. Pursuant to title 17 Section 105
+# of the United States Code, this software is not subject to copyright
+# protection and is in the public domain. 
+#
+# This software and/or related materials have been determined to be not subject
+# to the EAR (see Part 734.3 of the EAR for exact details) because it is
+# a publicly available technology and software, and is freely distributed
+# to any interested party with no licensing requirements.  Therefore, it is 
+# permissible to distribute this software as a free download from the internet.
+#
+# Disclaimer: 
+# This software and/or related materials was developed to promote biometric
+# standards and biometric technology testing for the Federal Government
+# in accordance with the USA PATRIOT Act and the Enhanced Border Security
+# and Visa Entry Reform Act. Specific hardware and software products identified
+# in this software were used in order to perform the software development.
+# In no case does such identification imply recommendation or endorsement
+# by the National Institute of Standards and Technology, nor does it imply that
+# the products and equipment identified are necessarily the best available
+# for the purpose.
+#
+# This software and/or related materials are provided "AS-IS" without warranty
+# of any kind including NO WARRANTY OF PERFORMANCE, MERCHANTABILITY,
+# NO WARRANTY OF NON-INFRINGEMENT OF ANY 3RD PARTY INTELLECTUAL PROPERTY
+# or FITNESS FOR A PARTICULAR PURPOSE or for any purpose whatsoever, for the
+# licensed product, however used. In no event shall NIST be liable for any
+# damages and/or costs, including but not limited to incidental or consequential
+# damages of any kind, including economic damage or injury to property and lost
+# profits, regardless of whether NIST shall be advised, have reason to know,
+# or in fact shall know of the possibility.
+#
+# By using this software, you agree to bear all risk relating to quality,
+# use and performance of the software and/or related materials.  You agree
+# to hold the Government harmless from any claim arising from your use
+# of the software.
+#
+#*******************************************************************************
+# Project:              NIST Fingerprint Software
+# Filename:             p_rules.mak.src
+# Integrators:          Kenneth Ko
+# Organization:         NIST/ITL
+# Host System:          GNU GCC/GMAKE GENERIC (UNIX)
+# Date Created:         08/20/2006
+#
+# ******************************************************************************
+#
+# This rules file contains all the necessary variables to build "imgtools".
+#
+# ******************************************************************************
+THIS_DIR = $(subst //,/,$(dir $(CURDIR)/$(lastword $(MAKEFILE_LIST))))
+include $(THIS_DIR)/../rules.mak
+#
+# ------------------------------------------------------------------------------
+#
+PACKAGE		:= imgtools
+PROGRAMS	:= cjpegl cwsq diffbyts djpegl \
+		djpeglsd dlwsqcom dpyimage dwsq dwsq14 intr2not not2intr \
+		rdwsqcom rgb2ycc sd_rfmt wrwsqcom ycc2rgb
+LIBRARYS	:= ihead image jpegl wsq
+LIBRARY_NAMES	:= $(LIBRARYS:%=lib%.a)
+#
+# ------------------------------------------------------------------------------
+#
+DIR_ROOT_PACKAGE	:= $(DIR_ROOT)/$(PACKAGE)
+INSTALL_BIN_DIR		:= $(DIR_ROOT_PACKAGE)/bin
+INSTALL_LIB_DIR		:= $(DIR_ROOT_PACKAGE)/lib
+#
+# ------------------------------------------------------------------------------
+#
+DIR_SRC		:= $(DIR_ROOT_PACKAGE)/src
+DIR_INC		:= $(DIR_ROOT_PACKAGE)/include
+DIR_SRC_BIN	:= $(DIR_SRC)/bin
+DIR_SRC_LIB	:= $(DIR_SRC)/lib
+#
+DIR_OBJ		:= $(DIR_ROOT_PACKAGE)/obj
+DIR_BIN		:= $(DIR_ROOT_PACKAGE)/bin
+DIR_LIB		:= $(DIR_ROOT_PACKAGE)/lib
+#
+DIR_SRC_BIN_ALL	:= $(PROGRAMS:%=$(DIR_SRC_BIN)/%)
+DIR_SRC_LIB_ALL := $(LIBRARYS:%=$(DIR_SRC_LIB)/%)
+#
+BASE_DIR := \
+	$(DIR_SRC) \
+	$(DIR_SRC_BIN) \
+	$(DIR_SRC_LIB) \
+	$(DIR_SRC_LIB_ALL) \
+	$(DIR_SRC_BIN_ALL)
+#
+# ------------------------------------------------------------------------------
+#
+DIR_OBJ_SRC	:= $(DIR_OBJ)/src
+DIR_OBJ_SRC_BIN	:= $(DIR_OBJ_SRC)/bin
+DIR_OBJ_SRC_LIB	:= $(DIR_OBJ_SRC)/lib
+#
+DIR_OBJ_SRC_BIN_ALL	:= $(PROGRAMS:%=$(DIR_OBJ_SRC_BIN)/%)
+DIR_OBJ_SRC_LIB_ALL	:= $(LIBRARYS:%=$(DIR_OBJ_SRC_LIB)/%)
+#
+OBJ_BASE_DIR	:= $(DIR_OBJ) $(subst $(DIR_SRC),$(DIR_OBJ_SRC),$(BASE_DIR))
+#
+# ------------------------------------------------------------------------------
+#
Index: nbis-4.2.0/imgtools/src/bin/dlwsqcom/Makefile
===================================================================
--- nbis-4.2.0.orig/imgtools/src/bin/dlwsqcom/Makefile	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/imgtools/src/bin/dlwsqcom/Makefile	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -78,10 +102,10 @@
 endif
 #
 ifeq ($(NBIS_PNG_FLAG),-D__NBIS_PNG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libpng.a \
-	$(EXPORTS_LIB_DIR)/libz.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libpng.a \
+	#~ $(EXPORTS_LIB_DIR)/libz.a
 endif
 #
 EXT_INCS	:= -I$(EXPORTS_INC_DIR)
Index: nbis-4.2.0/imgtools/src/bin/dpyimage/Makefile
===================================================================
--- nbis-4.2.0.orig/imgtools/src/bin/dpyimage/Makefile	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/imgtools/src/bin/dpyimage/Makefile	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -86,16 +110,16 @@
 endif
 #
 ifeq ($(NBIS_OPENJPEG_FLAG),-D__NBIS_OPENJPEG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libopenjpeg.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libopenjpeg.a
 endif
 #
 ifeq ($(NBIS_PNG_FLAG),-D__NBIS_PNG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libpng.a \
-	$(EXPORTS_LIB_DIR)/libz.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libpng.a \
+	#~ $(EXPORTS_LIB_DIR)/libz.a
 endif
 #
 EXT_INCS	:= -I. -I$(EXPORTS_INC_DIR) -I$(X11_INC)
Index: nbis-4.2.0/imgtools/src/bin/dpyimage/Makefile.X11
===================================================================
--- nbis-4.2.0.orig/imgtools/src/bin/dpyimage/Makefile.X11	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/imgtools/src/bin/dpyimage/Makefile.X11	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -88,16 +112,16 @@
 endif
 #
 ifeq ($(NBIS_OPENJPEG_FLAG),-D__NBIS_OPENJPEG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libopenjpeg.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libopenjpeg.a
 endif
 #
 ifeq ($(NBIS_PNG_FLAG),-D__NBIS_PNG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libpng.a \
-	$(EXPORTS_LIB_DIR)/libz.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libpng.a \
+	#~ $(EXPORTS_LIB_DIR)/libz.a
 endif
 #
 EXT_INCS	:= -I. -I$(EXPORTS_INC_DIR) -I$(X11_INC)
Index: nbis-4.2.0/imgtools/src/bin/dwsq14/Makefile
===================================================================
--- nbis-4.2.0.orig/imgtools/src/bin/dwsq14/Makefile	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/imgtools/src/bin/dwsq14/Makefile	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -80,10 +104,10 @@
 endif
 #
 ifeq ($(NBIS_PNG_FLAG),-D__NBIS_PNG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libpng.a \
-	$(EXPORTS_LIB_DIR)/libz.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libpng.a \
+	#~ $(EXPORTS_LIB_DIR)/libz.a
 endif
 #
 EXT_INCS	:= -I$(EXPORTS_INC_DIR)
Index: nbis-4.2.0/imgtools/src/bin/rdimgwh/Makefile
===================================================================
--- nbis-4.2.0.orig/imgtools/src/bin/rdimgwh/Makefile	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/imgtools/src/bin/rdimgwh/Makefile	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -79,10 +103,10 @@
 endif
 #
 ifeq ($(NBIS_PNG_FLAG),-D__NBIS_PNG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libpng.a \
-	$(EXPORTS_LIB_DIR)/libz.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libpng.a \
+	#~ $(EXPORTS_LIB_DIR)/libz.a
 endif
 #
 EXT_INCS	:= -I$(EXPORTS_INC_DIR)
Index: nbis-4.2.0/imgtools/src/bin/rdwsqcom/Makefile
===================================================================
--- nbis-4.2.0.orig/imgtools/src/bin/rdwsqcom/Makefile	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/imgtools/src/bin/rdwsqcom/Makefile	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -80,10 +104,10 @@
 endif
 #
 ifeq ($(NBIS_PNG_FLAG),-D__NBIS_PNG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libpng.a \
-	$(EXPORTS_LIB_DIR)/libz.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libpng.a \
+	#~ $(EXPORTS_LIB_DIR)/libz.a
 endif
 #
 EXT_INCS	:= -I$(EXPORTS_INC_DIR)
Index: nbis-4.2.0/imgtools/src/bin/wrwsqcom/Makefile
===================================================================
--- nbis-4.2.0.orig/imgtools/src/bin/wrwsqcom/Makefile	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/imgtools/src/bin/wrwsqcom/Makefile	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -80,10 +104,10 @@
 endif
 #
 ifeq ($(NBIS_PNG_FLAG),-D__NBIS_PNG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libpng.a \
-	$(EXPORTS_LIB_DIR)/libz.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libpng.a \
+	#~ $(EXPORTS_LIB_DIR)/libz.a
 endif
 #
 EXT_INCS	:= -I$(EXPORTS_INC_DIR)
Index: nbis-4.2.0/imgtools/src/lib/image/imgdecod.c
===================================================================
--- nbis-4.2.0.orig/imgtools/src/lib/image/imgdecod.c	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/imgtools/src/lib/image/imgdecod.c	2013-12-17 13:29:27.000000000 -0500
@@ -84,6 +84,7 @@
    #include <jpeg2k.h>
 #endif
 #ifdef __NBIS_OPENJPEG__
+   /* MC: this seems like it should be #include <openjpeg.h>... */
    #include <jpeg2k.h>
 #endif
 
@@ -332,6 +333,9 @@
            }
            free_IMG_DAT(img_dat, FREE_IMAGE);
            break;
+/* ************************
+ * 20131216 MC removed support for JPEGB
+ * ************************
       case JPEGB_IMG:
            if((ret = jpegb_decode_mem(&ndata, &w, &h, &d, &ppi, &lossyflag,
                                      idata, ilen))){
@@ -359,6 +363,7 @@
               vrt_sampfctr[i] = 1;
            }
            break;
+ */
       case IHEAD_IMG:
            if((ret = ihead_decode_mem(&ndata, &w, &h, &d, &ppi, &lossyflag,
                                      idata, ilen))){
Index: nbis-4.2.0/imgtools/src/lib/image/imgtype.c
===================================================================
--- nbis-4.2.0.orig/imgtools/src/lib/image/imgtype.c	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/imgtools/src/lib/image/imgtype.c	2013-12-17 13:29:27.000000000 -0500
@@ -165,10 +165,15 @@
          *img_type = JPEGL_IMG;
          return(0);
       }
+      /*
+       * 20131216 MC removed support for JPEGB
+       *
       else if(marker == SOF0){
          *img_type = JPEGB_IMG;
          return(0);
       }
+       */
+       
       /* Skip marker segment. */
       if((ret = getc_skip_marker_segment(marker, &cbufptr, ebufptr)))
          return(ret);
Index: nbis-4.2.0/man/man1/an2k2iaf.1
===================================================================
--- nbis-4.2.0.orig/man/man1/an2k2iaf.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/an2k2iaf.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Michael D. Garris
 .\"
-.TH AN2K2IAF 1F "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH AN2K2IAF 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 an2k2iaf \- Modifies minutiae and fingerprint image records
 in an ANSI/NIST 2007 file to meet FBI/IAFIS specifications.
Index: nbis-4.2.0/man/man1/an2k2txt.1
===================================================================
--- nbis-4.2.0.orig/man/man1/an2k2txt.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/an2k2txt.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Michael D. Garris
 .\"
-.TH AN2K2TXT 1F "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH AN2K2TXT 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 an2k2txt \- Converts an ANSI/NIST 2007 file to a formatted text file.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/an2ktool.1
===================================================================
--- nbis-4.2.0.orig/man/man1/an2ktool.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/an2ktool.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Michael D. Garris
 .\"
-.TH AN2KTOOL 1F "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH AN2KTOOL 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 an2ktool \- Parses, manipulates, and/or writes the results to an
 ANSI/NIST 2007 file in batch mode.
Index: nbis-4.2.0/man/man1/asc2bin.1
===================================================================
--- nbis-4.2.0.orig/man/man1/asc2bin.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/asc2bin.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" G. T. Candela & Craig I. Watson
 .\"
-.TH ASC2BIN 1B "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH ASC2BIN 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 asc2bin \- converts a PCASYS data file from ascii to binary form.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/bin2asc.1
===================================================================
--- nbis-4.2.0.orig/man/man1/bin2asc.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/bin2asc.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" G. T. Candela & Craig I. Watson
 .\"
-.TH BIN2ASC 1B "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH BIN2ASC 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 bin2asc \- converts a PCASYS data file from binary to ascii form.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/bozorth3.1
===================================================================
--- nbis-4.2.0.orig/man/man1/bozorth3.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/bozorth3.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Stanley A. Janet
 .\"
-.TH BOZORTH3 1E "24 September 2004" "NIST" "NBIS Reference Manual"
+.TH BOZORTH3 1 "24 September 2004" "NIST" "NBIS Reference Manual"
 
 
 .SH NAME
Index: nbis-4.2.0/man/man1/chgdesc.1
===================================================================
--- nbis-4.2.0.orig/man/man1/chgdesc.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/chgdesc.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" G. T. Candela & Craig I. Watson
 .\"
-.TH CHGDESC 1B "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH CHGDESC 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 chgdesc \- changes the description string of a PCASYS data file.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/chkan2k.1
===================================================================
--- nbis-4.2.0.orig/man/man1/chkan2k.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/chkan2k.1	2013-12-17 13:29:27.000000000 -0500
@@ -25,7 +25,7 @@
 .\" of Standards and Technology, nor does it imply that the products and equipment
 .\" identified are necessarily the best available for the purpose.
 .\"
-.TH CHKAN2K 1F "02 June 2009" "NIST" "NBIS Reference Manual"
+.TH CHKAN2K 1 "02 June 2009" "NIST" "NBIS Reference Manual"
 .SH NAME
 chkan2k \- check the contents of an ANSI/NIST file.
 .SH SYNOPSIS
@@ -78,8 +78,8 @@
 file typically should not need to be changed.  However, putting these
 things into a configuration file makes it easier to verify exactly what is
 being checked, to correct any misunderstanding of the standards, to
-accomodate new versions of standards, and to allow the user to override
-certain settings, for example, to accomodate quirks in an existing large
+accommodate new versions of standards, and to allow the user to override
+certain settings, for example, to accommodate quirks in an existing large
 data set.
 .P
 Extra configuration files may be specified, using the -c option, and may
@@ -126,7 +126,7 @@
 
 .TP
 .B tag
-Used in other entries to specify a preceeding version of a standard, or to
+Used in other entries to specify a preceding version of a standard, or to
 specify the minimum version of a standard required by a certain record,
 field, or item.
 
@@ -339,7 +339,7 @@
 
 .TP
 .B auto
-Attempt to determine which of the preceeding categories the set of images
+Attempt to determine which of the preceding categories the set of images
 is closest to.  When a set of images is close, but not exactly the same as
 one of the categories, a warning is issued.
 
Index: nbis-4.2.0/man/man1/cjp2k.1
===================================================================
--- nbis-4.2.0.orig/man/man1/cjp2k.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/cjp2k.1	2013-12-17 13:29:27.000000000 -0500
@@ -1,7 +1,7 @@
 .\" @(#)cjp2k1 2010/07/02 NIST
 .\" I Image Group
 .\"
-.TH CJP2K 1G "02 July 2010" "NIST" "NBIS Reference Manual"
+.TH CJP2K 1 "02 July 2010" "NIST" "NBIS Reference Manual"
 .SH NAME
 cjp2k \- Compress RAW image into JPEG2000 image format. This is based on the image_to_j2k application implemented in the OPENJPEG library.
 .br
Index: nbis-4.2.0/man/man1/cjpeg.1
===================================================================
--- nbis-4.2.0.orig/man/man1/cjpeg.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/cjpeg.1	2013-12-17 13:29:27.000000000 -0500
@@ -1,4 +1,4 @@
-.TH CJPEG 1H "02 October 2008" "IJG" "NBIS Reference Manual"
+.TH CJPEG 1 "02 October 2008" "IJG" "NBIS Reference Manual"
 .SH NAME
 cjpeg \- compress an image file to a JPEG file
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/cjpegb.1
===================================================================
--- nbis-4.2.0.orig/man/man1/cjpegb.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/cjpegb.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Craig Watson and Michael D. Garris
 .\"
-.TH CJPEGB 1G "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH CJPEGB 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 cjpegb \- compresses a grayscale or color (RGB) image using \fIlossy\fR
 Baseline JPEG (JPEGB).
Index: nbis-4.2.0/man/man1/cjpegl.1
===================================================================
--- nbis-4.2.0.orig/man/man1/cjpegl.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/cjpegl.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Craig Watson and Michael D. Garris
 .\"
-.TH CJPEGL 1G "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH CJPEGL 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 cjpegl \- compresses a grayscale or color image using Lossless
 JPEG (JPEGL).
Index: nbis-4.2.0/man/man1/cmbmcs.1
===================================================================
--- nbis-4.2.0.orig/man/man1/cmbmcs.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/cmbmcs.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" G. T. Candela & Craig I. Watson
 .\"
-.TH CMBMCS 1B "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH CMBMCS 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 cmbmcs \- combines PCASYS mean/covariance data file pairs.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/cropcoeff.1
===================================================================
--- nbis-4.2.0.orig/man/man1/cropcoeff.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/cropcoeff.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Kenneth Ko
 .\"
-.TH CORPCOEFF 1F "03 October 2008" "NIST" "NBIS Reference Manual"
+.TH CORPCOEFF 1 "03 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 cropcoeff \- Read AN2K/AN2K7 file, and crop each Type-14 record.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/cwsq.1
===================================================================
--- nbis-4.2.0.orig/man/man1/cwsq.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/cwsq.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Craig Watson and Michael D. Garris
 .\"
-.TH CWSQ 1G "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH CWSQ 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 cwsq \- WSQ compresses grayscale fingerprint images.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/datainfo.1
===================================================================
--- nbis-4.2.0.orig/man/man1/datainfo.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/datainfo.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" G. T. Candela & Craig I. Watson
 .\"
-.TH DATAINFO 1B "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH DATAINFO 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 datainfo \- shows the header information of a PCASYS data file.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/diffbyts.1
===================================================================
--- nbis-4.2.0.orig/man/man1/diffbyts.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/diffbyts.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Craig Watson
 .\"
-.TH DIFFBYTS 1G "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH DIFFBYTS 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 diffbyts \- takes two binary data files and compares them byte
 for byte, compiling a cumulative histogram of differences.
Index: nbis-4.2.0/man/man1/djp2k.1
===================================================================
--- nbis-4.2.0.orig/man/man1/djp2k.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/djp2k.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Kenneth Ko
 .\"
-.TH DJP2K 1G "20 May 2009" "NIST" "NBIS Reference Manual"
+.TH DJP2K 1 "20 May 2009" "NIST" "NBIS Reference Manual"
 .SH NAME
 djp2k \- Decompress a JPEG2000 image into either pnm or raw image format. This is based on the j2k_to_image application implemented in the OPENJPEG library.
 .br
Index: nbis-4.2.0/man/man1/djpeg.1
===================================================================
--- nbis-4.2.0.orig/man/man1/djpeg.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/djpeg.1	2013-12-17 13:29:27.000000000 -0500
@@ -1,4 +1,4 @@
-.TH DJPEG 1H "02 October 2008" "IJG" "NBIS Reference Manual"
+.TH DJPEG 1 "02 October 2008" "IJG" "NBIS Reference Manual"
 .SH NAME
 djpeg \- decompress a JPEG file to an image file
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/djpegb.1
===================================================================
--- nbis-4.2.0.orig/man/man1/djpegb.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/djpegb.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Craig Watson and Michael D. Garris
 .\"
-.TH DJPEGB 1G "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH DJPEGB 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 djpegb \- decompresses a Baseline JPEG (JPEGB) grayscale or color image.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/djpegl.1
===================================================================
--- nbis-4.2.0.orig/man/man1/djpegl.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/djpegl.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Craig Watson and Michael D. Garris
 .\"
-.TH DJPEGL 1G "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH DJPEGL 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 djpegl \- decompresses a Lossless JPEG (JPEGL) grayscale or color image.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/djpeglsd.1
===================================================================
--- nbis-4.2.0.orig/man/man1/djpeglsd.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/djpeglsd.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Craig Watson and Michael D. Garris
 .\"
-.TH DJPEGLSD 1G "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH DJPEGLSD 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 djpeglsd \- decompresses a grayscale image that was compressed
 using the old Lossless JPEG compression distributed with Special
Index: nbis-4.2.0/man/man1/dlwsqcom.1
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ nbis-4.2.0/man/man1/dlwsqcom.1	2013-12-17 13:29:27.000000000 -0500
@@ -0,0 +1,31 @@
+.\" @(#)dlwsqcom.1 2008/10/02 NIST
+.\" I Image Group
+.\" Craig Watson
+.\"
+.TH RDWSQCOM 1 "02 October 2008" "NIST" "NBIS Reference Manual"
+.SH NAME
+dlwsqcom \- deletes all comments from a WSQ-encoded image file
+.SH SYNOPSIS
+.B dlwsqcom
+.I <image file>
+
+.SH DESCRIPTION
+.B dlwsqcom
+takes as input a file containing a WSQ-compressed image, and deletes
+any and all comment blocks.  Comments can be read from and written to
+a WSQ file by using the \fBrdwsqcom\fR and \fBwrwsqcom\fR commands.
+
+.SH OPTIONS
+.TP
+.I <image file>
+the input WSQ file from which comments are to be deleted.
+.TP
+\fB-version
+\fRPrint ANSI/NIST stardand and NBIS software version.
+
+.SH SEE ALSO
+.BR cwsq (1),
+.BR wrwsqcom (1)
+
+.SH AUTHOR
+NIST/ITL/DIV894/Image Group
Index: nbis-4.2.0/man/man1/dpyan2k.1
===================================================================
--- nbis-4.2.0.orig/man/man1/dpyan2k.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/dpyan2k.1	2013-12-17 13:29:27.000000000 -0500
@@ -3,7 +3,7 @@
 .\" Stan Janet & Michael D. Garris
 .\" record selection options added by Joseph C. Konczal
 .\"
-.TH DPYAN2K 1F "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH DPYAN2K 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 dpyan2k \- display image and minutiae contents of an
 ANSI/NIST file.
Index: nbis-4.2.0/man/man1/dpyimage.1
===================================================================
--- nbis-4.2.0.orig/man/man1/dpyimage.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/dpyimage.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Stan Janet
 .\"
-.TH DPYIMAGE 1G "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH DPYIMAGE 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 dpyimage \- displays the image contents of Baseline JPEG,
 Lossless JPEG, WSQ, IHead, and raw pixmap files.
Index: nbis-4.2.0/man/man1/dwsq.1
===================================================================
--- nbis-4.2.0.orig/man/man1/dwsq.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/dwsq.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Craig Watson and Michael D. Garris
 .\"
-.TH DWSQ 1G "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH DWSQ 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 dwsq \- decompresses a WSQ-encoded grayscale fingerprint image.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/dwsq14.1
===================================================================
--- nbis-4.2.0.orig/man/man1/dwsq14.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/dwsq14.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Craig Watson and Michael D. Garris
 .\"
-.TH DWSQ14 1G "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH DWSQ14 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 dwsq14 \- decompresses a WSQ14-encoded grayscale fingerprint image from
 NIST Special Database 14.
Index: nbis-4.2.0/man/man1/eva_evt.1
===================================================================
--- nbis-4.2.0.orig/man/man1/eva_evt.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/eva_evt.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" G. T. Candela & Craig I. Watson
 .\"
-.TH EVA_EVT 1B "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH EVA_EVT 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 eva_evt \- finds a desired number of eigenvalues and eigenvectors.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/fing2pat.1
===================================================================
--- nbis-4.2.0.orig/man/man1/fing2pat.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/fing2pat.1	2013-12-17 13:29:27.000000000 -0500
@@ -3,7 +3,7 @@
 .\" Michael Garris
 .\" Elham Tabassi
 .\"
-.TH FING2PAT 1D "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH FING2PAT 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 fing2pat \- Takes a list of fingerprint images and creates a
 feature vector file that can be used in MLP training for the NFIQ
Index: nbis-4.2.0/man/man1/fixwts.1
===================================================================
--- nbis-4.2.0.orig/man/man1/fixwts.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/fixwts.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Craig I. Watson & C. L. Wilson
 .\"
-.TH FIXWTS 1B "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH FIXWTS 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 fixwts \- M-weighted robust weight filter from network activations.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/histogen.1
===================================================================
--- nbis-4.2.0.orig/man/man1/histogen.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/histogen.1	2013-12-17 13:29:27.000000000 -0500
@@ -1,12 +1,12 @@
 .\" @(#)histogen.1 2010/05/28 NIST
 .\" I Image Group
 .\"
-.TH HISTOGEN 1G "28 May 2010" "NIST" "NBIS Reference Manual"
+.TH HISTOGEN 1 "28 May 2010" "NIST" "NBIS Reference Manual"
 .SH NAME
 histogen \- Parses the text file of an ANSI/NIST 2007 file that is generated by an2k2txt and builds a histogram of Field Numbers.
 .SH SYNOPSIS
-.B histogen
-.R [ options ] <TEMP DIR PATH> <FILES DIR PATH/filemask>
+.BR histogen
+[ options ] <TEMP DIR PATH> <FILES DIR PATH/filemask>
 
 .SH DESCRIPTION
 Histogen processes one or more ANSI/NIST 2007 files and builds a histogram of the number of times each field and sub-field appears within that set of ANSI/NIST files.  For examples of the various field types, see document NIST Special Publication 500-271 ANSI/NIST-ITL 1-2007.
Index: nbis-4.2.0/man/man1/iaf2an2k.1
===================================================================
--- nbis-4.2.0.orig/man/man1/iaf2an2k.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/iaf2an2k.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Michael D. Garris
 .\"
-.TH IAF2AN2K 1F "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH IAF2AN2K 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 iaf2an2k \- Takes an ANSI/NIST file conforming to FBI/IAFIS specifications
 and modifies minutiae and fingerprint image records in support of the
Index: nbis-4.2.0/man/man1/imgcmp.1
===================================================================
--- nbis-4.2.0.orig/man/man1/imgcmp.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/imgcmp.1	2013-12-17 13:29:27.000000000 -0500
@@ -1,7 +1,7 @@
 .\" @(#)imgcmp.1 2010/05/02 NIST
 .\" I Image Group
 .\"
-.TH IMGCMP 1G "02 May 2010" "NIST" "NBIS Reference Manual"
+.TH IMGCMP 1 "02 May 2010" "NIST" "NBIS Reference Manual"
 .SH NAME
 imgcmp \- takes two binary data files and compares them generating metric data.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/imginfo.1
===================================================================
--- nbis-4.2.0.orig/man/man1/imginfo.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/imginfo.1	2013-12-17 13:29:27.000000000 -0500
@@ -1,7 +1,7 @@
 .\" @(#)imgcmp.1 2010/05/02 NIST
 .\" I Image Group
 .\"
-.TH IMGINFO 1G "02 May 2010" "NIST" "NBIS Reference Manual"
+.TH IMGINFO 1 "02 May 2010" "NIST" "NBIS Reference Manual"
 .SH NAME
 imginfo \- takes a single file and provides basic information about the image.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/intr2not.1
===================================================================
--- nbis-4.2.0.orig/man/man1/intr2not.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/intr2not.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Craig Watson and Michael D. Garris
 .\"
-.TH INTR2NOT 1G "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH INTR2NOT 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 intr2not \- converts an image comprised of pixels with interleaved
 color components to an image with non-interleaved component planes.
Index: nbis-4.2.0/man/man1/jp2codec.1
===================================================================
--- nbis-4.2.0.orig/man/man1/jp2codec.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/jp2codec.1	2013-12-17 13:29:27.000000000 -0500
@@ -1,12 +1,12 @@
 .\" @(#)jp2codec.1 2010/05/02 NIST
 .\" I Image Group
 .\"
-.TH JP2CODEC 1G "02 May 2010" "NIST" "NBIS Reference Manual"
+.TH JP2CODEC 1 "02 May 2010" "NIST" "NBIS Reference Manual"
 .SH NAME
 jp2codec \- compresses and decompress images to/from JPEG2000 format.
 .SH SYNOPSIS
-.B jp2codec
-.R [ options ]
+.BR jp2codec
+[ options ]
 
 .SH DESCRIPTION
 The JP2CODEC converts image data to/from JPEG2000 format. The following formats are supported:
Index: nbis-4.2.0/man/man1/jpegtran.1
===================================================================
--- nbis-4.2.0.orig/man/man1/jpegtran.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/jpegtran.1	2013-12-17 13:29:27.000000000 -0500
@@ -1,4 +1,4 @@
-.TH JPEGTRAN 1H "3 August 1997" "IJG" "NBIS Reference Manual"
+.TH JPEGTRAN 1 "3 August 1997" "IJG" "NBIS Reference Manual"
 .SH NAME
 jpegtran \- lossless transformation of JPEG files
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/kltran.1
===================================================================
--- nbis-4.2.0.orig/man/man1/kltran.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/kltran.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" G. T. Candela & Craig I. Watson
 .\"
-.TH KLTRAN 1B "02 April 2001" "NIST" "NBIS Reference Manual"
+.TH KLTRAN 1 "02 April 2001" "NIST" "NBIS Reference Manual"
 .SH NAME
 kltran \- runs a Karhunen-Loeve transform on a set of vectors.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/lintran.1
===================================================================
--- nbis-4.2.0.orig/man/man1/lintran.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/lintran.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" G. T. Candela & Craig I. Watson
 .\"
-.TH LINTRAN 1B "02 April 2001" "NIST" "NBIS Reference Manual"
+.TH LINTRAN 1 "02 April 2001" "NIST" "NBIS Reference Manual"
 .SH NAME
 lintran \- runs a linear transform on a set of vectors.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/meancov.1
===================================================================
--- nbis-4.2.0.orig/man/man1/meancov.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/meancov.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" G. T. Candela & Craig I. Watson
 .\"
-.TH MEANCOV 1B "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH MEANCOV 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 meancov \- computes mean vector and covariance matrix for a set
 of feature vectors.
Index: nbis-4.2.0/man/man1/mindtct.1
===================================================================
--- nbis-4.2.0.orig/man/man1/mindtct.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/mindtct.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Michael D. Garris
 .\"
-.TH MINDTCT 1C "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH MINDTCT 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 mindtct \- detects minutiae from a fingerprint image that is either
 an ANSI/NIST 2007 formatted file or a WSQ compressed file.
Index: nbis-4.2.0/man/man1/mkoas.1
===================================================================
--- nbis-4.2.0.orig/man/man1/mkoas.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/mkoas.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" G. T. Candela & Craig I. Watson
 .\"
-.TH MKOAS 1B "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH MKOAS 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 mkoas \- makes orientation arrays from fingerprint images.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/mktran.1
===================================================================
--- nbis-4.2.0.orig/man/man1/mktran.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/mktran.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" G. T. Candela & Craig I. Watson
 .\"
-.TH MKTRAN 1B "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH MKTRAN 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 mktran \- makes transform matrix from regional weights and
 eigenvectors.
Index: nbis-4.2.0/man/man1/mlp.1
===================================================================
--- nbis-4.2.0.orig/man/man1/mlp.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/mlp.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" G. T. Candela, Craig I. Watson & C. L. Wilson
 .\"
-.TH MLP 1B "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH MLP 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 mlp \- Does training and testing runs using a 3-layer feed-forward
 linear perceptron Neural Network.
Index: nbis-4.2.0/man/man1/mlpfeats.1
===================================================================
--- nbis-4.2.0.orig/man/man1/mlpfeats.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/mlpfeats.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Craig I. Watson & C. L. Wilson
 .\"
-.TH MLPFEATS 1B "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH MLPFEATS 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 mlpfeats \- converts PCASYS formatted feature files into
 the format compatible with the mlp command line function.
Index: nbis-4.2.0/man/man1/nfiq.1
===================================================================
--- nbis-4.2.0.orig/man/man1/nfiq.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/nfiq.1	2013-12-17 13:29:27.000000000 -0500
@@ -5,7 +5,7 @@
 .\" Modified by Joseph Konczal - corrected '-b' to '-d', added record selectors
 .\" JCK added missing '-o', improved explanation of record selection options
 .\"
-.TH NFIQ 1D "08 January 2009" "NIST" "NBIS Reference Manual"
+.TH NFIQ 1 "08 January 2009" "NIST" "NBIS Reference Manual"
 .SH NAME
 nfiq \- evaluates a fingerprint image and returns a quality value for
 the image on a scale of 1 (highest quality) to 5 (lowest quality).
@@ -19,7 +19,7 @@
 .RB [ \-f
 .IR FGP[:IMP] ]
 .RB [ \-i
-.IE IMP ]
+.IR IMP ]
 .RB [ \-n
 .IR IDC ]
 .RB [ \-o ]
Index: nbis-4.2.0/man/man1/nfseg.1
===================================================================
--- nbis-4.2.0.orig/man/man1/nfseg.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/nfseg.1	2013-12-17 13:29:27.000000000 -0500
@@ -3,7 +3,7 @@
 .\" Craig Watson
 .\" Updated by Joseph Konczal
 .\"
-.TH NFSEG 1A "19 November 2009" "NIST" "NBIS Reference Manual"
+.TH NFSEG 1 "19 November 2009" "NIST" "NBIS Reference Manual"
 .SH NAME
 nfseg \- Segments multiple finger plain impressions into individual
 fingers or removes white space from single finger rolled/plain impressions
Index: nbis-4.2.0/man/man1/not2intr.1
===================================================================
--- nbis-4.2.0.orig/man/man1/not2intr.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/not2intr.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Craig Watson and Michael D. Garris
 .\"
-.TH NOT2INTR 1G "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH NOT2INTR 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 not2intr \- converts an image comprised of non-interleaved color
 component planes to an image with interleaved color component
Index: nbis-4.2.0/man/man1/oas2pics.1
===================================================================
--- nbis-4.2.0.orig/man/man1/oas2pics.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/oas2pics.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" G. T. Candela & Craig I. Watson
 .\"
-.TH OAS2PICS 1B "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH OAS2PICS 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 oas2pics \- makes pictures of orientation arrays.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/optosf.1
===================================================================
--- nbis-4.2.0.orig/man/man1/optosf.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/optosf.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" G. T. Candela & Craig I. Watson
 .\"
-.TH OPTOSF 1B "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH OPTOSF 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 optosf \- optimizes the overall smoothing factor for the PNN classifier.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/optrws.1
===================================================================
--- nbis-4.2.0.orig/man/man1/optrws.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/optrws.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" G. T. Candela & Craig I. Watson
 .\"
-.TH OPTRWS 1B "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH OPTRWS 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 optrws \- optimizes the regional weights for PNN classifier.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/optrwsgw.1
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ nbis-4.2.0/man/man1/optrwsgw.1	2013-12-17 13:29:27.000000000 -0500
@@ -0,0 +1,68 @@
+.\" @(#)optrwsgw.1 2008/10/02 NIST
+.\" I Image Group
+.\" Craig Watson
+.\"
+.TH OPTRWSGW 1 "02 October 2008" "NIST" "NBIS Reference Manual"
+.SH NAME
+optrwsgw \- optimizes regional weights to be applied to eigenvectors
+.SH SYNOPSIS
+.B optrwsgw
+.I <1> <2> <3> <4> <5> <6> <7> <8> <9> <10> <11>
+
+.SH DESCRIPTION
+.B optrwsgw
+is a program executed by \fBoptrws\fR in order to parallelize 
+computations required for estimation of the gradient of a fingerprint
+image. Users should \fBnot\fR execute this program directly. 
+
+.SH OPTIONS
+.TP
+.I <1>
+the first argument provided by \fBoptrws\fR
+
+.TP
+.I <2>
+the second argument provided by \fBoptrws\fR
+
+.TP
+.I <3>
+the third argument provided by \fBoptrws\fR
+
+.TP
+.I <4>
+the fourth argument provided by \fBoptrws\fR
+
+.TP
+.I <5>
+the fifth argument provided by \fBoptrws\fR
+
+.TP
+.I <6>
+the sixth argument provided by \fBoptrws\fR
+
+.TP
+.I <7>
+the seventh argument provided by \fBoptrws\fR
+
+.TP
+.I <8>
+the eighth argument provided by \fBoptrws\fR
+
+.TP
+.I <9>
+the ninth argument provided by \fBoptrws\fR
+
+.TP
+.I <10>
+the tenth argument provided by \fBoptrws\fR
+
+.TP
+.I <11>
+the eleventh argument provided by \fBoptrws\fR
+
+.SH SEE ALSO
+.BR cwsq (1),
+.BR wrwsqcom (1)
+
+.SH AUTHOR
+NIST/ITL/DIV894/Image Group
Index: nbis-4.2.0/man/man1/pcasys.1
===================================================================
--- nbis-4.2.0.orig/man/man1/pcasys.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/pcasys.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" G. T. Candela & Craig I. Watson
 .\"
-.TH PCASYS 1B "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH PCASYS 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 pcasys \- fingerprint classifier demo, non-graphical version
 .SH SYNOPSIS
@@ -92,7 +92,7 @@
 .TP
 .B cls_str \fIALRSTW\fR
 Class string used in graphics mode to display the
-ouput activations.  Should be same size as number of outputs
+output activations.  Should be same size as number of outputs
 (ie. pnn_nclasses or number outputs in mlp_wts file).  Must be
 some combination of "ALRSTW".  For PNN, these must be the same
 classes as used in the prototype files and be in the same order 
Index: nbis-4.2.0/man/man1/pcasysx.1
===================================================================
--- nbis-4.2.0.orig/man/man1/pcasysx.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/pcasysx.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" G. T. Candela & Craig I. Watson
 .\"
-.TH PCASYSX 1B "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH PCASYSX 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 pcasysx \- fingerprint classifier demo, graphical version
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/rdimgwh.1
===================================================================
--- nbis-4.2.0.orig/man/man1/rdimgwh.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/rdimgwh.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Joseph C. Konczal & Craig I. Watson
 .\"
-.TH RWPICS 1B "03 October 2008" "NIST" "NBIS Reference Manual"
+.TH RWPICS 1 "03 October 2008" "NIST" "NBIS Reference Manual"
 
 .SH NAME
 rdimgwh \- read image width and height directly from within the image
Index: nbis-4.2.0/man/man1/rdjpgcom.1
===================================================================
--- nbis-4.2.0.orig/man/man1/rdjpgcom.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/rdjpgcom.1	2013-12-17 13:29:27.000000000 -0500
@@ -1,4 +1,4 @@
-.TH RDJPGCOM 1H "02 October 2008" "IJG" "NBIS Reference Manual"
+.TH RDJPGCOM 1 "02 October 2008" "IJG" "NBIS Reference Manual"
 .SH NAME
 rdjpgcom \- display text comments from a JPEG file
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/rdwsqcom.1
===================================================================
--- nbis-4.2.0.orig/man/man1/rdwsqcom.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/rdwsqcom.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Craig Watson
 .\"
-.TH RDWSQCOM 1G "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH RDWSQCOM 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 rdwsqcom \- scans a WSQ-encoded image file for any and all comment
 blocks, printing their contents to standard output.
Index: nbis-4.2.0/man/man1/record_selector.1
===================================================================
--- nbis-4.2.0.orig/man/man1/record_selector.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/record_selector.1	2013-12-17 13:29:27.000000000 -0500
@@ -24,7 +24,7 @@
 .\" of Standards and Technology, nor does it imply that the products and equipment
 .\" identified are necessarily the best available for the purpose.
 .\"
-.TH "AN2K RECORD SELECTOR" 1F "13 March 2008" "NIST" "NBIS Reference Manual"
+.TH "AN2K RECORD SELECTOR" 1 "13 March 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 AN2K Record Selector \- Select particular records from ANSI/NIST
 data files using metadata in the records.
Index: nbis-4.2.0/man/man1/rgb2ycc.1
===================================================================
--- nbis-4.2.0.orig/man/man1/rgb2ycc.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/rgb2ycc.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Craig Watson and Michael D. Garris
 .\"
-.TH RGB2YCC 1G "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH RGB2YCC 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 rgb2ycc \- converts a color RGB image to the YCbCr colorspace and
 downsamples component planes as specified.
Index: nbis-4.2.0/man/man1/rwpics.1
===================================================================
--- nbis-4.2.0.orig/man/man1/rwpics.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/rwpics.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" G. T. Candela & Craig I. Watson
 .\"
-.TH RWPICS 1B "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH RWPICS 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 rwpics \- makes pictures of regional weights or gradients.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/sd_rfmt.1
===================================================================
--- nbis-4.2.0.orig/man/man1/sd_rfmt.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/sd_rfmt.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Craig Watson and Michael D. Garris
 .\"
-.TH SD_RFMT 1G "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH SD_RFMT 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 sd_rfmt \- takes images from NIST Special Databases 4, 9, 10, 14,
 and 18 and reformats the compressed data to work with the
@@ -11,7 +11,7 @@
 .SH SYNOPSIS
 .B sd_rfmt
 .I <SD #>
-.I<outext>
+.I <outext>
 .I <image file>
 .RS 8
 SD list = {4,9,10,14,18}
Index: nbis-4.2.0/man/man1/stackms.1
===================================================================
--- nbis-4.2.0.orig/man/man1/stackms.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/stackms.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" G. T. Candela & Craig I. Watson
 .\"
-.TH STACKMS 1B "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH STACKMS 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 stackms \- stacks PCASYS formatted matrix files together.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/txt2an2k.1
===================================================================
--- nbis-4.2.0.orig/man/man1/txt2an2k.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/txt2an2k.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Michael D. Garris
 .\"
-.TH TXT2AN2K 1F "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH TXT2AN2K 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 txt2an2k \- Converts a formatted text file into an ANSI/NIST 2007 file.
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/wrjpgcom.1
===================================================================
--- nbis-4.2.0.orig/man/man1/wrjpgcom.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/wrjpgcom.1	2013-12-17 13:29:27.000000000 -0500
@@ -1,4 +1,4 @@
-.TH WRJPGCOM 1H "02 October 2008" "IJG" "NFIS Reference Manual"
+.TH WRJPGCOM 1 "02 October 2008" "IJG" "NFIS Reference Manual"
 .SH NAME
 wrjpgcom \- insert text comments into a JPEG file
 .SH SYNOPSIS
Index: nbis-4.2.0/man/man1/wrwsqcom.1
===================================================================
--- nbis-4.2.0.orig/man/man1/wrwsqcom.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/wrwsqcom.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Craig Watson
 .\"
-.TH WRWSQCOM 1G "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH WRWSQCOM 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 wrwsqcom \- inserts a specified comment block into a WSQ-encoded
 image file.
Index: nbis-4.2.0/man/man1/ycc2rgb.1
===================================================================
--- nbis-4.2.0.orig/man/man1/ycc2rgb.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/ycc2rgb.1	2013-12-17 13:29:27.000000000 -0500
@@ -2,7 +2,7 @@
 .\" I Image Group
 .\" Craig Watson and Michael D. Garris
 .\"
-.TH YCC2RGB 1G "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH YCC2RGB 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 ycc2rgb \- converts a color YCbCr image to the RGB colorspace and
 accounts for downsampling of the YCbCr component planes.
Index: nbis-4.2.0/man/man1/znormdat.1
===================================================================
--- nbis-4.2.0.orig/man/man1/znormdat.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/znormdat.1	2013-12-17 13:29:27.000000000 -0500
@@ -3,7 +3,7 @@
 .\" Michael Garris
 .\" Elham Tabassi
 .\"
-.TH ZNORMDAT 1D "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH ZNORMDAT 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 nzormdat \- Takes a patterns file of (un-normalized) feature vectors
 and computes and writes the statistics (mean and stddev) to support
Index: nbis-4.2.0/man/man1/znormpat.1
===================================================================
--- nbis-4.2.0.orig/man/man1/znormpat.1	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/man/man1/znormpat.1	2013-12-17 13:29:27.000000000 -0500
@@ -3,7 +3,7 @@
 .\" Michael Garris
 .\" Elham Tabassi
 .\"
-.TH ZNORMPAT 1D "02 October 2008" "NIST" "NBIS Reference Manual"
+.TH ZNORMPAT 1 "02 October 2008" "NIST" "NBIS Reference Manual"
 .SH NAME
 nzormpat \- Takes a patterns file of (un-normalized) feature vectors
 and ZNormalizes its feature vectors based on global statistics provided.
Index: nbis-4.2.0/mindtct/p_rules.mak
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ nbis-4.2.0/mindtct/p_rules.mak	2013-12-17 13:29:27.000000000 -0500
@@ -0,0 +1,128 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
+#*******************************************************************************
+#
+# License: 
+# This software and/or related materials was developed at the National Institute
+# of Standards and Technology (NIST) by employees of the Federal Government
+# in the course of their official duties. Pursuant to title 17 Section 105
+# of the United States Code, this software is not subject to copyright
+# protection and is in the public domain. 
+#
+# This software and/or related materials have been determined to be not subject
+# to the EAR (see Part 734.3 of the EAR for exact details) because it is
+# a publicly available technology and software, and is freely distributed
+# to any interested party with no licensing requirements.  Therefore, it is 
+# permissible to distribute this software as a free download from the internet.
+#
+# Disclaimer: 
+# This software and/or related materials was developed to promote biometric
+# standards and biometric technology testing for the Federal Government
+# in accordance with the USA PATRIOT Act and the Enhanced Border Security
+# and Visa Entry Reform Act. Specific hardware and software products identified
+# in this software were used in order to perform the software development.
+# In no case does such identification imply recommendation or endorsement
+# by the National Institute of Standards and Technology, nor does it imply that
+# the products and equipment identified are necessarily the best available
+# for the purpose.
+#
+# This software and/or related materials are provided "AS-IS" without warranty
+# of any kind including NO WARRANTY OF PERFORMANCE, MERCHANTABILITY,
+# NO WARRANTY OF NON-INFRINGEMENT OF ANY 3RD PARTY INTELLECTUAL PROPERTY
+# or FITNESS FOR A PARTICULAR PURPOSE or for any purpose whatsoever, for the
+# licensed product, however used. In no event shall NIST be liable for any
+# damages and/or costs, including but not limited to incidental or consequential
+# damages of any kind, including economic damage or injury to property and lost
+# profits, regardless of whether NIST shall be advised, have reason to know,
+# or in fact shall know of the possibility.
+#
+# By using this software, you agree to bear all risk relating to quality,
+# use and performance of the software and/or related materials.  You agree
+# to hold the Government harmless from any claim arising from your use
+# of the software.
+#
+#*******************************************************************************
+# Project:              NIST Fingerprint Software
+# Filename:             p_rules.mak.src
+# Integrators:          Kenneth Ko
+# Organization:         NIST/ITL
+# Host System:          GNU GCC/GMAKE GENERIC (UNIX)
+# Date Created:         08/20/2006
+#
+# ******************************************************************************
+#
+# This rules file contains all the necessary variables to build "mindtct".
+#
+# ******************************************************************************
+THIS_DIR = $(subst //,/,$(dir $(CURDIR)/$(lastword $(MAKEFILE_LIST))))
+include $(THIS_DIR)/../rules.mak
+#
+# ------------------------------------------------------------------------------
+#
+PACKAGE		:= mindtct
+PROGRAMS	:= mindtct
+LIBRARYS	:= mindtct
+LIBRARY_NAMES	:= $(LIBRARYS:%=lib%.a)
+#
+# ------------------------------------------------------------------------------
+#
+DIR_ROOT_PACKAGE	:= $(DIR_ROOT)/$(PACKAGE)
+INSTALL_BIN_DIR		:= $(DIR_ROOT_PACKAGE)/bin
+INSTALL_LIB_DIR		:= $(DIR_ROOT_PACKAGE)/lib
+#
+# ------------------------------------------------------------------------------
+#
+DIR_SRC		:= $(DIR_ROOT_PACKAGE)/src
+DIR_INC		:= $(DIR_ROOT_PACKAGE)/include
+DIR_SRC_BIN	:= $(DIR_SRC)/bin
+DIR_SRC_LIB	:= $(DIR_SRC)/lib
+#
+DIR_OBJ		:= $(DIR_ROOT_PACKAGE)/obj
+DIR_BIN		:= $(DIR_ROOT_PACKAGE)/bin
+DIR_LIB		:= $(DIR_ROOT_PACKAGE)/lib
+#
+DIR_SRC_BIN_ALL	:= $(PROGRAMS:%=$(DIR_SRC_BIN)/%)
+DIR_SRC_LIB_ALL := $(LIBRARYS:%=$(DIR_SRC_LIB)/%)
+#
+BASE_DIR := \
+	$(DIR_SRC) \
+	$(DIR_SRC_BIN) \
+	$(DIR_SRC_LIB) \
+	$(DIR_SRC_LIB_ALL) \
+	$(DIR_SRC_BIN_ALL)
+#
+# ------------------------------------------------------------------------------
+#
+DIR_OBJ_SRC	:= $(DIR_OBJ)/src
+DIR_OBJ_SRC_BIN	:= $(DIR_OBJ_SRC)/bin
+DIR_OBJ_SRC_LIB	:= $(DIR_OBJ_SRC)/lib
+#
+DIR_OBJ_SRC_BIN_ALL	:= $(PROGRAMS:%=$(DIR_OBJ_SRC_BIN)/%)
+DIR_OBJ_SRC_LIB_ALL	:= $(LIBRARYS:%=$(DIR_OBJ_SRC_LIB)/%)
+#
+OBJ_BASE_DIR	:= $(DIR_OBJ) $(subst $(DIR_SRC),$(DIR_OBJ_SRC),$(BASE_DIR))
+#
+# ------------------------------------------------------------------------------
+#
Index: nbis-4.2.0/mindtct/src/bin/mindtct/Makefile
===================================================================
--- nbis-4.2.0.orig/mindtct/src/bin/mindtct/Makefile	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/mindtct/src/bin/mindtct/Makefile	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -69,7 +93,6 @@
 	$(EXPORTS_LIB_DIR)/libihead.a \
 	$(EXPORTS_LIB_DIR)/libwsq.a \
 	$(EXPORTS_LIB_DIR)/libjpegl.a \
-	$(EXPORTS_LIB_DIR)/libjpegb.a \
 	$(EXPORTS_LIB_DIR)/libfet.a \
 	$(EXPORTS_LIB_DIR)/libcblas.a \
 	$(EXPORTS_LIB_DIR)/libioutil.a \
@@ -82,22 +105,22 @@
 endif
 #
 ifeq ($(NBIS_OPENJPEG_FLAG),-D__NBIS_OPENJPEG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libopenjpeg.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libopenjpeg.a
 endif
 
 #
 ifeq ($(NBIS_PNG_FLAG),-D__NBIS_PNG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libpng.a \
-	$(EXPORTS_LIB_DIR)/libz.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libpng.a \
+	#~ $(EXPORTS_LIB_DIR)/libz.a
 endif
 #
 EXT_INCS	:= -I$(EXPORTS_INC_DIR)
 #
-EXT_LIBS	:=  -lm
+EXT_LIBS	:=  -lm -ljpeg
 
 ifeq ($(MSYS_FLAG),-D__MSYS__)
 EXT_LIBS	:= \
Index: nbis-4.2.0/nfiq/p_rules.mak
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ nbis-4.2.0/nfiq/p_rules.mak	2013-12-17 13:29:27.000000000 -0500
@@ -0,0 +1,128 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
+#*******************************************************************************
+#
+# License: 
+# This software and/or related materials was developed at the National Institute
+# of Standards and Technology (NIST) by employees of the Federal Government
+# in the course of their official duties. Pursuant to title 17 Section 105
+# of the United States Code, this software is not subject to copyright
+# protection and is in the public domain. 
+#
+# This software and/or related materials have been determined to be not subject
+# to the EAR (see Part 734.3 of the EAR for exact details) because it is
+# a publicly available technology and software, and is freely distributed
+# to any interested party with no licensing requirements.  Therefore, it is 
+# permissible to distribute this software as a free download from the internet.
+#
+# Disclaimer: 
+# This software and/or related materials was developed to promote biometric
+# standards and biometric technology testing for the Federal Government
+# in accordance with the USA PATRIOT Act and the Enhanced Border Security
+# and Visa Entry Reform Act. Specific hardware and software products identified
+# in this software were used in order to perform the software development.
+# In no case does such identification imply recommendation or endorsement
+# by the National Institute of Standards and Technology, nor does it imply that
+# the products and equipment identified are necessarily the best available
+# for the purpose.
+#
+# This software and/or related materials are provided "AS-IS" without warranty
+# of any kind including NO WARRANTY OF PERFORMANCE, MERCHANTABILITY,
+# NO WARRANTY OF NON-INFRINGEMENT OF ANY 3RD PARTY INTELLECTUAL PROPERTY
+# or FITNESS FOR A PARTICULAR PURPOSE or for any purpose whatsoever, for the
+# licensed product, however used. In no event shall NIST be liable for any
+# damages and/or costs, including but not limited to incidental or consequential
+# damages of any kind, including economic damage or injury to property and lost
+# profits, regardless of whether NIST shall be advised, have reason to know,
+# or in fact shall know of the possibility.
+#
+# By using this software, you agree to bear all risk relating to quality,
+# use and performance of the software and/or related materials.  You agree
+# to hold the Government harmless from any claim arising from your use
+# of the software.
+#
+#*******************************************************************************
+# Project:              NIST Fingerprint Software
+# Filename:             p_rules.mak.src
+# Integrators:          Kenneth Ko
+# Organization:         NIST/ITL
+# Host System:          GNU GCC/GMAKE GENERIC (UNIX)
+# Date Created:         08/20/2006
+#
+# ******************************************************************************
+#
+# This rules file contains all the necessary variables to build "nfiq".
+#
+# ******************************************************************************
+THIS_DIR = $(subst //,/,$(dir $(CURDIR)/$(lastword $(MAKEFILE_LIST))))
+include $(THIS_DIR)/../rules.mak
+#
+# ------------------------------------------------------------------------------
+#
+PACKAGE		:= nfiq
+PROGRAMS	:= fing2pat nfiq znormdat znormpat
+LIBRARYS	:= nfiq
+LIBRARY_NAMES:= $(LIBRARYS:%=lib%.a)
+#
+# ------------------------------------------------------------------------------
+#
+DIR_ROOT_PACKAGE	:= $(DIR_ROOT)/$(PACKAGE)
+INSTALL_BIN_DIR		:= $(DIR_ROOT_PACKAGE)/bin
+INSTALL_LIB_DIR		:= $(DIR_ROOT_PACKAGE)/lib
+#
+# ------------------------------------------------------------------------------
+#
+DIR_SRC		:= $(DIR_ROOT_PACKAGE)/src
+DIR_INC		:= $(DIR_ROOT_PACKAGE)/include
+DIR_SRC_BIN	:= $(DIR_SRC)/bin
+DIR_SRC_LIB	:= $(DIR_SRC)/lib
+#
+DIR_OBJ		:= $(DIR_ROOT_PACKAGE)/obj
+DIR_BIN		:= $(DIR_ROOT_PACKAGE)/bin
+DIR_LIB		:= $(DIR_ROOT_PACKAGE)/lib
+#
+DIR_SRC_BIN_ALL	:= $(PROGRAMS:%=$(DIR_SRC_BIN)/%)
+DIR_SRC_LIB_ALL := $(LIBRARYS:%=$(DIR_SRC_LIB)/%)
+#
+BASE_DIR := \
+	$(DIR_SRC) \
+	$(DIR_SRC_BIN) \
+	$(DIR_SRC_LIB) \
+	$(DIR_SRC_LIB_ALL) \
+	$(DIR_SRC_BIN_ALL)
+#
+# ------------------------------------------------------------------------------
+#
+DIR_OBJ_SRC	:= $(DIR_OBJ)/src
+DIR_OBJ_SRC_BIN	:= $(DIR_OBJ_SRC)/bin
+DIR_OBJ_SRC_LIB	:= $(DIR_OBJ_SRC)/lib
+#
+DIR_OBJ_SRC_BIN_ALL	:= $(PROGRAMS:%=$(DIR_OBJ_SRC_BIN)/%)
+DIR_OBJ_SRC_LIB_ALL	:= $(LIBRARYS:%=$(DIR_OBJ_SRC_LIB)/%)
+#
+OBJ_BASE_DIR	:= $(DIR_OBJ) $(subst $(DIR_SRC),$(DIR_OBJ_SRC),$(BASE_DIR))
+#
+# ------------------------------------------------------------------------------
+#
Index: nbis-4.2.0/nfiq/src/bin/fing2pat/Makefile
===================================================================
--- nbis-4.2.0.orig/nfiq/src/bin/fing2pat/Makefile	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/nfiq/src/bin/fing2pat/Makefile	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -71,7 +95,6 @@
 	$(EXPORTS_LIB_DIR)/libihead.a \
 	$(EXPORTS_LIB_DIR)/libwsq.a \
 	$(EXPORTS_LIB_DIR)/libjpegl.a \
-	$(EXPORTS_LIB_DIR)/libjpegb.a \
 	$(EXPORTS_LIB_DIR)/libfet.a \
 	$(EXPORTS_LIB_DIR)/libmlp.a \
 	$(EXPORTS_LIB_DIR)/libcblas.a \
@@ -86,21 +109,21 @@
 endif
 #
 ifeq ($(NBIS_OPENJPEG_FLAG),-D__NBIS_OPENJPEG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libopenjpeg.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libopenjpeg.a
 endif
 
 #
 ifeq ($(NBIS_PNG_FLAG),-D__NBIS_PNG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libpng.a \
-	$(EXPORTS_LIB_DIR)/libz.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libpng.a \
+	#~ $(EXPORTS_LIB_DIR)/libz.a
 endif
 #
 EXT_INCS	:= -I$(EXPORTS_INC_DIR)
 #
-EXT_LIBS	:= -lm
+EXT_LIBS	:= -lm -ljpeg
 #
 include $(DIR_ROOT_BUILDUTIL)/bin.mak
Index: nbis-4.2.0/nfiq/src/bin/nfiq/Makefile
===================================================================
--- nbis-4.2.0.orig/nfiq/src/bin/nfiq/Makefile	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/nfiq/src/bin/nfiq/Makefile	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -70,7 +94,6 @@
 	$(EXPORTS_LIB_DIR)/libihead.a \
 	$(EXPORTS_LIB_DIR)/libwsq.a \
 	$(EXPORTS_LIB_DIR)/libjpegl.a \
-	$(EXPORTS_LIB_DIR)/libjpegb.a \
 	$(EXPORTS_LIB_DIR)/libfet.a \
 	$(EXPORTS_LIB_DIR)/libmlp.a \
 	$(EXPORTS_LIB_DIR)/libcblas.a \
@@ -84,20 +107,20 @@
 endif
 #
 ifeq ($(NBIS_OPENJPEG_FLAG),-D__NBIS_OPENJPEG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libopenjpeg.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libopenjpeg.a
 endif
 #
 ifeq ($(NBIS_PNG_FLAG),-D__NBIS_PNG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libpng.a \
-	$(EXPORTS_LIB_DIR)/libz.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libpng.a \
+	#~ $(EXPORTS_LIB_DIR)/libz.a
 endif
 #
 EXT_INCS	:= -I$(EXPORTS_INC_DIR)
 #
-EXT_LIBS	:= -lm
+EXT_LIBS	:= -lm -ljpeg
 #
 include $(DIR_ROOT_BUILDUTIL)/bin.mak
Index: nbis-4.2.0/nfiq/src/bin/nfiq/nfiq.c
===================================================================
--- nbis-4.2.0.orig/nfiq/src/bin/nfiq/nfiq.c	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/nfiq/src/bin/nfiq/nfiq.c	2013-12-17 13:29:27.000000000 -0500
@@ -590,7 +590,7 @@
    (void)fprintf(stderr, "   Usage:\n\
    %s [options] <fingimage in> [<fingimage out>]\n\
       -d               default - print only the image quality value,\n\
-                       preceeded by the ANSI/NIST record number if applicable\n\
+                       preceded by the ANSI/NIST record number if applicable\n\
       -v               verbose - print all the feature vectors, image quality\n\
                        value, and network activation values\n\
       -o               old behavior - print values for only the first\n\
Index: nbis-4.2.0/nfseg/p_rules.mak
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ nbis-4.2.0/nfseg/p_rules.mak	2013-12-17 13:29:27.000000000 -0500
@@ -0,0 +1,129 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
+#*******************************************************************************
+#
+# License: 
+# This software and/or related materials was developed at the National Institute
+# of Standards and Technology (NIST) by employees of the Federal Government
+# in the course of their official duties. Pursuant to title 17 Section 105
+# of the United States Code, this software is not subject to copyright
+# protection and is in the public domain. 
+#
+# This software and/or related materials have been determined to be not subject
+# to the EAR (see Part 734.3 of the EAR for exact details) because it is
+# a publicly available technology and software, and is freely distributed
+# to any interested party with no licensing requirements.  Therefore, it is 
+# permissible to distribute this software as a free download from the internet.
+#
+# Disclaimer: 
+# This software and/or related materials was developed to promote biometric
+# standards and biometric technology testing for the Federal Government
+# in accordance with the USA PATRIOT Act and the Enhanced Border Security
+# and Visa Entry Reform Act. Specific hardware and software products identified
+# in this software were used in order to perform the software development.
+# In no case does such identification imply recommendation or endorsement
+# by the National Institute of Standards and Technology, nor does it imply that
+# the products and equipment identified are necessarily the best available
+# for the purpose.
+#
+# This software and/or related materials are provided "AS-IS" without warranty
+# of any kind including NO WARRANTY OF PERFORMANCE, MERCHANTABILITY,
+# NO WARRANTY OF NON-INFRINGEMENT OF ANY 3RD PARTY INTELLECTUAL PROPERTY
+# or FITNESS FOR A PARTICULAR PURPOSE or for any purpose whatsoever, for the
+# licensed product, however used. In no event shall NIST be liable for any
+# damages and/or costs, including but not limited to incidental or consequential
+# damages of any kind, including economic damage or injury to property and lost
+# profits, regardless of whether NIST shall be advised, have reason to know,
+# or in fact shall know of the possibility.
+#
+# By using this software, you agree to bear all risk relating to quality,
+# use and performance of the software and/or related materials.  You agree
+# to hold the Government harmless from any claim arising from your use
+# of the software.
+#
+#*******************************************************************************
+# Project:              NIST Fingerprint Software
+# SubTree:              /NBIS/Main/nfseg
+# Filename:             p_rules.mak.src
+# Integrators:          Kenneth Ko
+# Organization:         NIST/ITL
+# Host System:          GNU GCC/GMAKE GENERIC (UNIX)
+# Date Created:         08/20/2006
+#
+# ******************************************************************************
+#
+# This rules file contains all the necessary variables to build "nfseg".
+#
+# ******************************************************************************
+THIS_DIR = $(subst //,/,$(dir $(CURDIR)/$(lastword $(MAKEFILE_LIST))))
+include $(THIS_DIR)/../rules.mak
+#
+# ------------------------------------------------------------------------------
+#
+PACKAGE		:= nfseg
+PROGRAMS	:= nfseg
+LIBRARYS	:= nfseg
+LIBRARY_NAMES	:= $(LIBRARYS:%=lib%.a)
+#
+# ------------------------------------------------------------------------------
+#
+DIR_ROOT_PACKAGE	:= $(DIR_ROOT)/$(PACKAGE)
+INSTALL_BIN_DIR		:= $(DIR_ROOT_PACKAGE)/bin
+INSTALL_LIB_DIR		:= $(DIR_ROOT_PACKAGE)/lib
+#
+# ------------------------------------------------------------------------------
+#
+DIR_SRC		:= $(DIR_ROOT_PACKAGE)/src
+DIR_INC		:= $(DIR_ROOT_PACKAGE)/include
+DIR_SRC_BIN	:= $(DIR_SRC)/bin
+DIR_SRC_LIB	:= $(DIR_SRC)/lib
+#
+DIR_OBJ		:= $(DIR_ROOT_PACKAGE)/obj
+DIR_BIN		:= $(DIR_ROOT_PACKAGE)/bin
+DIR_LIB		:= $(DIR_ROOT_PACKAGE)/lib
+#
+DIR_SRC_BIN_ALL	:= $(PROGRAMS:%=$(DIR_SRC_BIN)/%)
+DIR_SRC_LIB_ALL := $(LIBRARYS:%=$(DIR_SRC_LIB)/%)
+#
+BASE_DIR := \
+	$(DIR_SRC) \
+	$(DIR_SRC_BIN) \
+	$(DIR_SRC_LIB) \
+	$(DIR_SRC_LIB_ALL) \
+	$(DIR_SRC_BIN_ALL)
+#
+#-------------------------------------------------------------------
+#
+DIR_OBJ_SRC	:= $(DIR_OBJ)/src
+DIR_OBJ_SRC_BIN	:= $(DIR_OBJ_SRC)/bin
+DIR_OBJ_SRC_LIB	:= $(DIR_OBJ_SRC)/lib
+#
+DIR_OBJ_SRC_BIN_ALL	:= $(PROGRAMS:%=$(DIR_OBJ_SRC_BIN)/%)
+DIR_OBJ_SRC_LIB_ALL	:= $(LIBRARYS:%=$(DIR_OBJ_SRC_LIB)/%)
+#
+OBJ_BASE_DIR	:= $(DIR_OBJ) $(subst $(DIR_SRC),$(DIR_OBJ_SRC),$(BASE_DIR))
+#
+# ------------------------------------------------------------------------------
+#
Index: nbis-4.2.0/nfseg/src/bin/nfseg/Makefile
===================================================================
--- nbis-4.2.0.orig/nfseg/src/bin/nfseg/Makefile	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/nfseg/src/bin/nfseg/Makefile	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -74,7 +98,6 @@
 	$(EXPORTS_LIB_DIR)/libioutil.a \
 	$(EXPORTS_LIB_DIR)/libutil.a \
 	$(EXPORTS_LIB_DIR)/libpcautil.a \
-	$(EXPORTS_LIB_DIR)/libjpegb.a \
 	$(EXPORTS_LIB_DIR)/libwsq.a
 
 #
@@ -85,21 +108,21 @@
 endif
 #
 ifeq ($(NBIS_OPENJPEG_FLAG),-D__NBIS_OPENJPEG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libopenjpeg.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libopenjpeg.a
 endif
 #
 ifeq ($(NBIS_PNG_FLAG),-D__NBIS_PNG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libpng.a \
-	$(EXPORTS_LIB_DIR)/libz.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libpng.a \
+	#~ $(EXPORTS_LIB_DIR)/libz.a
 endif
 #
 EXT_INCS	:= -I$(EXPORTS_INC_DIR)
 #
-EXT_LIBS	:=  -lm
+EXT_LIBS	:=  -lm -ljpeg
 
 ifeq ($(MSYS_FLAG),-D__MSYS__)
 EXT_LIBS	:= \
Index: nbis-4.2.0/pcasys/include/little.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ nbis-4.2.0/pcasys/include/little.h	2013-12-17 13:29:27.000000000 -0500
@@ -0,0 +1,111 @@
+/**********************************************************************
+ * 
+ *  This file is part of a fork of NIST Biometric Image Software. 
+ *  Modifications to the upstream source code are distributed under the
+ *  following terms: 
+ * 
+ *     Copyright 2013 Michael Chaberski
+ * 
+ *     Licensed under the Apache License, Version 2.0 (the "License");
+ *     you may not use this file except in compliance with the License.
+ *     You may obtain a copy of the License at
+ * 
+ *         http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ *     Unless required by applicable law or agreed to in writing, software
+ *     distributed under the License is distributed on an "AS IS" BASIS,
+ *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *     See the License for the specific language governing permissions and
+ *     limitations under the License.
+ * 
+ *  The original source code is a work in the public domain. The original 
+ *  license and disclaimers are below.
+ * 
+ *  BEGIN ORIGINAL LICENSE TEXT                                       
+ **********************************************************************/
+/*******************************************************************************
+
+License: 
+This software and/or related materials was developed at the National Institute
+of Standards and Technology (NIST) by employees of the Federal Government
+in the course of their official duties. Pursuant to title 17 Section 105
+of the United States Code, this software is not subject to copyright
+protection and is in the public domain. 
+
+This software and/or related materials have been determined to be not subject
+to the EAR (see Part 734.3 of the EAR for exact details) because it is
+a publicly available technology and software, and is freely distributed
+to any interested party with no licensing requirements.  Therefore, it is 
+permissible to distribute this software as a free download from the internet.
+
+Disclaimer: 
+This software and/or related materials was developed to promote biometric
+standards and biometric technology testing for the Federal Government
+in accordance with the USA PATRIOT Act and the Enhanced Border Security
+and Visa Entry Reform Act. Specific hardware and software products identified
+in this software were used in order to perform the software development.
+In no case does such identification imply recommendation or endorsement
+by the National Institute of Standards and Technology, nor does it imply that
+the products and equipment identified are necessarily the best available
+for the purpose.
+
+This software and/or related materials are provided "AS-IS" without warranty
+of any kind including NO WARRANTY OF PERFORMANCE, MERCHANTABILITY,
+NO WARRANTY OF NON-INFRINGEMENT OF ANY 3RD PARTY INTELLECTUAL PROPERTY
+or FITNESS FOR A PARTICULAR PURPOSE or for any purpose whatsoever, for the
+licensed product, however used. In no event shall NIST be liable for any
+damages and/or costs, including but not limited to incidental or consequential
+damages of any kind, including economic damage or injury to property and lost
+profits, regardless of whether NIST shall be advised, have reason to know,
+or in fact shall know of the possibility.
+
+By using this software, you agree to bear all risk relating to quality,
+use and performance of the software and/or related materials.  You agree
+to hold the Government harmless from any claim arising from your use
+of the software.
+
+*******************************************************************************/
+
+ 
+#ifndef _LITTLE_H
+#define _LITTLE_H
+
+/* Declarations of those functions in src/lib/utils/little.c with
+non-int return values (including, void return value).  Stdio.h is
+needed for FILE. */
+
+/* mchaberski 20131213
+ * This modification removes support for using the source directory 
+ * from which the binaries were built in a pathname expansion.
+ * See implementation of tilde_filename.
+ */
+/* #define INSTALL_DIR NBIS_INSTALL_DIR  */
+#define INSTALL_DATA_DIR INSTALL_RUNTIME_DATA_DIR
+/* #define INSTALL_NBIS_DIR "SED_INSTALL_NBIS_DIR_STRING" */
+
+extern int creat_ch(char *);
+extern void dptr2ptr_uchar(unsigned char **, unsigned char **, const int,
+                 const int);
+extern void erode(unsigned char *, const int, const int);
+extern int exists(char *);
+extern FILE *fopen_ch(char *, char *);
+extern FILE * fopen_noclobber(char *filename);
+extern char *get_datadir(void);
+extern int isverbose(void);
+extern char *lastcomp(char *);
+extern int linecount(char *);
+extern int linreg(int *, int *, const int, float *, float *);
+extern char *malloc_ch(const int);
+extern int open_read_ch(char *);
+extern void rcfill(unsigned char *, const int, const int);
+extern void rsblobs(unsigned char *, const int, const int);
+extern void setverbose(const int verbose);
+extern void sleepity(const int);
+extern void summary(const int, const int, int *, FILE *, const int, char *);
+extern char *tilde_filename(char [], const int);
+extern void usage_func(char *, char *);
+extern void Usage_func(const int, char *, char *);
+extern void write_ihdr_std(unsigned char *, const int, const int, const int,
+                 char *);
+
+#endif /* !_LITTLE_H */
Index: nbis-4.2.0/pcasys/p_rules.mak
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ nbis-4.2.0/pcasys/p_rules.mak	2013-12-17 13:29:27.000000000 -0500
@@ -0,0 +1,132 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
+#*******************************************************************************
+#
+# License: 
+# This software and/or related materials was developed at the National Institute
+# of Standards and Technology (NIST) by employees of the Federal Government
+# in the course of their official duties. Pursuant to title 17 Section 105
+# of the United States Code, this software is not subject to copyright
+# protection and is in the public domain. 
+#
+# This software and/or related materials have been determined to be not subject
+# to the EAR (see Part 734.3 of the EAR for exact details) because it is
+# a publicly available technology and software, and is freely distributed
+# to any interested party with no licensing requirements.  Therefore, it is 
+# permissible to distribute this software as a free download from the internet.
+#
+# Disclaimer: 
+# This software and/or related materials was developed to promote biometric
+# standards and biometric technology testing for the Federal Government
+# in accordance with the USA PATRIOT Act and the Enhanced Border Security
+# and Visa Entry Reform Act. Specific hardware and software products identified
+# in this software were used in order to perform the software development.
+# In no case does such identification imply recommendation or endorsement
+# by the National Institute of Standards and Technology, nor does it imply that
+# the products and equipment identified are necessarily the best available
+# for the purpose.
+#
+# This software and/or related materials are provided "AS-IS" without warranty
+# of any kind including NO WARRANTY OF PERFORMANCE, MERCHANTABILITY,
+# NO WARRANTY OF NON-INFRINGEMENT OF ANY 3RD PARTY INTELLECTUAL PROPERTY
+# or FITNESS FOR A PARTICULAR PURPOSE or for any purpose whatsoever, for the
+# licensed product, however used. In no event shall NIST be liable for any
+# damages and/or costs, including but not limited to incidental or consequential
+# damages of any kind, including economic damage or injury to property and lost
+# profits, regardless of whether NIST shall be advised, have reason to know,
+# or in fact shall know of the possibility.
+#
+# By using this software, you agree to bear all risk relating to quality,
+# use and performance of the software and/or related materials.  You agree
+# to hold the Government harmless from any claim arising from your use
+# of the software.
+#
+#*******************************************************************************
+# Project:              NIST Fingerprint Software
+# SubTree:              /NBIS/Main/pcasys
+# Filename:             p_rules.mak.src
+# Integrators:          Kenneth Ko
+# Organization:         NIST/ITL
+# Host System:          GNU GCC/GMAKE GENERIC (UNIX)
+# Date Created:         08/20/2006
+#
+# ******************************************************************************
+#
+# This rules file contains all the necessary variables to build "pcasys".
+#
+# ******************************************************************************
+THIS_DIR = $(subst //,/,$(dir $(CURDIR)/$(lastword $(MAKEFILE_LIST))))
+include $(THIS_DIR)/../rules.mak
+#
+# ------------------------------------------------------------------------------
+#
+PACKAGE		:= pcasys
+PROGRAMS	:= asc2bin bin2asc chgdesc cmbmcs datainfo \
+		eva_evt fixwts kltran lintran meancov mkoas \
+		mktran mlp mlpfeats oas2pics optosf optrws \
+		optrwsgw pcasys rwpics stackms
+LIBRARYS	:= mlp pca pcautil
+LIBRARY_NAMES	:= $(LIBRARYS:%=lib%.a)
+#
+# ------------------------------------------------------------------------------
+#
+DIR_ROOT_PACKAGE	:= $(DIR_ROOT)/$(PACKAGE)
+INSTALL_BIN_DIR		:= $(DIR_ROOT_PACKAGE)/bin
+INSTALL_LIB_DIR		:= $(DIR_ROOT_PACKAGE)/lib
+#
+# ------------------------------------------------------------------------------
+#
+DIR_SRC		:= $(DIR_ROOT_PACKAGE)/src
+DIR_INC		:= $(DIR_ROOT_PACKAGE)/include
+DIR_SRC_BIN	:= $(DIR_SRC)/bin
+DIR_SRC_LIB	:= $(DIR_SRC)/lib
+#
+DIR_OBJ		:= $(DIR_ROOT_PACKAGE)/obj
+DIR_BIN		:= $(DIR_ROOT_PACKAGE)/bin
+DIR_LIB		:= $(DIR_ROOT_PACKAGE)/lib
+#
+DIR_SRC_BIN_ALL	:= $(PROGRAMS:%=$(DIR_SRC_BIN)/%)
+DIR_SRC_LIB_ALL := $(LIBRARYS:%=$(DIR_SRC_LIB)/%)
+#
+BASE_DIR := \
+	$(DIR_SRC) \
+	$(DIR_SRC_BIN) \
+	$(DIR_SRC_LIB) \
+	$(DIR_SRC_LIB_ALL) \
+	$(DIR_SRC_BIN_ALL)
+#
+# ------------------------------------------------------------------------------
+#
+DIR_OBJ_SRC	:= $(DIR_OBJ)/src
+DIR_OBJ_SRC_BIN	:= $(DIR_OBJ_SRC)/bin
+DIR_OBJ_SRC_LIB	:= $(DIR_OBJ_SRC)/lib
+#
+DIR_OBJ_SRC_BIN_ALL	:= $(PROGRAMS:%=$(DIR_OBJ_SRC_BIN)/%)
+DIR_OBJ_SRC_LIB_ALL	:= $(LIBRARYS:%=$(DIR_OBJ_SRC_LIB)/%)
+#
+OBJ_BASE_DIR	:= $(DIR_OBJ) $(subst $(DIR_SRC),$(DIR_OBJ_SRC),$(BASE_DIR))
+#
+# ------------------------------------------------------------------------------
+#
Index: nbis-4.2.0/pcasys/src/bin/mkoas/Makefile
===================================================================
--- nbis-4.2.0.orig/pcasys/src/bin/mkoas/Makefile	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/pcasys/src/bin/mkoas/Makefile	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -70,7 +94,6 @@
 	$(EXPORTS_LIB_DIR)/libimage.a \
 	$(EXPORTS_LIB_DIR)/liban2k.a \
 	$(EXPORTS_LIB_DIR)/libjpegl.a \
-	$(EXPORTS_LIB_DIR)/libjpegb.a \
 	$(EXPORTS_LIB_DIR)/libwsq.a \
 	$(EXPORTS_LIB_DIR)/libihead.a \
 	$(EXPORTS_LIB_DIR)/libfet.a \
@@ -84,21 +107,21 @@
 endif
 #
 ifeq ($(NBIS_OPENJPEG_FLAG),-D__NBIS_OPENJPEG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libopenjpeg.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libopenjpeg.a
 endif
 #
 ifeq ($(NBIS_PNG_FLAG),-D__NBIS_PNG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libpng.a \
-	$(EXPORTS_LIB_DIR)/libz.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libpng.a \
+	#~ $(EXPORTS_LIB_DIR)/libz.a
 endif
 #
 EXT_INCS	:= -I$(EXPORTS_INC_DIR)
 #
-EXT_LIBS	:=  -lm
+EXT_LIBS	:=  -lm -ljpeg
 
 ifeq ($(MSYS_FLAG),-D__MSYS__)
 EXT_LIBS	:= \
Index: nbis-4.2.0/pcasys/src/bin/optrws/optrws.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ nbis-4.2.0/pcasys/src/bin/optrws/optrws.c	2013-12-17 13:29:27.000000000 -0500
@@ -0,0 +1,711 @@
+/**********************************************************************
+ * 
+ *  This file is part of a fork of NIST Biometric Image Software. 
+ *  Modifications to the upstream source code are distributed under the
+ *  following terms: 
+ * 
+ *     Copyright 2013 Michael Chaberski
+ * 
+ *     Licensed under the Apache License, Version 2.0 (the "License");
+ *     you may not use this file except in compliance with the License.
+ *     You may obtain a copy of the License at
+ * 
+ *         http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ *     Unless required by applicable law or agreed to in writing, software
+ *     distributed under the License is distributed on an "AS IS" BASIS,
+ *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *     See the License for the specific language governing permissions and
+ *     limitations under the License.
+ * 
+ *  The original source code is a work in the public domain. The original 
+ *  license and disclaimers are below.
+ * 
+ *  BEGIN ORIGINAL LICENSE TEXT                                       
+ **********************************************************************/
+/*******************************************************************************
+
+License: 
+This software and/or related materials was developed at the National Institute
+of Standards and Technology (NIST) by employees of the Federal Government
+in the course of their official duties. Pursuant to title 17 Section 105
+of the United States Code, this software is not subject to copyright
+protection and is in the public domain. 
+
+This software and/or related materials have been determined to be not subject
+to the EAR (see Part 734.3 of the EAR for exact details) because it is
+a publicly available technology and software, and is freely distributed
+to any interested party with no licensing requirements.  Therefore, it is 
+permissible to distribute this software as a free download from the internet.
+
+Disclaimer: 
+This software and/or related materials was developed to promote biometric
+standards and biometric technology testing for the Federal Government
+in accordance with the USA PATRIOT Act and the Enhanced Border Security
+and Visa Entry Reform Act. Specific hardware and software products identified
+in this software were used in order to perform the software development.
+In no case does such identification imply recommendation or endorsement
+by the National Institute of Standards and Technology, nor does it imply that
+the products and equipment identified are necessarily the best available
+for the purpose.
+
+This software and/or related materials are provided "AS-IS" without warranty
+of any kind including NO WARRANTY OF PERFORMANCE, MERCHANTABILITY,
+NO WARRANTY OF NON-INFRINGEMENT OF ANY 3RD PARTY INTELLECTUAL PROPERTY
+or FITNESS FOR A PARTICULAR PURPOSE or for any purpose whatsoever, for the
+licensed product, however used. In no event shall NIST be liable for any
+damages and/or costs, including but not limited to incidental or consequential
+damages of any kind, including economic damage or injury to property and lost
+profits, regardless of whether NIST shall be advised, have reason to know,
+or in fact shall know of the possibility.
+
+By using this software, you agree to bear all risk relating to quality,
+use and performance of the software and/or related materials.  You agree
+to hold the Government harmless from any claim arising from your use
+of the software.
+
+*******************************************************************************/
+
+/************************************************************************
+
+      PACKAGE:  PCASYS TOOLS
+
+      FILE:     OPTRWS.C
+
+      AUTHORS:  Craig Watson
+                cwatson@nist.gov
+                G. T. Candela
+      DATE:     08/01/1995
+      UPDATED:  05/09/2005 by MDG
+      UPDATED:  09/30/2008 by Kenenth Ko - add version option.
+
+#cat: optrws - Optimizes the regional weights that are then applied
+#cat:          to the eigen vectors.
+
+Optimizes the regional weights.  These weights form a hxw array,
+with each weight being associated with one 2x2-vector block of
+orientation vectors from the (2*w)x(2*h)-vector orientation array.  The use
+of the weights is that, in effect (up to an approximation), the
+appropriate elements of orientation arrays get multiplied by the
+weights before the computation of Euclidean distances.
+
+Optimization is done in the sense of minimizing the activation error
+rate that results when a set of fingerprints is classified, by a
+Probabilistic Neural Net (PNN) that uses the same set of fingerprints
+as prototypes, with leave-one-out, i.e. the particular fingerprint
+being classified is omitted from the prototypes set each time.  The
+activation error rate is a function of the regional weights.  Each
+time a particular set of regional weights is to be tried, the K-L
+feature vectors first transformed to make temporary new feature
+vectors that incorporate these regional weights and then the PNN is
+run using the temporary feature vectors.  The activation error rate
+used is the average, over the tuning set, of the squared difference
+between 1 and the normalized PNN activation of the actual class.  The
+optimization method used is a very simple form of gradient descent.
+
+At the "basepoints" along the optimization, the program records
+the following, as files in outfiles_dir:
+  The basepoints, as "matrix" file (dimensions h x w) bspt_0.bin,
+    bspt_1.bin, etc. or bspt_0.asc, bspt_1.asc, etc. (suffix indicates
+    binary or ascii, which is decided by the ascii_outfiles parm).
+  The estimated gradients at the basepoints, as "matrix" files (also
+    dimensions h x w) egrad_0.bin, etc. or egrad_0.asc, etc.
+  The activation error rates at the basepoints, as text files
+    acerr_0.txt, etc.
+
+When this program needs to compute error values at a set of points
+near a basepoint, in order to compute the estimated gradient, it can
+start several processes, which run simultaneously and each do part of
+the work.  If several processors are available, using this feature may
+save a considerable amount of time.  To use this, cause your parms
+file to set acerror_stepped_points_nprocs (number of processes to use
+when estimating gradient) to a value > 1; the value probably should be
+<= number of processors available.  If the operating system on your
+computer does not have the fork() system call and the execl() function
+(e.g., DOS), then optrws.c should be compiled with NO_FORK_AND_EXECL
+defined; this can be done by modifying the optrws Makefile so that the
+cc (C compiler) command uses -DNO_FORK_AND_EXECL as an additional
+argument.  If optrws.c is compiled this way, the part of the code that
+uses fork and execl, i.e.  the part that usually is run if
+acerror_stepped_points_nprocs > 1, will not be compiled, and a bit of
+code will be compiled that causes the program to print an error
+message and exit if acerror_stepped_points_nprocs > 1.
+
+*************************************************************************/
+
+/* <fixup.h> must be near the top of the list of includes; otherwise,
+   this source will not compile. */
+#include <stdio.h>
+#include <stdlib.h>
+#include <fixup.h>
+#include <sys/stat.h>
+#include <sys/types.h>
+#ifndef __MSYS__
+#include <sys/wait.h>
+#endif
+#include <unistd.h>
+#include <string.h>
+#include <math.h>
+#include <little.h>
+#include <usagemcs.h>
+#include <table.h>
+#include <optrws_r.h>
+#include <pca.h>
+#include <datafile.h>
+#include <ioutil.h>
+#include <version.h>
+
+
+static FILE *fp_messages;
+static int verbose_int;
+
+static struct {
+  char n_feats_use, n_klfvs_use, irw_init, irw_initstep, irw_stepthr,
+    grad_est_stepsize, n_linesearches, linesearch_initstep,
+    linesearch_stepthr, tablesize, acerror_stepped_points_nprocs,
+    verbose, klfvs_file, classes_file, eigvecs_file,
+    outfiles_dir, ascii_outfiles;
+} setflags;
+
+void optrws_read_parms(char [], int *, int *, float *, float *, float *,
+            float *, int *, float *, float *, int *, int *, int *,
+            char [], char [], char [], char [], int *);
+void optrws_check_parms_allset(void);
+void message_prog(char []);
+
+int main(int argc, char *argv[])
+{
+  FILE *fp;
+  char str[400], *prsfile, *datadir, *desc, klfvs_file[200],
+    klfvs_file_tf[200], classes_file[200], classes_file_tf[200],
+    eigvecs_file[200], eigvecs_file_tf[200], outfiles_dir[200],
+    outfiles_dir_tf[200], optrwsgw_path[200], rws_bspt_file[200],
+    rws_bspt_file_full_nbytes_str[6], n_feats_use_str[4],
+    n_klfvs_use_str[7], seg_start_str[4], seg_end_str[4],
+    grad_est_stepsize_str[40], temp_outfile[200];
+  unsigned char *classes;
+  int n_feats_use, n_klfvs_use, n_linesearches,
+    acerror_stepped_points_nprocs, i, ibspt, ascii_outfiles_int,
+    tablesize, optrws_pid = 0, *cproc_pids, pid, base_seg_size,
+    n_larger_segs, iproc, seg_size, seg_start, seg_end, nleft, ret,
+    fd, rws_bspt_file_full_nbytes, temp_outfile_full_nbytes;
+  float *klfvs, *eigvecs, irw_init, irw_initstep, irw_stepthr,
+    grad_est_stepsize, linesearch_initstep, linesearch_stepthr,
+    egrad_slen, egrad_len, *acerrors_stepped, irw, irw_step,
+    irw_prev = 0, acerror, acerror_prev, acerror_bspt, *rws,
+    *rws_bspt, *egrad, *dh_uvec, dhdist, linesearch_step, dhdist_prev = 0;
+  TABLE table;
+  int j, n_feats, evt_sz, w, h, n_cls, rwsz;
+  char **lcnptr;
+
+  if ((argc == 2) && (strcmp(argv[1], "-version") == 0)) {
+     getVersion();
+     exit(0);
+  }
+
+  Usage("<prsfile>");
+  prsfile = *++argv; /* required user parms file */
+  /* Read parameters, first from default optrws parms file and then
+  from user parms file.  Then, check that no parm was left unset. */
+  memset(&setflags, 0, sizeof(setflags));
+
+#ifdef __MSYS__
+  sprintf(str, "./optrws.prs");
+#else
+  datadir = get_datadir();
+  sprintf(str, "%s/parms/optrws.prs", datadir);
+#endif
+ 
+  optrws_read_parms(str, &n_feats_use, &n_klfvs_use, &irw_init,
+    &irw_initstep, &irw_stepthr, &grad_est_stepsize, &n_linesearches,
+    &linesearch_initstep, &linesearch_stepthr, &tablesize,
+    &acerror_stepped_points_nprocs, &verbose_int, klfvs_file,
+    classes_file, eigvecs_file, outfiles_dir, &ascii_outfiles_int);
+  optrws_read_parms(prsfile, &n_feats_use, &n_klfvs_use, &irw_init,
+    &irw_initstep, &irw_stepthr, &grad_est_stepsize, &n_linesearches,
+    &linesearch_initstep, &linesearch_stepthr, &tablesize,
+    &acerror_stepped_points_nprocs, &verbose_int, klfvs_file,
+    classes_file, eigvecs_file, outfiles_dir, &ascii_outfiles_int);
+  optrws_check_parms_allset();
+
+  w = ((WIDTH/WS)-2)/2;
+  h = ((HEIGHT/WS)-2)/2;
+  rwsz = w*h;
+  if(!(1 <= acerror_stepped_points_nprocs &&
+    acerror_stepped_points_nprocs <= rwsz)) {
+    sprintf(str, "acerror_stepped_points_nprocs is %d; must have\n\
+1 <= acerror_stepped_points_nprocs <= %d",
+      acerror_stepped_points_nprocs, rwsz);
+    fatalerr("optrws", str, NULL);
+  }
+
+  if(acerror_stepped_points_nprocs > 1) {
+#ifdef NO_FORK_AND_EXECL
+    fatalerr("optrws", "in this no-fork-and-execl version, \
+acerror_stepped_points_nprocs must be 1", NULL);
+#endif
+    sprintf(optrwsgw_path, "%s/optrwsgw", INSTALL_BIN_DIR);
+    optrws_pid = getpid();
+  }
+
+  strcpy(outfiles_dir_tf, tilde_filename(outfiles_dir, 0));
+  strcpy(klfvs_file_tf, tilde_filename(klfvs_file, 0));
+  strcpy(classes_file_tf, tilde_filename(classes_file, 0));
+  strcpy(eigvecs_file_tf, tilde_filename(eigvecs_file, 0));
+
+#ifdef __MSYS__
+  mkdir(outfiles_dir_tf);
+#else
+  mkdir(outfiles_dir_tf, 0700);
+#endif
+
+  sprintf(str, "%s/messages.txt", outfiles_dir_tf);
+  fp_messages = fopen_ch(str, "w");
+
+  /* Read data: K-L feature vectors and their classes, and
+  eigenvectors. */
+  message_prog("read K-L feature vectors, classes, and \
+eigenvectors\n");
+  matrix_read_submatrix(klfvs_file_tf, 0, n_klfvs_use - 1, 0,
+    n_feats_use - 1, &desc, &klfvs);
+  free(desc);
+  classes_read_subvector_ind(classes_file_tf, 0, n_klfvs_use - 1, &desc,
+    &classes, &n_cls, &lcnptr);
+  free(desc);
+  free_dbl_char(lcnptr, n_cls);
+  matrix_read_dims(eigvecs_file_tf, &n_feats, &evt_sz);
+  if(8*rwsz != evt_sz)
+    fatalerr("optrws","8*rwsz != evt_sz","sizes are incompatible");
+  matrix_read_submatrix(eigvecs_file_tf, 0, n_feats_use - 1, 0, evt_sz-1,
+    &desc, &eigvecs);
+  free(desc);
+
+  /* A simple linearly searched table, which will be used, when
+  optimizing irw and during line searches in the main optimization,
+  to look up previous results and thereby avoid some redoing of
+  error computations. */
+  table_init(&table, tablesize);
+
+  /* Optimize irw (initial regional weight), an initial value to
+  which to set all the regional weights at the start (later) of their
+  optimization as separate weights.  This is done by using a single
+  factor (squared) for the pnn and optimizing this factor: that is
+  approximately equivalent to using the factor for all weights. */
+  message_prog("optimize irw (initial value for all \
+regional weights)\n");
+  acerror_prev = optrws_pnn_acerror(n_feats_use, n_klfvs_use, klfvs,
+    classes, irw_init * irw_init, n_cls);
+  sprintf(str, "irw %f, acerror %f\n", irw_init, acerror_prev);
+  message_prog(str);
+  table_store(&table, irw_init, acerror_prev);
+  for(irw = irw_init + (irw_step = irw_initstep); ; irw += irw_step) {
+    if(!table_lookup(&table, irw, &acerror)) {
+      acerror = optrws_pnn_acerror(n_feats_use, n_klfvs_use, klfvs,
+        classes, irw * irw, n_cls);
+      table_store(&table, irw, acerror);
+    }
+    sprintf(str, "irw %f, acerror %f\n", irw, acerror);
+    message_prog(str);
+    if(acerror >= acerror_prev) {
+      if(fabs((double)irw_step) <= irw_stepthr)
+	break;
+      irw_step /= -2;
+    }
+    irw_prev = irw;
+    acerror_prev = acerror;
+  }
+  table_clear(&table);
+
+  /* The main part of the optimization of the regional weights.  Uses
+  a simple form of gradient descent, which appears to be sufficient
+  for this task, although it may be compute-intensive. */
+  /* Duplicate the best irw, which was just found, into all weights,
+  forming the 0'th "basepoint" for the subsequent optimization of
+  the weights.  Write 0'th basepoint. */
+  malloc_flt(&rws_bspt, rwsz, "optrws rws_bspt");
+  for(i = 0; i < rwsz; i++)
+    rws_bspt[i] = irw_prev;
+  sprintf(rws_bspt_file, "%s/bspt_0.%s", outfiles_dir_tf,
+    ascii_outfiles_int ? "asc" : "bin");
+  rws_bspt_file_full_nbytes = matrix_write(rws_bspt_file, "",
+    ascii_outfiles_int, h, w, rws_bspt);
+  sprintf(rws_bspt_file_full_nbytes_str, "%d",
+    rws_bspt_file_full_nbytes);
+
+  /* Compute and write activation error rate at 0'th basepoint. */
+  acerror_bspt = rws_to_acerror(rws_bspt, w, h, eigvecs, evt_sz, n_feats_use,
+    n_klfvs_use, klfvs, classes, n_cls);
+  sprintf(str, "acerror_bspt %f\n", acerror_bspt);
+  message_prog(str);
+  sprintf(str, "%s/acerr_0.txt", outfiles_dir_tf);
+  fp = fopen_ch(str, "w");
+  fprintf(fp, "%f\n", acerror_bspt);
+  fclose(fp);
+
+  /* Do n_linesearches iterations of {estimate gradient; line search
+  along resulting downhill-pointing line}. */
+
+  malloc_flt(&acerrors_stepped, rwsz, "optrws acerrors_stepped");
+  malloc_flt(&rws, rwsz, "optrws rws");
+  malloc_flt(&egrad, rwsz, "optrws egrad");
+  malloc_flt(&dh_uvec, rwsz, "optrws dh_uvec");
+  for(ibspt = 0; ibspt < n_linesearches; ibspt++) {
+    sprintf(str, "ibspt %d\n", ibspt);
+    message_prog(str);
+
+    /* Compute error values at points stepped to from the basepoint
+    along the coordinate axes.  These will be used to estimate the
+    gradient. */
+    message_prog("compute error at stepped-to points\n");
+    if(acerror_stepped_points_nprocs == 1)
+      /* Use one process, namely this process. */
+      for(i = 0; i < rwsz; i++) {
+        for(j = 0; j < rwsz; j++)
+           rws[j] = rws_bspt[j];
+	rws[i] += grad_est_stepsize;
+	acerrors_stepped[i] = rws_to_acerror(rws, w, h, eigvecs, evt_sz,
+          n_feats_use, n_klfvs_use, klfvs, classes, n_cls);
+	sprintf(str, "i = %d; acerrors_stepped[i] = %f\n", i,
+          acerrors_stepped[i]);
+	message_prog(str);
+      }
+    else {
+#ifndef NO_FORK_AND_EXECL
+      /* Use several processes (instances of the optrwsgw program) to
+      compute the error values at the stepped-to points.  Divide
+      the rwsz points into acerror_stepped_points_nprocs approximately
+      equal segments and assign one segment to each process. */
+
+      /* Start processes (child processes). */
+      message_prog("start child processes\n");
+      base_seg_size = rwsz / acerror_stepped_points_nprocs;
+      n_larger_segs = rwsz % acerror_stepped_points_nprocs;
+      malloc_int(&cproc_pids, rwsz, "optrws cprod_pids");
+      for(iproc = seg_start = 0; iproc <
+        acerror_stepped_points_nprocs; iproc++, seg_start = seg_end) {
+	seg_size = (iproc < n_larger_segs ? base_seg_size + 1 :
+          base_seg_size);
+	seg_end = seg_start + seg_size;
+	ret = fork();
+	if(ret) /* Still this process; ret is process id of
+                child process */
+	  cproc_pids[iproc] = ret;
+	else {    /* Child process.  Run an instance of optrwsgw. */
+	  sprintf(n_feats_use_str, "%d", n_feats_use);
+	  sprintf(n_klfvs_use_str, "%d", n_klfvs_use);
+	  sprintf(seg_start_str, "%d", seg_start);
+	  sprintf(seg_end_str, "%d", seg_end);
+	  sprintf(grad_est_stepsize_str, "%f", grad_est_stepsize);
+	  sprintf(temp_outfile, "/tmp/optrwsgw_optrws-pid-%d_%d",
+            optrws_pid, iproc);
+	  execl(optrwsgw_path, "optrwsgw", n_feats_use_str,
+            n_klfvs_use_str, klfvs_file_tf, classes_file_tf,
+            eigvecs_file_tf, rws_bspt_file,
+            rws_bspt_file_full_nbytes_str, seg_start_str, seg_end_str,
+            grad_est_stepsize_str, temp_outfile, (char *)0);
+	  /* If control gets here, execl has failed: */
+	  perror("execl");
+	  exit(1);
+	}
+      }
+
+      /* Wait for all child processes to finish.  Check pids returned
+      by wait against list of child process pids, since wait returns
+      can be caused by events other than child process exits. */
+      message_prog("wait for all child processes to exit\n");
+      for(nleft = acerror_stepped_points_nprocs; nleft;) {
+	pid = wait(NULL);
+	for(iproc = 0; iproc < acerror_stepped_points_nprocs; iproc++)
+	  if(pid == cproc_pids[iproc]) {
+	    nleft--;
+	    break;
+	  }
+      }
+      free(cproc_pids);
+
+      /* Read (and remove) the temporary output files of the child
+      processes, thereby building the complete vector of error values
+      at all rwsz stepped-to points.  Before reading any file here,
+      make sure it has the expected number of bytes. */
+      message_prog("read output files of child processes\n");
+      for(iproc = seg_start = 0; iproc <
+        acerror_stepped_points_nprocs; iproc++, seg_start = seg_end) {
+	seg_size = (iproc < n_larger_segs ? base_seg_size + 1 :
+          base_seg_size);
+	seg_end = seg_start + seg_size;
+	sprintf(temp_outfile, "/tmp/optrwsgw_optrws-pid-%d_%d",
+          optrws_pid, iproc);
+	temp_outfile_full_nbytes = seg_size * sizeof(float);
+	while(filesize(temp_outfile) != temp_outfile_full_nbytes)
+	  sleep(1);
+	fd = open_read_ch(temp_outfile);
+	read(fd, (float *)acerrors_stepped + seg_start,
+          temp_outfile_full_nbytes);
+	close(fd);
+	unlink(temp_outfile);
+      }
+#endif
+    }
+
+    /* From error values at stepped-to points, compute estimated
+    gradient (secant method) and its length, whence unit-length
+    (estimated-)downhill-pointing vector. */
+    message_prog("compute estimated gradient, its length, \
+whence dh_uvec\n");
+    for(i = 0, egrad_slen = 0.; i < rwsz; i++) {
+      egrad[i] = (acerrors_stepped[i] - acerror_bspt) /
+        grad_est_stepsize;
+      egrad_slen += egrad[i] * egrad[i];
+    }
+    egrad_len = sqrt((double)egrad_slen);
+    /* Estimated-downhill-pointing unit-length vector: */
+    for(i = 0; i < rwsz; i++)
+      dh_uvec[i] = -egrad[i] / egrad_len;
+
+    /* Write estimated gradient. */
+    sprintf(str, "%s/egrad_%d.%s", outfiles_dir_tf, ibspt,
+      ascii_outfiles_int ? "asc" : "bin");
+    matrix_write(str, "", ascii_outfiles_int, h, w, egrad);
+
+    /* Use a very simple line search method, which appears to be
+    sufficient for this particular task, to approximately find the
+    minimum, or at least, a local minimum, along the downhill-pointing
+    line.  Resulting point will be the next basepoint. */
+    message_prog("line search:\n");
+    acerror_prev = acerror_bspt;
+    sprintf(str, "  acerror_prev %f\n", acerror_prev);
+    message_prog(str);
+    for(dhdist = linesearch_step = linesearch_initstep; ; dhdist +=
+      linesearch_step) {
+      if(!table_lookup(&table, dhdist, &acerror)) {
+	for(i = 0; i < rwsz; i++)
+	  rws[i] = rws_bspt[i] + dhdist * dh_uvec[i];
+	acerror = rws_to_acerror(rws, w, h, eigvecs, evt_sz, n_feats_use,
+          n_klfvs_use, klfvs, classes, n_cls);
+	table_store(&table, dhdist, acerror);
+      }
+      sprintf(str, "  dhdist %f, acerror %f\n", dhdist, acerror);
+      message_prog(str);
+      if(acerror >= acerror_prev) {
+	if(fabs((double)linesearch_step) <= linesearch_stepthr)
+	  break;
+	linesearch_step /= -2;
+      }
+      dhdist_prev = dhdist;
+      acerror_prev = acerror;
+    }
+    table_clear(&table);
+    for(i = 0; i < rwsz; i++)
+      rws_bspt[i] += dhdist_prev * dh_uvec[i];
+
+    /* Write next basepoint. */
+    sprintf(rws_bspt_file, "%s/bspt_%d.%s",
+      outfiles_dir_tf, ibspt + 1, ascii_outfiles_int ?
+      "asc" : "bin");
+    rws_bspt_file_full_nbytes = matrix_write(rws_bspt_file, "",
+      ascii_outfiles_int, h, w, rws_bspt);
+    sprintf(rws_bspt_file_full_nbytes_str, "%d",
+      rws_bspt_file_full_nbytes);
+
+    /* Compute and write activation error rate at next basepoint. */
+    acerror_bspt = rws_to_acerror(rws_bspt, w, h, eigvecs, evt_sz, n_feats_use,
+      n_klfvs_use, klfvs, classes, n_cls);
+    sprintf(str, "acerror_bspt for basepoint %d: %f\n",
+      ibspt + 1, acerror_bspt);
+    message_prog(str);
+    sprintf(str, "%s/acerr_%d.txt", outfiles_dir_tf, ibspt + 1);
+    fp = fopen_ch(str, "w");
+    fprintf(fp, "%f\n", acerror_bspt);
+    fclose(fp);
+  }
+  free(rws_bspt);
+  free(rws);
+  free(egrad);
+  free(dh_uvec);
+  free(acerrors_stepped);
+
+  exit(0);
+}
+
+/********************************************************************/
+
+/* Reads an optrws parms file. */
+
+void optrws_read_parms(char parmsfile[], int *n_feats_use, int *n_klfvs_use,
+            float *irw_init, float *irw_initstep, float *irw_stepthr,
+            float *grad_est_stepsize, int *n_linesearches,
+            float *linesearch_initstep, float *linesearch_stepthr,
+            int *tablesize, int *acerror_stepped_points_nprocs,
+            int *verbose_int, char klfvs_file[], char classes_file[],
+            char eigvecs_file[], char outfiles_dir[], int *ascii_outfiles_int)
+{
+  FILE *fp;
+  char str[1000], *p, name_str[50], val_str[1000];
+
+  fp = fopen_ch(parmsfile, "r");
+  while(fgets(str, 1000, fp)) {
+    if((p = strchr(str, '#')))
+      *p = 0;
+    if(sscanf(str, "%s %s", name_str, val_str) < 2)
+      continue;
+
+    if(!strcmp(name_str, "n_feats_use")) {
+      *n_feats_use = atoi(val_str);
+      setflags.n_feats_use = 1;
+    }
+    else if(!strcmp(name_str, "n_klfvs_use")) {
+      *n_klfvs_use = atoi(val_str);
+      setflags.n_klfvs_use = 1;
+    }
+    else if(!strcmp(name_str, "irw_init")) {
+      *irw_init = atof(val_str);
+      setflags.irw_init = 1;
+    }
+    else if(!strcmp(name_str, "irw_initstep")) {
+      *irw_initstep = atof(val_str);
+      setflags.irw_initstep = 1;
+    }
+    else if(!strcmp(name_str, "irw_stepthr")) {
+      *irw_stepthr = atof(val_str);
+      setflags.irw_stepthr = 1;
+    }
+    else if(!strcmp(name_str, "grad_est_stepsize")) {
+      *grad_est_stepsize = atof(val_str);
+      setflags.grad_est_stepsize = 1;
+    }
+    else if(!strcmp(name_str, "n_linesearches")) {
+      *n_linesearches = atoi(val_str);
+      setflags.n_linesearches = 1;
+    }
+    else if(!strcmp(name_str, "linesearch_initstep")) {
+      *linesearch_initstep = atof(val_str);
+      setflags.linesearch_initstep = 1;
+    }
+    else if(!strcmp(name_str, "linesearch_stepthr")) {
+      *linesearch_stepthr = atof(val_str);
+      setflags.linesearch_stepthr = 1;
+    }
+    else if(!strcmp(name_str, "tablesize")) {
+      *tablesize = atoi(val_str);
+      setflags.tablesize = 1;
+    }
+    else if(!strcmp(name_str, "acerror_stepped_points_nprocs")) {
+      *acerror_stepped_points_nprocs = atoi(val_str);
+      setflags.acerror_stepped_points_nprocs = 1;
+    }
+    else if(!strcmp(name_str, "verbose")) {
+      if(!strcmp(val_str, "y"))
+	*verbose_int = 1;
+      else if(!strcmp(val_str, "n"))
+	*verbose_int = 0;
+      else
+	fatalerr("optrws_read_parms (file optrws.c)", "parm verbose \
+must be y or n", NULL);
+      setflags.verbose = 1;
+    }
+    else if(!strcmp(name_str, "klfvs_file")) {
+      strcpy(klfvs_file, val_str);
+      setflags.klfvs_file = 1;
+    }
+    else if(!strcmp(name_str, "classes_file")) {
+      strcpy(classes_file, val_str);
+      setflags.classes_file = 1;
+    }
+    else if(!strcmp(name_str, "eigvecs_file")) {
+      strcpy(eigvecs_file, val_str);
+      setflags.eigvecs_file = 1;
+    }
+    else if(!strcmp(name_str, "outfiles_dir")) {
+      strcpy(outfiles_dir, val_str);
+      setflags.outfiles_dir = 1;
+    }
+    else if(!strcmp(name_str, "ascii_outfiles")) {
+      if(!strcmp(val_str, "y"))
+	*ascii_outfiles_int = 1;
+      else if(!strcmp(val_str, "n"))
+	*ascii_outfiles_int = 0;
+      else
+	fatalerr("optrws_read_parms (file optrws.c)", "parm \
+ascii_outfiles must be y or n", NULL);
+      setflags.ascii_outfiles = 1;
+    }
+
+    else
+      fatalerr("optrws_read_parms (file optrws.c)",
+        "illegal parm name", name_str);
+  }
+}
+
+/********************************************************************/
+
+/* Checks that all parms are set. */
+
+void optrws_check_parms_allset()
+{
+  if(!setflags.n_feats_use)
+    fatalerr("optrws_check_parms_allset (file optrws.c)", "parm \
+n_feats_use was never set", NULL);
+  if(!setflags.n_klfvs_use)
+    fatalerr("optrws_check_parms_allset (file optrws.c)", "parm \
+n_klfvs_use was never set", NULL);
+  if(!setflags.irw_init)
+    fatalerr("optrws_check_parms_allset (file optrws.c)", "parm \
+irw_init was never set", NULL);
+  if(!setflags.irw_initstep)
+    fatalerr("optrws_check_parms_allset (file optrws.c)", "parm \
+irw_initstep was never set", NULL);
+  if(!setflags.irw_stepthr)
+    fatalerr("optrws_check_parms_allset (file optrws.c)", "parm \
+irw_stepthr was never set", NULL);
+  if(!setflags.grad_est_stepsize)
+    fatalerr("optrws_check_parms_allset (file optrws.c)", "parm \
+grad_est_stepsize was never set", NULL);
+  if(!setflags.n_linesearches)
+    fatalerr("optrws_check_parms_allset (file optrws.c)", "parm \
+n_linesearches was never set", NULL);
+  if(!setflags.linesearch_initstep)
+    fatalerr("optrws_check_parms_allset (file optrws.c)", "parm \
+linesearch_initstep was never set", NULL);
+  if(!setflags.linesearch_stepthr)
+    fatalerr("optrws_check_parms_allset (file optrws.c)", "parm \
+linesearch_stepthr was never set", NULL);
+  if(!setflags.tablesize)
+    fatalerr("optrws_check_parms_allset (file optrws.c)", "parm \
+tablesize was never set", NULL);
+  if(!setflags.acerror_stepped_points_nprocs)
+    fatalerr("optrws_check_parms_allset (file optrws.c)", "parm \
+acerror_stepped_points_nprocs was never set", NULL);
+  if(!setflags.verbose)
+    fatalerr("optrws_check_parms_allset (file optrws.c)", "parm \
+verbose was never set", NULL);
+  if(!setflags.klfvs_file)
+    fatalerr("optrws_check_parms_allset (file optrws.c)", "parm \
+klfvs_file was never set", NULL);
+  if(!setflags.classes_file)
+    fatalerr("optrws_check_parms_allset (file optrws.c)", "parm \
+classes_file was never set", NULL);
+  if(!setflags.eigvecs_file)
+    fatalerr("optrws_check_parms_allset (file optrws.c)", "parm \
+eigvecs_file was never set", NULL);
+  if(!setflags.outfiles_dir)
+    fatalerr("optrws_check_parms_allset (file optrws.c)", "parm \
+outfiles_dir was never set", NULL);
+  if(!setflags.ascii_outfiles)
+    fatalerr("optrws_check_parms_allset (file optrws.c)", "parm \
+ascii_outfiles was never set", NULL);
+}
+
+/********************************************************************/
+
+/* Writes message to the messages file, and if verbose also writes it
+to the standard output. */
+
+void message_prog(char message[])
+{
+  fprintf(fp_messages, "%s", message);
+  fflush(fp_messages);
+  if(verbose_int)
+    printf("%s", message);
+}
+
+/********************************************************************/
Index: nbis-4.2.0/pcasys/src/bin/pcasys/Makefile
===================================================================
--- nbis-4.2.0.orig/pcasys/src/bin/pcasys/Makefile	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/pcasys/src/bin/pcasys/Makefile	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -71,7 +95,6 @@
 	$(EXPORTS_LIB_DIR)/libimage.a \
 	$(EXPORTS_LIB_DIR)/liban2k.a \
 	$(EXPORTS_LIB_DIR)/libjpegl.a \
-	$(EXPORTS_LIB_DIR)/libjpegb.a \
 	$(EXPORTS_LIB_DIR)/libwsq.a \
 	$(EXPORTS_LIB_DIR)/libihead.a \
 	$(EXPORTS_LIB_DIR)/libfet.a \
@@ -85,21 +108,21 @@
 endif
 #
 ifeq ($(NBIS_OPENJPEG_FLAG),-D__NBIS_OPENJPEG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libopenjpeg.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libopenjpeg.a
 endif
 #
 ifeq ($(NBIS_PNG_FLAG),-D__NBIS_PNG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libpng.a \
-	$(EXPORTS_LIB_DIR)/libz.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libpng.a \
+	#~ $(EXPORTS_LIB_DIR)/libz.a
 endif
 #
 EXT_INCS	:= -I$(EXPORTS_INC_DIR) -I$(X11_INC)
 #
-EXT_LIBS	:=  -lm
+EXT_LIBS	:=  -lm -ljpeg
 
 ifeq ($(MSYS_FLAG),-D__MSYS__)
 EXT_LIBS	:= \
Index: nbis-4.2.0/pcasys/src/bin/pcasys/Makefile.X11
===================================================================
--- nbis-4.2.0.orig/pcasys/src/bin/pcasys/Makefile.X11	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/pcasys/src/bin/pcasys/Makefile.X11	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -57,7 +81,8 @@
 # Makefile contains the variables to build binary - "pcasysx".
 #
 # ******************************************************************************
-include ../../../p_rules.mak
+THIS_DIR := $(dir ./$(lastword $(MAKEFILE_LIST)))
+include $(THIS_DIR)/../../../p_rules.mak
 #
 PROGRAM	:= pcasysx
 #
@@ -86,16 +111,16 @@
 endif
 #
 ifeq ($(NBIS_OPENJPEG_FLAG),-D__NBIS_OPENJPEG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libopenjpeg.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libopenjpeg.a
 endif
 #
 ifeq ($(NBIS_PNG_FLAG),-D__NBIS_PNG__)
-LIBS	:= \
-	$(LIBS) \
-	$(EXPORTS_LIB_DIR)/libpng.a \
-	$(EXPORTS_LIB_DIR)/libz.a
+#~ LIBS	:= \
+	#~ $(LIBS) \
+	#~ $(EXPORTS_LIB_DIR)/libpng.a \
+	#~ $(EXPORTS_LIB_DIR)/libz.a
 endif
 #
 EXT_INCS	:= -I. -I$(EXPORTS_INC_DIR) -I$(X11_INC)
Index: nbis-4.2.0/pcasys/src/bin/pcasys/pcasys.c
===================================================================
--- nbis-4.2.0.orig/pcasys/src/bin/pcasys/pcasys.c	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/pcasys/src/bin/pcasys/pcasys.c	2013-12-17 13:29:27.000000000 -0500
@@ -66,7 +66,7 @@
 #include <usagemcs.h>
 #include <little.h>
 #include <jpegl.h>
-#include <jpegb.h>
+/* #include <jpegb.h> */
 #include <wsq.h>
 #include <nistcom.h>
 #include <memalloc.h>
Index: nbis-4.2.0/pcasys/src/lib/pca/Makefile
===================================================================
--- nbis-4.2.0.orig/pcasys/src/lib/pca/Makefile	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/pcasys/src/lib/pca/Makefile	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -53,7 +77,8 @@
 # Makefile contains the variables to build library - "libpca".
 #
 # ******************************************************************************
-include ../../../p_rules.mak
+THIS_DIR := $(dir ./$(lastword $(MAKEFILE_LIST)))
+include $(THIS_DIR)/../../../p_rules.mak
 #
 LIBRARY	:= libpca
 #
Index: nbis-4.2.0/pcasys/src/lib/pca/Makefile.X11
===================================================================
--- nbis-4.2.0.orig/pcasys/src/lib/pca/Makefile.X11	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/pcasys/src/lib/pca/Makefile.X11	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,27 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
 #*******************************************************************************
 #
 # License: 
@@ -53,7 +77,8 @@
 # Makefile contains the variables to build library - "libpcax".
 #
 # ******************************************************************************
-include ../../../p_rules.mak
+THIS_DIR := $(dir ./$(lastword $(MAKEFILE_LIST)))
+include $(THIS_DIR)/../../../p_rules.mak
 #
 LIBRARY	:= libpcax
 #
Index: nbis-4.2.0/pcasys/src/lib/pcautil/imgdec.c
===================================================================
--- nbis-4.2.0.orig/pcasys/src/lib/pcautil/imgdec.c	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/pcasys/src/lib/pcautil/imgdec.c	2013-12-17 13:29:27.000000000 -0500
@@ -79,7 +79,7 @@
 #include <img_io.h>
 #include <imgtype.h>
 #include <wsq.h>
-#include <jpegb.h>
+/* #include <jpegb.h> */
 #include <jpegl.h>
 #include <jpeglsd4.h>
 #include <ihead.h>
@@ -206,7 +206,9 @@
               class = *oclass;
            }
            break;
-
+/* ***************************
+ * 20131216 MC removed support for JPEGB
+ * ***************************
       case JPEGB_IMG:
            if((ret = jpegb_decode_mem(&ndata, &w, &h, &d, &ppi, &lossyflag,
                                      idata, ilen))){
@@ -241,7 +243,7 @@
               class = *oclass;
            }
            break;
-
+*/
 #ifdef __NBIS_JASPER__
       case JP2_IMG:
            if((ret = jpeg2k_decode_mem(&img_dat, &lossyflag, idata, ilen))){
Index: nbis-4.2.0/pcasys/src/lib/pcautil/little.c
===================================================================
--- nbis-4.2.0.orig/pcasys/src/lib/pcautil/little.c	2013-12-17 13:29:26.000000000 -0500
+++ nbis-4.2.0/pcasys/src/lib/pcautil/little.c	2013-12-17 13:29:27.000000000 -0500
@@ -1,3 +1,28 @@
+/**********************************************************************
+ * 
+ *  This file is part of a fork of NIST Biometric Image Software. 
+ *  Modifications to the upstream source code are distributed under the
+ *  following terms: 
+ * 
+ *     Copyright 2013 Michael Chaberski
+ * 
+ *     Licensed under the Apache License, Version 2.0 (the "License");
+ *     you may not use this file except in compliance with the License.
+ *     You may obtain a copy of the License at
+ * 
+ *         http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ *     Unless required by applicable law or agreed to in writing, software
+ *     distributed under the License is distributed on an "AS IS" BASIS,
+ *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *     See the License for the specific language governing permissions and
+ *     limitations under the License.
+ * 
+ *  The original source code is a work in the public domain. The original 
+ *  license and disclaimers are below.
+ * 
+ *  BEGIN ORIGINAL LICENSE TEXT                                       
+ **********************************************************************/
 /*******************************************************************************
 
 License: 
@@ -486,9 +511,15 @@
     sprintf(outstr, "%s/%s", homedir, str + 2);
   else if(add_path == 1)
     sprintf(outstr, "%s/%s", INSTALL_DATA_DIR, str);
-  else if(add_path == 2)
-    sprintf(outstr, "%s/%s", INSTALL_NBIS_DIR, str);
-  else if(add_path == 3)
+  else if(add_path == 2) {
+    /* sprintf(outstr, "%s/%s", INSTALL_NBIS_DIR, str);
+       mchaberski 20131213: This option would root the filename at 
+       the directory of the sources from which the binaries were built. 
+       Instead, we just collapse this into the same as add_path = 1, 
+       where the runtime data directory is prepended. 
+    */
+    sprintf(outstr, "%s/%s", INSTALL_DATA_DIR, str);
+  } else if(add_path == 3)
   { 
     s = basename(str);
     sprintf(outstr, "./%s", s);
Index: nbis-4.2.0/rules.mak
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ nbis-4.2.0/rules.mak	2013-12-17 13:29:27.000000000 -0500
@@ -0,0 +1,204 @@
+#**********************************************************************
+#
+# This file is part of a fork of NIST Biometric Image Software. 
+# Modifications to the upstream source code are distributed under the
+# following terms: 
+#
+#    Copyright 2013 Michael Chaberski
+#
+#    Licensed under the Apache License, Version 2.0 (the "License");
+#    you may not use this file except in compliance with the License.
+#    You may obtain a copy of the License at
+#
+#        http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS,
+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#    See the License for the specific language governing permissions and
+#    limitations under the License.
+#
+# The original source code is a work in the public domain. The original 
+# license and disclaimers are below.
+#
+# BEGIN ORIGINAL LICENSE TEXT
+#*******************************************************************************
+#
+# License: 
+# This software and/or related materials was developed at the National Institute
+# of Standards and Technology (NIST) by employees of the Federal Government
+# in the course of their official duties. Pursuant to title 17 Section 105
+# of the United States Code, this software is not subject to copyright
+# protection and is in the public domain. 
+#
+# This software and/or related materials have been determined to be not subject
+# to the EAR (see Part 734.3 of the EAR for exact details) because it is
+# a publicly available technology and software, and is freely distributed
+# to any interested party with no licensing requirements.  Therefore, it is 
+# permissible to distribute this software as a free download from the internet.
+#
+# Disclaimer: 
+# This software and/or related materials was developed to promote biometric
+# standards and biometric technology testing for the Federal Government
+# in accordance with the USA PATRIOT Act and the Enhanced Border Security
+# and Visa Entry Reform Act. Specific hardware and software products identified
+# in this software were used in order to perform the software development.
+# In no case does such identification imply recommendation or endorsement
+# by the National Institute of Standards and Technology, nor does it imply that
+# the products and equipment identified are necessarily the best available
+# for the purpose.
+#
+# This software and/or related materials are provided "AS-IS" without warranty
+# of any kind including NO WARRANTY OF PERFORMANCE, MERCHANTABILITY,
+# NO WARRANTY OF NON-INFRINGEMENT OF ANY 3RD PARTY INTELLECTUAL PROPERTY
+# or FITNESS FOR A PARTICULAR PURPOSE or for any purpose whatsoever, for the
+# licensed product, however used. In no event shall NIST be liable for any
+# damages and/or costs, including but not limited to incidental or consequential
+# damages of any kind, including economic damage or injury to property and lost
+# profits, regardless of whether NIST shall be advised, have reason to know,
+# or in fact shall know of the possibility.
+#
+# By using this software, you agree to bear all risk relating to quality,
+# use and performance of the software and/or related materials.  You agree
+# to hold the Government harmless from any claim arising from your use
+# of the software.
+#
+#*******************************************************************************
+# Project:              NIST Fingerprint Software
+# SubTree:              /NBIS/Main
+# Filename:             rules.mak.src
+# Integrators:          Kenneth Ko
+# Organization:         NIST/ITL
+# Host System:          GNU GCC/GMAKE GENERIC (UNIX)
+# Date Created:         08/20/2006
+# Date Updated:		03/27/2007
+#                       10/23/2007
+#                       04/02/2008
+#			09/09/2008 by Joseph C. Konczal
+#                       12/10/2008 by Kenneth Ko - Fix to support 64-bit
+#                       12/16/2008 by Kenneth Ko - Add command line option for
+#                                                  HPUX
+#			05/04/2011 by Kenneht Ko
+#
+# ******************************************************************************
+#
+# This rules file contains all the necessary variables to build "NBIS".
+#
+# ******************************************************************************
+TOP := $(dir $(lastword $(MAKEFILE_LIST)))
+TOP := $(subst //,/,$(TOP))
+TOP := $(patsubst %/,%,$(TOP))
+SHELL	:= /bin/sh
+MKDIR_P                     := mkdir -p
+#
+# ------------------------------------------------------------------------------
+#
+PROJ_NAME	:= nbis
+
+DEBIAN_PKG_NAME := nbis
+
+#
+# ---------------------- Variables set by setup.sh------------------------------
+#
+PACKAGES			:= commonnbis an2k bozorth3 imgtools mindtct nfseg nfiq pcasys
+#
+DIR_ROOT			:= $(TOP)
+X11_FLAG			:= 0
+X11_INC				:= /usr
+X11_LIB				:= /usr
+
+ENDIAN_FLAG			:= -D__NBISLE__
+NBIS_OPENJPEG_FLAG		:= -D__NBIS_OPENJPEG__
+NBIS_PNG_FLAG			:= -D__NBIS_PNG__
+
+# DESTDIR defaults to empty string
+INSTALL_ROOT                    ?= $(DESTDIR)/usr
+INSTALL_ROOT_INC_DIR		:= $(INSTALL_ROOT)/include/$(DEBIAN_PKG_NAME)
+INSTALL_ROOT_BIN_DIR		:= $(INSTALL_ROOT)/bin
+INSTALL_ROOT_LIB_DIR		:= $(INSTALL_ROOT)/lib/$(DEB_HOST_MULTIARCH)
+INSTALL_RUNTIME_DATA_DIR	:= $(INSTALL_ROOT)/share/$(DEBIAN_PKG_NAME)
+INSTALL_ROOT_MAN_DIR        := $(INSTALL_ROOT)/share/man/man1
+
+INSTALL_RUNTIME_DATA_DIR_FLAG   := -DINSTALL_RUNTIME_DATA_DIR=\"$(INSTALL_RUNTIME_DATA_DIR)\"
+INSTALL_BIN_DIR_FLAG            := -DINSTALL_BIN_DIR=\"$(INSTALL_ROOT_BIN_DIR)\"
+AN2K_RUNTIME_DATA_DIR  := $(INSTALL_RUNTIME_DATA_DIR)/an2k
+AN2K_RUNTIME_DATA_DIR_FLAG := -DAN2K_RUNTIME_DATA_DIR=\"$(AN2K_RUNTIME_DATA_DIR)\"
+#
+# ------------------------------------------------------------------------------
+#
+EXPORTS_DIR	:= $(DIR_ROOT)/exports
+EXPORTS_INC_DIR	:= $(EXPORTS_DIR)/include
+EXPORTS_LIB_DIR	:= $(EXPORTS_DIR)/lib
+EXPORTS_DIRS	:= $(EXPORTS_DIR) \
+		$(EXPORTS_INC_DIR) \
+		$(EXPORTS_LIB_DIR) 
+# 
+# ------------------------------------------------------------------------------
+#
+RUNTIME_DATA_PACKAGES		:= an2k nfiq pcasys
+RUNTIME_DATA_DIR		:= runtimedata
+#
+# ------------------------------------------------------------------------------
+#
+DOC_DIR		:= $(DIR_ROOT)/doc
+DOC_CATS_DIR	:= $(DOC_DIR)/catalogs
+DOC_INSTALL_DIR	:= $(DOC_DIR)/install
+DOC_REFS_DIR	:= $(DOC_DIR)/refs
+DOC_DIRS	:= $(DOC_REFS_DIR)
+#
+# ------------------------------------------------------------------------------
+#
+PCASYS_X11_DIR	:= $(DIR_ROOT)/pcasys/obj/src/lib/pca/x11
+#
+# ------------------------------------------------------------------------------
+#
+MAN_SRC_DIR		:= $(DIR_ROOT)/man/man1
+#
+# ------------------------------------------------------------------------------
+#
+#EXTRA_DIR	:= $(MAN_DIR) \
+#		$(DOC_DIR)
+#
+# ------------------------------------------------------------------------------
+#
+DIR_ROOT_BUILDUTIL:= $(DIR_ROOT)/buildutil
+#
+# ------------------------------------------------------------------------------
+#
+CC		:= $(shell which gcc)
+DEB_BUILD_HARDENING := 1
+DEB_BUILD_HARDENING_FORTIFY := 1
+CFLAGS		:= -O2 -w -ansi -D_FORTIFY_SOURCE=2 -D_POSIX_SOURCE $(ENDIAN_FLAG) $(NBIS_JASPER_FLAG) $(NBIS_OPENJPEG_FLAG) $(NBIS_PNG_FLAG) $(ARCH_FLAG) $(INSTALL_RUNTIME_DATA_DIR_FLAG) $(INSTALL_BIN_DIR_FLAG) $(AN2K_RUNTIME_DATA_DIR_FLAG)
+#CFLAGS	:= -g $(ENDIAN_FLAG) $(NBIS_JASPER_FLAG) $(NBIS_PNG_FLAG) $(ARCH_FLAG)
+CDEFS		:=
+CCC		:= $(CC) $(CFLAGS) $(CDEFS)
+LDFLAGS	:= $(LDFLAGS) $(ARCH_FLAG) -lopenjpeg -lpng
+M		:= -M
+#M		:= -MM
+#
+UNAME		:= $(shell uname)
+#
+AWK		:= $(shell which awk)
+#
+OWNER		:= $(shell whoami)
+GROUP		:= $(shell id -gn)
+#
+PERMS1	:= 755
+PERMS2	:= 644
+#
+INSTALL_CMD := $(shell which install)
+INSTALL		:= $(shell which install)
+INSTALL_BIN	:= $(INSTALL) -p -o $(OWNER) -g $(GROUP) -m $(PERMS1) 
+INSTALL_LIB	:= $(INSTALL) -p -o $(OWNER) -g $(GROUP) -m $(PERMS2)
+RM		:= $(shell which rm) -f
+MV		:= $(shell which mv) -f
+CP		:= $(shell which cp)
+CAT		:= $(shell which cat)
+SED		:= $(shell which sed)
+CHMOD		:= $(shell which chmod)
+MKDIR		:= $(shell which mkdir)
+TOUCH		:= $(shell which touch)
+AR		:= $(shell which ar)
+#
+
+MANPAGES := cmbmcs.1 mlp.1 nfseg.1 chgdesc.1 datainfo.1 mktran.1 sd_rfmt.1 iaf2an2k.1 asc2bin.1 diffbyts.1 djpegl.1 znormpat.1 kltran.1 intr2not.1 optrwsgw.1 rwpics.1 rdwsqcom.1 djpeglsd.1 mkoas.1 optrws.1 optosf.1 cropcoeff.1 an2k2txt.1 an2ktool.1 bozorth3.1 lintran.1 dwsq.1 dlwsqcom.1 cjpegl.1 histogen.1 mindtct.1 fixwts.1 chkan2k.1 rgb2ycc.1 mlpfeats.1 an2k2iaf.1 stackms.1 pcasys.1 cwsq.1 txt2an2k.1 bin2asc.1 wrwsqcom.1 fing2pat.1 ycc2rgb.1 nfiq.1 meancov.1 dwsq14.1 not2intr.1 eva_evt.1 oas2pics.1 znormdat.1
Index: nbis-4.2.0/upstream-changelog.txt
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ nbis-4.2.0/upstream-changelog.txt	2013-12-17 13:29:27.000000000 -0500
@@ -0,0 +1,374 @@
+*******************************************************************************
+
+License: 
+This software and/or related materials was developed at the National Institute
+of Standards and Technology (NIST) by employees of the Federal Government
+in the course of their official duties. Pursuant to title 17 Section 105
+of the United States Code, this software is not subject to copyright
+protection and is in the public domain. 
+
+This software and/or related materials have been determined to be not subject
+to the EAR (see Part 734.3 of the EAR for exact details) because it is
+a publicly available technology and software, and is freely distributed
+to any interested party with no licensing requirements.  Therefore, it is 
+permissible to distribute this software as a free download from the internet.
+
+Disclaimer: 
+This software and/or related materials was developed to promote biometric
+standards and biometric technology testing for the Federal Government
+in accordance with the USA PATRIOT Act and the Enhanced Border Security
+and Visa Entry Reform Act. Specific hardware and software products identified
+in this software were used in order to perform the software development.
+In no case does such identification imply recommendation or endorsement
+by the National Institute of Standards and Technology, nor does it imply that
+the products and equipment identified are necessarily the best available
+for the purpose.
+
+This software and/or related materials are provided "AS-IS" without warranty
+of any kind including NO WARRANTY OF PERFORMANCE, MERCHANTABILITY,
+NO WARRANTY OF NON-INFRINGEMENT OF ANY 3RD PARTY INTELLECTUAL PROPERTY
+or FITNESS FOR A PARTICULAR PURPOSE or for any purpose whatsoever, for the
+licensed product, however used. In no event shall NIST be liable for any
+damages and/or costs, including but not limited to incidental or consequential
+damages of any kind, including economic damage or injury to property and lost
+profits, regardless of whether NIST shall be advised, have reason to know,
+or in fact shall know of the possibility.
+
+By using this software, you agree to bear all risk relating to quality,
+use and performance of the software and/or related materials.  You agree
+to hold the Government harmless from any claim arising from your use
+of the software.
+
+*******************************************************************************
+
+
+                                 Change History
+                   ----------------------------------------------
+
+10/30/2013  NBIS: Rel 4.2.0
+            - Fixed compile issues with MAC OSX 10.8.X. Forced OpenJPEG only 
+              uses LMCS-1.
+            - Fixed 32bit OpenJPEG build issue on a 64bit LINUX environment 
+              when --m32 option is set. 
+            - Remove return statements from void-returning functions in 
+              xytrepsc.c, whose presence raises an error in newer compilers.
+            - Add -l compile option to link with X11 for PCASYS application.
+            - Add missing X11 include for libpca build.  
+            - Enhancements and bug fixes for MSYS installation.
+
+05/21/2012  NBIS: Rel 4.1.0
+            - New installation instruction for LINUX, MAC OSX and Windows
+              operating system.
+            - Remove operating system architecture check from setup.sh.
+            - Default build with -fPIC compiling option.
+            - Fixed OpenJPEG build issue relate to -m32 and -m64 compiling
+              operation.
+            - Bug fix on libnbis.a creation.
+            - JASPER library support is deprecated.
+            - Add --without-OPENJPEG option to disable OpenJPEG image 
+              format support.
+            - Add two new functions (lfs2nist_format and bz_prune) to support 
+              in-memory write/read on minutiae detection to XYT structure.
+
+10/16/2011  NBIS: Rel 4.0.1
+            - Correct a flaw introduced in Rel 4.0.0 where a binary object
+              larger than four bytes fails to be read from an AN2K record.
+
+09/15/2011
+            NBIS: Rel 4.0.0
+            - Updated OpenJPEG library support from version 1.3 to 1.4.
+            - Added support for scanning an AN2K record from a memory buffer. 
+              This change adds a few functions that are substitutes for
+              fread(3), ftell(3), and fgetc(3) in order to read/scan from a 
+              file or buffer, making the change to the existing read routines 
+              simpler.
+            - New option is implemented for "make install LIBNBIS=[yes|no]". 
+              If you enable the "LIBNBIS=no" option during make install, it 
+              will create the following libraries: 
+                   liban2k.a libclapck.a libfft.a libioutil.a libmindtct.a
+                  libnfseg.a libpcautil.a libutil.a libbozorth3.a libf2c.a 
+                  libihead.a libjpegb.a libmlp.a libopenjpeg.a libpcax.a 
+                  libwsq.a libcblas.a libfet.a libimage.a libjpegl.a 
+                  libnfiq.a libpca.a libpng.a libz.a
+              If you enable the "LIBNBIS=yes" option during make install, the 
+              build process will combine all the libraries listed above and 
+              build a libnbis.a.
+            - Included in this release of NBIS is the NIST point cloud 
+              visualization bundle which is designed to allow users to
+              visualize fingerprint images using either 3D point cloud data
+              or convert legacy 2D RAW fingerprint images (*.RAW) into a 2.5D 
+              simulated 3D images within the viewer.
+              The NIST point cloud visualization bundle contains two 
+              applications:
+                  1) MeshLab (NIST modified version) - is a point cloud 
+                          visualization tool that reads an input file with 
+                          NIST-specific point cloud format and provides the 
+                          user with point cloud editing, filtering and
+                          rendering capabilities.
+                  2) Point Cloud Creator - this application allows the user to 
+                          convert a RAW fingerprint image to the NIST-specific 
+                          point cloud file format.
+             - The SIVV library and utility application have been updated with 
+               improvements to memory management, speed, and efficiency. SIVV 
+               now uses less memory when processing images and is capable of 
+               processing those images more quickly than in previous versions. 
+               Additionally, the segmentation/centering feature has been improved 
+               and now provides more accurate results. Finally, two new 
+               command-line switches have been added which allow the user to 
+               specify which windowing function to be used by the algorithm as 
+               well as suppress console (screen) output.
+             - Included in this release of NBIS is the source code for the final 
+               release C++ version of ANSI-NIST ITL Part 1 and Part 2 (XML) data
+               conversion tool. Improvement from last version include:
+                  - Added and improved API
+                  - Added new namespace for EBTS and DOJ.
+                  - Improved validation for subfield and item elements
+                  - Enhanced regular-expressions for string comparison
+                  - Added new function to validate min and max of item value
+                  - Added new type 1 and type 2 fields for validation
+               See README file under <FINAL INSTALLATION DIR>/misc/an2kconvert 
+               directory for installation, usage, and examples.
+             - Big-endian compilation is no longer being tested and support as 
+               an official release. Warning: This version of NBIS may compile on 
+               a big-endian machine; however, undesired behavior may occur. Use 
+               NBIS at your own risk. 
+
+10/13/2010
+            NBIS: Rel 3.3.1
+            - Separated the README file to INSTALL and CHANGELOG.
+            - Updated the setup instruction.
+            - The openjpeg implementation is still under evaluation.  While the
+              cjp2k and djp2k applications are included, the default parameters
+              switches for lossy and lossless compression, as listed under notes
+              for Rel 3.3.0, are not available.
+            - Fix to WSQ compression algorithm variance computation that fixes 
+              a problem with images captured near the edge of larger platen 
+              capture devices. The compression of these images could cause 
+              severe degradation or complete loss of the original image. To 
+              date this was mostly noticed in the two thumb captures in 
+              Identification Flats.
+            - Please use Test_3.3.0 test branch to test against this NBIS release.
+
+09/15/2010
+            NBIS: Rel 3.3.0
+            - NBIS now builds by default using OpenJPEG libraries for JPEG2000
+              standard implementation.  To build instead with Jasper libraries,
+              use appropriate setup.sh switch.  Note: must run 'make clean'
+              between builds using --with-OPENJPEG and --with-JASPER; otherwise
+              jpeg2000 libraries will not be updated and build will fail.
+            - Codecs for OpenJPEG compression/decompression have file names
+              cjp2k/djp2k.  cjp2k has been modified to include switches that
+              define default parameters for lossy and lossless compression
+              of 1000 ppi fingerprint images.  See man pages for details.
+              Also, OpenJPEG codecs require LibTIFF library to build and run.
+              For Windows platforms, download the LibTIFF source, build, and
+              then copy libtiff.a to the <FINAL INSTALLATION DIR>\openjpeg\src
+              \lib\openjpeg\libs\libtiff directory.
+            - Jasper implementations for Jpeg 2000 standard are now included
+              as part of this suite: jp2codec (for compression and decompression),
+              imgcmp, and imginfo.  These apps are built when the --with-JASPER
+              switch is used for setup.sh.
+            - A new application has been included in this release of NBIS, histogen.
+              This application processes one or more ANSI/NIST 2007 files and builds
+              a histogram of the number of times each field and sub-field appears
+              within that set of ANSI/NIST files.
+              For examples of the various field types, see document NIST Special
+              Publication 500-271 ANSI/NIST-ITL 1-2007.
+              Histogen depends on the an2k2txt executable as a prerequisite.
+              Please ensure that an2k2txt is in your environment PATH.
+            - For all Windows platforms, must upgrade to latest version of
+              MinGW/GCC.  To install manually on 32-bit platform, unzip the
+              following archives into <ROOT_DRIVE>:/mingw.  Note that g++ compiler
+              is required to build LibTIFF library under Windows.
+                gcc-core 4.5.0
+                gcc-c++  4.5.0
+                binutils 2.20.1
+                libmpc   0.8.1
+                libmpfr  2.4.1
+                libgmp   5.0.1
+                mingwrt  3.18  (dev)
+                win32api 3.14  (dev)
+
+              To install MinGW/GCC on 64-bit Windows, see instructions above.
+            - Included in this release of NBIS is the source code for the Beta-4
+              (Candidate final) C++ version of ANSI-NIST ITL Part 1 and Part 2 (XML)
+              data conversion tool. See README file under <FINAL INSTALLATION DIR>/
+              misc/an2kconvert directory for installation, usage, and examples.
+
+02/01/2010
+            NBIS: Rel 3.2.0
+            - NBIS suite is now available for Windows.  In order to build
+              and run on Windows platform, must install MinGW, MSYS, and upgrade
+              to gcc version 4.4.x.  These tools are free and available for
+              download. Support includes WinXP Pro, Windows 7, both 32- and
+              64-bit platforms.
+            - The Spectral Image Validation/Verification (SIVV) Metric for
+              Fingerprints application has been added to this NBIS suite.
+              It requires a separate build process and other dependencies in
+              order to build and run.  See the accompanying README under the
+              SIVV directory.
+            - Added new app under an2k named chkan2k.  See man page for usage
+              and description. *Warning* This application is in late beta
+              stages and still undergoing changes and testing.
+            - CropCoeff app: wsq_crop_qdata() finds and copies the coefficients
+              that need to be retained for the crop.  Instead of blindly
+              stepping through all the coefficients as was done in the old
+              version, the new version jumps directly to the regions needed,
+              and uses memcpy on just the chunks required.  Outside of the
+              Huffman coding, this is the other main time sink for CropCoeff.
+            - Added benchmarking to test scripts (*.sh).  A new shell script
+              bench/exec_time.sh was added.  When test scripts run, the
+              execution time(s) is entered into a log file, one for each test
+              script.  There is also a "master" log file that is created and
+              updated when master_test.sh is run.  Each files' content is 
+              delimited by ; (semicolon) for easy import into a spreadsheet.
+            - There are file dependencies generated and required by the test
+              scripts.  For example, the optrws application as run from the
+              optrws_test.sh script requires files created by the eva_evt and
+              lintran applications.  Running master_test.sh handles these
+              dependencies.
+            - Master Test runtime tip for Linux: pcasysx will run indefinitely.
+              You will know it's running by the images flashed on the display.
+              In order for master_test.sh script to run to completion, kill the
+              pcasysx process only.
+            - Test scripts require the following environment variables to be
+              set: FINAL_INSTALLATION_BIN_DIR and NBIS_TEST_DIR.  On Windows
+              platform, environment variables may be set by either 1) Advanced
+              tab of System Properties dialog or 2) export command in the
+              <MSYS install dir>\etc\profile file.
+            - Windows 64-bit applications are built without any compiler
+              optimizations as this is not fully supported by GNU gcc on the
+              Windows 64-bit platform.
+            - MSYS does not (yet) support UNIX-style Manpages documentation
+              format. Therefore, on Windows platform, you can either install
+              the MSYS support (internet search "mingw FAQ man") or install
+              Cygwin. For Cygwin, simply run the "man" command as described in
+              the "User's Guide to NIST Biometric Image Software (NBIS)" in a
+              Cygwin window. 
+            - *WARNING* While the following applications will build on
+              64-bit platforms as part of the NBIS build process, they exhibit
+              64-bit operational issues and should not be used until further
+              notice:
+                - eva_evt
+                - fixwts
+                - kltran
+                - lintran
+                - meancov
+                - mkoas
+           - Note: The "User's Guide to NIST Biometric Image Software (NBIS)"
+             under the doc/ directory is pending to update in the next release.
+
+05/29/2009
+            NBIS     : Rel 3.1.0
+            - Integrated NFSEG and BOZORTH3 to NBIS.
+              It has been determined that the export control restriction
+              did not apply to the NFSEG and BOZORTH3 software, due to both
+              being outside the scope of EAR(see Part 734.3 of the EAR for 
+              exact details); they are freely distributed and considered 
+              public domain.
+            - Modified the NBIS to support 64 bit systems.
+            - Modified the NFIQ application to support a raw image as input.
+            - Modified the RDIMGWH application output format.
+            - Made changes to better detect corrupt WSQ encoded images 
+              during decoding.
+            - Modified the build system to build on MSYS with MinGW on
+              WIN32 machine.
+            - Added setup option to allow user to specific to compile
+              either 32bit or 64bit machine.
+            - Added setup option to disable JASPER and PNG libraries 
+              support
+            - Added cjp2k and djp2k applications to encode and decode
+              JPEG2000 image format. This is based on OPENJPEG library.
+
+            - Note: The "User's Guide to NIST Biometric Image
+                    Software (NBIS)" under the doc/ directory
+                    is pending to update in the next release.
+
+            - Warning: The CWSQ and DWSQ applications are only 
+                       experimental on 64-bit OS. Use at your
+                       own risk.
+
+10/30/2008
+            NBIS Non-Export Control    : Rel 3.0.0
+            - Renamed an2k7 naming convention back to an2k for 
+              compatibility issues.
+            - Added code to the AN2K library to select specific
+              records from ANSI/NIST files based on metadata
+              included in the record, and to parse new command
+              line options used to control those selections.
+            - Corrected a subtle but serious typographic error in
+              the copy_ANSI_NIST() function in the AN2K library.
+            - Modified DPYAN2K to use the new record selection
+              code in the AN2K library, so that it will display
+              only the specified images.  Also added display of
+              segmentation data if present in SEG or ASEG fields
+              of Type-14 records.
+            - Modified AN2K library to be able to insert complex
+              structures, i.e., records, fields, subfields, into
+              an AN2K structure from memory instead of only from
+              a file.
+            - Added support to AN2K library for 8-bit JP2 images,
+              in addition to previously supported 24-bit images.
+            - Added CORCOEFF application, which extracts the individual 
+              fingerprint images from the WSQ compressed slap images
+              (left/right hand, thumbs) in ANSI/NIST 2007 Type-14
+              records into individual WSQ files without
+              decompressing/recompressing the slap images.
+            - Added the RDIMGWH application, which finds the image
+              width and height within an image file or specified
+              images in ANSI/NIST files, and displays them.
+            - Modified NFIQ to use new AN2K library record
+              selection options, to write results into the NQM
+              field of Type-14 records, and to convert Type-4
+              records to Type-14 when necessary in order to
+              add the NQM field.
+            - Updated test scripts and added new test data for
+              DPYAN2K and NFIQ, to test the added functionality.
+            - Updated test script and added new test data for
+              DPYIMAGE to test it more thoroughly.
+            - Added a test script for the new RDIMGWH and CORPCOEFF
+              applications.
+ 
+            - Note: The "User's Guide to NIST Biometric Image
+                    Software (NBIS)" under the doc/ directory
+                    is pending to update in the next release.
+
+            - Warning: This Software is working only on a 32-bit
+                       OS. If you are compile on a 64-bit OS, it
+                       will not work properly. We are in the
+                       process on resolving this issue in the
+                       upcoming release.
+
+06/04/2008
+            NBIS Non-Export Control    : Rel 2.0.0
+            - New application to takes a WSQ compressed image file and
+              deletes all comments in the file.
+
+02/26/2008
+            NBIS Non-Export Control    : Rel 2.0.0
+            - Update to ANSI/NIST-ITL 1-2007 standards.
+
+10/24/2007
+            NBIS Non-Export Control    : Rel 1.2.0
+            - Modified the build system and the source code which allow the 
+              NBIS software to detect and build on a HP-UX platform.
+            - Updated the AN2K package to handle Type 17 and 99 records.
+            - Added code to read comments that are inserted in the WSQd
+              compressed file after the last data block. (there are 3 data 
+              blocks in a WSQ compressed file) and before the end of image
+              (EOI) marker. Previously, these comments caused the code
+              to exit with an error.
+
+04/04/2007
+            NBIS Non-Export Control    : Rel 1.1.0
+            - Enhanced the build system.
+            - Removed duplicate jpeglib.h from IMGTOOLS.  This header file
+              already provide on IJG  package.
+            - Updated the NFIQ test result because of added opt on the
+              NFIQ application.
+            - Updated the "User's Guide to NIST Biometric Image Software".
+
+03/05/2007  
+            NBIS Non-Export Control    : Rel 1.0.0
+            - NBIS Non-Export Control first release. 
+
